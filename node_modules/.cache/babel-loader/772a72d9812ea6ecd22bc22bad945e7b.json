{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Select from 'react-select'; //// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst countryISOMapping = {\n  AF: 'AFG',\n  AX: 'ALA',\n  AL: 'ALB',\n  DZ: 'DZA',\n  AS: 'ASM',\n  AD: 'AND',\n  AO: 'AGO',\n  AI: 'AIA',\n  AQ: 'ATA',\n  AG: 'ATG',\n  AR: 'ARG',\n  AM: 'ARM',\n  AW: 'ABW',\n  AU: 'AUS',\n  AT: 'AUT',\n  AZ: 'AZE',\n  BS: 'BHS',\n  BH: 'BHR',\n  BD: 'BGD',\n  BB: 'BRB',\n  BY: 'BLR',\n  BE: 'BEL',\n  BZ: 'BLZ',\n  BJ: 'BEN',\n  BM: 'BMU',\n  BT: 'BTN',\n  BO: 'BOL',\n  BA: 'BIH',\n  BW: 'BWA',\n  BV: 'BVT',\n  BR: 'BRA',\n  VG: 'VGB',\n  IO: 'IOT',\n  BN: 'BRN',\n  BG: 'BGR',\n  BF: 'BFA',\n  BI: 'BDI',\n  KH: 'KHM',\n  CM: 'CMR',\n  CA: 'CAN',\n  CV: 'CPV',\n  KY: 'CYM',\n  CF: 'CAF',\n  TD: 'TCD',\n  CL: 'CHL',\n  CN: 'CHN',\n  HK: 'HKG',\n  MO: 'MAC',\n  CX: 'CXR',\n  CC: 'CCK',\n  CO: 'COL',\n  KM: 'COM',\n  CG: 'COG',\n  CD: 'COD',\n  CK: 'COK',\n  CR: 'CRI',\n  CI: 'CIV',\n  HR: 'HRV',\n  CU: 'CUB',\n  CY: 'CYP',\n  CZ: 'CZE',\n  DK: 'DNK',\n  DJ: 'DJI',\n  DM: 'DMA',\n  DO: 'DOM',\n  EC: 'ECU',\n  EG: 'EGY',\n  SV: 'SLV',\n  GQ: 'GNQ',\n  ER: 'ERI',\n  EE: 'EST',\n  ET: 'ETH',\n  FK: 'FLK',\n  FO: 'FRO',\n  FJ: 'FJI',\n  FI: 'FIN',\n  FR: 'FRA',\n  GF: 'GUF',\n  PF: 'PYF',\n  TF: 'ATF',\n  GA: 'GAB',\n  GM: 'GMB',\n  GE: 'GEO',\n  DE: 'DEU',\n  GH: 'GHA',\n  GI: 'GIB',\n  GR: 'GRC',\n  GL: 'GRL',\n  GD: 'GRD',\n  GP: 'GLP',\n  GU: 'GUM',\n  GT: 'GTM',\n  GG: 'GGY',\n  GN: 'GIN',\n  GW: 'GNB',\n  GY: 'GUY',\n  HT: 'HTI',\n  HM: 'HMD',\n  VA: 'VAT',\n  HN: 'HND',\n  HU: 'HUN',\n  IS: 'ISL',\n  IN: 'IND',\n  ID: 'IDN',\n  IR: 'IRN',\n  IQ: 'IRQ',\n  IE: 'IRL',\n  IM: 'IMN',\n  IL: 'ISR',\n  IT: 'ITA',\n  JM: 'JAM',\n  JP: 'JPN',\n  JE: 'JEY',\n  JO: 'JOR',\n  KZ: 'KAZ',\n  KE: 'KEN',\n  KI: 'KIR',\n  KP: 'PRK',\n  KR: 'KOR',\n  KW: 'KWT',\n  KG: 'KGZ',\n  LA: 'LAO',\n  LV: 'LVA',\n  LB: 'LBN',\n  LS: 'LSO',\n  LR: 'LBR',\n  LY: 'LBY',\n  LI: 'LIE',\n  LT: 'LTU',\n  LU: 'LUX',\n  MK: 'MKD',\n  MG: 'MDG',\n  MW: 'MWI',\n  MY: 'MYS',\n  MV: 'MDV',\n  ML: 'MLI',\n  MT: 'MLT',\n  MH: 'MHL',\n  MQ: 'MTQ',\n  MR: 'MRT',\n  MU: 'MUS',\n  YT: 'MYT',\n  MX: 'MEX',\n  FM: 'FSM',\n  MD: 'MDA',\n  MC: 'MCO',\n  MN: 'MNG',\n  ME: 'MNE',\n  MS: 'MSR',\n  MA: 'MAR',\n  MZ: 'MOZ',\n  MM: 'MMR',\n  NA: 'NAM',\n  NR: 'NRU',\n  NP: 'NPL',\n  NL: 'NLD',\n  AN: 'ANT',\n  NC: 'NCL',\n  NZ: 'NZL',\n  NI: 'NIC',\n  NE: 'NER',\n  NG: 'NGA',\n  NU: 'NIU',\n  NF: 'NFK',\n  MP: 'MNP',\n  NO: 'NOR',\n  OM: 'OMN',\n  PK: 'PAK',\n  PW: 'PLW',\n  PS: 'PSE',\n  PA: 'PAN',\n  PG: 'PNG',\n  PY: 'PRY',\n  PE: 'PER',\n  PH: 'PHL',\n  PN: 'PCN',\n  PL: 'POL',\n  PT: 'PRT',\n  PR: 'PRI',\n  QA: 'QAT',\n  RE: 'REU',\n  RO: 'ROU',\n  RU: 'RUS',\n  RW: 'RWA',\n  BL: 'BLM',\n  SH: 'SHN',\n  KN: 'KNA',\n  LC: 'LCA',\n  MF: 'MAF',\n  PM: 'SPM',\n  VC: 'VCT',\n  WS: 'WSM',\n  SM: 'SMR',\n  ST: 'STP',\n  SA: 'SAU',\n  SN: 'SEN',\n  RS: 'SRB',\n  SC: 'SYC',\n  SL: 'SLE',\n  SG: 'SGP',\n  SK: 'SVK',\n  SI: 'SVN',\n  SB: 'SLB',\n  SO: 'SOM',\n  ZA: 'ZAF',\n  GS: 'SGS',\n  SS: 'SSD',\n  ES: 'ESP',\n  LK: 'LKA',\n  SD: 'SDN',\n  SR: 'SUR',\n  SJ: 'SJM',\n  SZ: 'SWZ',\n  SE: 'SWE',\n  CH: 'CHE',\n  SY: 'SYR',\n  TW: 'TWN',\n  TJ: 'TJK',\n  TZ: 'TZA',\n  TH: 'THA',\n  TL: 'TLS',\n  TG: 'TGO',\n  TK: 'TKL',\n  TO: 'TON',\n  TT: 'TTO',\n  TN: 'TUN',\n  TR: 'TUR',\n  TM: 'TKM',\n  TC: 'TCA',\n  TV: 'TUV',\n  UG: 'UGA',\n  UA: 'UKR',\n  AE: 'ARE',\n  GB: 'GBR',\n  US: 'USA',\n  UM: 'UMI',\n  UY: 'URY',\n  UZ: 'UZB',\n  VU: 'VUT',\n  VE: 'VEN',\n  VN: 'VNM',\n  VI: 'VIR',\n  WF: 'WLF',\n  EH: 'ESH',\n  YE: 'YEM',\n  ZM: 'ZMB',\n  ZW: 'ZWE',\n  XK: 'XKX'\n};\n\nfunction getCountryISO3(countryCode) {\n  return countryISOMapping[countryCode];\n}\n\nconst agglomeration_fill_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 0.5)\", 10000, \"hsla(55, 30%, 93%, 0.5)\", 30000, \"hsla(60, 100%, 90%, 0.5)\", 100000, \"hsla(98, 55%, 81%, 0.5)\", 300000, \"hsla(166, 44%, 65%, 0.5)\", 1000000, \"hsla(186, 53%, 51%, 0.5)\", 2000000, \"hsla(197, 74%, 43%, 0.5)\", 11847635, \"hsla(197, 74%, 43%, 0.5)\"];\nconst agglomeration_stroke_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 1)\", 10000, \"hsla(55, 30%, 93%, 1)\", 30000, \"hsla(60, 100%, 90%, 1)\", 100000, \"hsla(98, 55%, 81%, 1)\", 300000, \"hsla(166, 44%, 65%, 1)\", 1000000, \"hsla(186, 53%, 51%, 1)\", 2000000, \"hsla(197, 74%, 43%, 1)\", 11847635, \"hsla(197, 74%, 43%, 1)\"];\nconst options = [{\n  label: \"Angola\",\n  value: \"AGO\"\n}, {\n  label: \"Burundi\",\n  value: \"BDI\"\n}, {\n  label: \"Benin\",\n  value: \"BEN\"\n}, {\n  label: \"Burkina Faso\",\n  value: \"BFA\"\n}, {\n  label: \"Botswana\",\n  value: \"BWA\"\n}, {\n  label: \"Central African Republic\",\n  value: \"CAF\"\n}, {\n  label: \"Cote d`Ivoire\",\n  value: \"CIV\"\n}, {\n  label: \"Cameroon\",\n  value: \"CMR\"\n}, {\n  label: \"Democratic Republic of the Congo\",\n  value: \"COD\"\n}, {\n  label: \"Republic of the Congo\",\n  value: \"COG\"\n}, {\n  label: \"Cabo Verde\",\n  value: \"CPV\"\n}, {\n  label: \"Djibouti\",\n  value: \"DJI\"\n}, {\n  label: \"Algeria\",\n  value: \"DZA\"\n}, {\n  label: \"Egypt\",\n  value: \"EGY\"\n}, {\n  label: \"Eritrea\",\n  value: \"ERI\"\n}, {\n  label: \"Ethiopia\",\n  value: \"ETH\"\n}, {\n  label: \"Gabon\",\n  value: \"GAB\"\n}, {\n  label: \"Ghana\",\n  value: \"GHA\"\n}, {\n  label: \"Guinea\",\n  value: \"GIN\"\n}, {\n  label: \"The Gambia\",\n  value: \"GMB\"\n}, {\n  label: \"Guinea-Bissau\",\n  value: \"GNB\"\n}, {\n  label: \"Equatorial Guinea\",\n  value: \"GNQ\"\n}, {\n  label: \"Kenya\",\n  value: \"KEN\"\n}, {\n  label: \"Liberia\",\n  value: \"LBR\"\n}, {\n  label: \"Libya\",\n  value: \"LBY\"\n}, {\n  label: \"Lesotho\",\n  value: \"LSO\"\n}, {\n  label: \"Morocco\",\n  value: \"MAR\"\n}, {\n  label: \"Mali\",\n  value: \"MLI\"\n}, {\n  label: \"Mozambique\",\n  value: \"MOZ\"\n}, {\n  label: \"Mauritania\",\n  value: \"MRT\"\n}, {\n  label: \"Malawi\",\n  value: \"MWI\"\n}, {\n  label: \"Namibia\",\n  value: \"NAM\"\n}, {\n  label: \"Niger\",\n  value: \"NER\"\n}, {\n  label: \"Nigeria\",\n  value: \"NGA\"\n}, {\n  label: \"Rwanda\",\n  value: \"RWA\"\n}, {\n  label: \"Sudan\",\n  value: \"SDN\"\n}, {\n  label: \"Senegal\",\n  value: \"SEN\"\n}, {\n  label: \"Sierra Leone\",\n  value: \"SLE\"\n}, {\n  label: \"Somalia\",\n  value: \"SOM\"\n}, {\n  label: \"South Sudan\",\n  value: \"SSD\"\n}, {\n  label: \"Sao Tome and Principe\",\n  value: \"STP\"\n}, {\n  label: \"Kingdom of Eswatini\",\n  value: \"SWZ\"\n}, {\n  label: \"Chad\",\n  value: \"TCD\"\n}, {\n  label: \"Togo\",\n  value: \"TGO\"\n}, {\n  label: \"Tunisia\",\n  value: \"TUN\"\n}, {\n  label: \"Tanzania\",\n  value: \"TZA\"\n}, {\n  label: \"Uganda\",\n  value: \"UGA\"\n}, {\n  label: \"South Africa\",\n  value: \"ZAF\"\n}, {\n  label: \"Zambia\",\n  value: \"ZMB\"\n}, {\n  label: \"Zimbabwe\",\n  value: \"ZWE\"\n}]; //// Basic setting of the map\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = obj => {\n      this.map.removeLayer(obj);\n    };\n\n    this.add_point = (obj, country) => {\n      this.map.addLayer({\n        id: obj,\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\"all\", [\"==\", \"ISO3\", country], [\">\", \"Population_2015\", 0]],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      });\n    };\n\n    this.add_shape = (obj, country) => {\n      this.map.addLayer({\n        id: obj,\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'AfricaContinent',\n        filter: [\"==\", \"ISO3\", country],\n        paint: {\n          'fill-color': 'hsl(56, 96%, 67%)',\n          'fill-opacity': 0.9\n        }\n      });\n    };\n\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3,\n      selectedOption: {\n        label: '',\n        value: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    this.map.on('move', () => {\n      this.setState({\n        lng: this.map.getCenter().lng.toFixed(4),\n        lat: this.map.getCenter().lat.toFixed(4),\n        zoom: this.map.getZoom().toFixed(2)\n      });\n    }); //// Import Africapolis agglomerations from mapbox\n\n    this.map.on('load', () => {\n      // Add Country shape\n      this.map.addSource('africapolis_country', {\n        type: 'vector',\n        url: 'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'\n      }); // Add Agglomerations\n\n      this.map.addSource('africapolis_agglos', {\n        type: 'vector',\n        url: 'mapbox://mkmd.3e0rk98j'\n      }); // Add Country label\n\n      this.map.addSource('africapolis_country_label', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-streets-v7'\n      }); // Add Country layer\n\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'AfricaContinent',\n        //filter:[\">\",\"Population_2015\",0],\n        paint: {\n          'fill-color': 'hsl(56, 96%, 67%)',\n          'fill-opacity': 0.5\n        }\n      }); // Add Agglomerations layer\n\n      this.map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\">\", \"Population_2015\", 0],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      }); //mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4\n      //AfricaContinent\n      //ISO3_CODE\n\n      this.map.addLayer({\n        id: 'country_labels',\n        source: 'africapolis_country_label',\n        type: 'symbol',\n        'source-layer': 'country_label',\n        filter: [\"all\", [\"in\", \"$type\", \"Polygon\", \"LineString\", \"Point\"], [\"all\", [\"in\", \"code\", \"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"LR\", \"LS\", \"LY\", \"MA\", \"ML\", \"MR\", \"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RW\", \"SD\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \"TN\", \"TZ\", \"UG\", \"ZA\", \"ZM\", \"ZW\"]]],\n        layout: {\n          'text-field': [\"get\", \"name_en\"],\n          'text-font': [\"Helvetica Neue LT Std 75 Bold\", \"Arial Unicode MS Regular\"],\n          'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22]] //'text-color':'#FFFF00'\n          //'circle-stroke-color': agglomeration_stroke_color,\n          //'circle-stroke-width': 3,\n          //'circle-color': agglomeration_fill_color\n\n        }\n      });\n      this.map.on('click', 'country_labels', function (e) {\n        //this.setState({ selectedOption: e.features[0].properties.name_en})\n        console.log(e.features[0].properties.code);\n        console.log(getCountryISO3(e.features[0].properties.code));\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedOption !== this.state.selectedOption) {\n      this.remove('country');\n      this.add_shape('country', this.state.selectedOption.value);\n      this.remove('agglomerations');\n      this.add_point('agglomerations', this.state.selectedOption.value);\n    }\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom: \", this.state.zoom), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: value => this.setState({\n        selectedOption: value\n      }),\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","accessToken","countryISOMapping","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW","XK","getCountryISO3","countryCode","agglomeration_fill_color","agglomeration_stroke_color","options","label","value","Application","Component","constructor","props","remove","obj","map","removeLayer","add_point","country","addLayer","id","source","type","filter","paint","add_shape","state","lng","lat","zoom","selectedOption","componentDidMount","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","addSource","url","layout","e","console","log","features","properties","code","componentDidUpdate","prevProps","prevState","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\nconst countryISOMapping = { AF: 'AFG', AX: 'ALA', AL: 'ALB', DZ: 'DZA', AS: 'ASM', AD: 'AND', AO: 'AGO', AI: 'AIA', AQ: 'ATA', AG: 'ATG', AR: 'ARG', AM: 'ARM', AW: 'ABW', AU: 'AUS', AT: 'AUT', AZ: 'AZE', BS: 'BHS', BH: 'BHR', BD: 'BGD', BB: 'BRB', BY: 'BLR', BE: 'BEL', BZ: 'BLZ', BJ: 'BEN', BM: 'BMU', BT: 'BTN', BO: 'BOL', BA: 'BIH', BW: 'BWA', BV: 'BVT', BR: 'BRA', VG: 'VGB', IO: 'IOT', BN: 'BRN', BG: 'BGR', BF: 'BFA', BI: 'BDI', KH: 'KHM', CM: 'CMR', CA: 'CAN', CV: 'CPV', KY: 'CYM', CF: 'CAF', TD: 'TCD', CL: 'CHL', CN: 'CHN', HK: 'HKG', MO: 'MAC', CX: 'CXR', CC: 'CCK', CO: 'COL', KM: 'COM', CG: 'COG', CD: 'COD', CK: 'COK', CR: 'CRI', CI: 'CIV', HR: 'HRV', CU: 'CUB', CY: 'CYP', CZ: 'CZE', DK: 'DNK', DJ: 'DJI', DM: 'DMA', DO: 'DOM', EC: 'ECU', EG: 'EGY', SV: 'SLV', GQ: 'GNQ', ER: 'ERI', EE: 'EST', ET: 'ETH', FK: 'FLK', FO: 'FRO', FJ: 'FJI', FI: 'FIN', FR: 'FRA', GF: 'GUF', PF: 'PYF', TF: 'ATF', GA: 'GAB', GM: 'GMB', GE: 'GEO', DE: 'DEU', GH: 'GHA', GI: 'GIB', GR: 'GRC', GL: 'GRL', GD: 'GRD', GP: 'GLP', GU: 'GUM', GT: 'GTM', GG: 'GGY', GN: 'GIN', GW: 'GNB', GY: 'GUY', HT: 'HTI', HM: 'HMD', VA: 'VAT', HN: 'HND', HU: 'HUN', IS: 'ISL', IN: 'IND', ID: 'IDN', IR: 'IRN', IQ: 'IRQ', IE: 'IRL', IM: 'IMN', IL: 'ISR', IT: 'ITA', JM: 'JAM', JP: 'JPN', JE: 'JEY', JO: 'JOR', KZ: 'KAZ', KE: 'KEN', KI: 'KIR', KP: 'PRK', KR: 'KOR', KW: 'KWT', KG: 'KGZ', LA: 'LAO', LV: 'LVA', LB: 'LBN', LS: 'LSO', LR: 'LBR', LY: 'LBY', LI: 'LIE', LT: 'LTU', LU: 'LUX', MK: 'MKD', MG: 'MDG', MW: 'MWI', MY: 'MYS', MV: 'MDV', ML: 'MLI', MT: 'MLT', MH: 'MHL', MQ: 'MTQ', MR: 'MRT', MU: 'MUS', YT: 'MYT', MX: 'MEX', FM: 'FSM', MD: 'MDA', MC: 'MCO', MN: 'MNG', ME: 'MNE', MS: 'MSR', MA: 'MAR', MZ: 'MOZ', MM: 'MMR', NA: 'NAM', NR: 'NRU', NP: 'NPL', NL: 'NLD', AN: 'ANT', NC: 'NCL', NZ: 'NZL', NI: 'NIC', NE: 'NER', NG: 'NGA', NU: 'NIU', NF: 'NFK', MP: 'MNP', NO: 'NOR', OM: 'OMN', PK: 'PAK', PW: 'PLW', PS: 'PSE', PA: 'PAN', PG: 'PNG', PY: 'PRY', PE: 'PER', PH: 'PHL', PN: 'PCN', PL: 'POL', PT: 'PRT', PR: 'PRI', QA: 'QAT', RE: 'REU', RO: 'ROU', RU: 'RUS', RW: 'RWA', BL: 'BLM', SH: 'SHN', KN: 'KNA', LC: 'LCA', MF: 'MAF', PM: 'SPM', VC: 'VCT', WS: 'WSM', SM: 'SMR', ST: 'STP', SA: 'SAU', SN: 'SEN', RS: 'SRB', SC: 'SYC', SL: 'SLE', SG: 'SGP', SK: 'SVK', SI: 'SVN', SB: 'SLB', SO: 'SOM', ZA: 'ZAF', GS: 'SGS', SS: 'SSD', ES: 'ESP', LK: 'LKA', SD: 'SDN', SR: 'SUR', SJ: 'SJM', SZ: 'SWZ', SE: 'SWE', CH: 'CHE', SY: 'SYR', TW: 'TWN', TJ: 'TJK', TZ: 'TZA', TH: 'THA', TL: 'TLS', TG: 'TGO', TK: 'TKL', TO: 'TON', TT: 'TTO', TN: 'TUN', TR: 'TUR', TM: 'TKM', TC: 'TCA', TV: 'TUV', UG: 'UGA', UA: 'UKR', AE: 'ARE', GB: 'GBR', US: 'USA', UM: 'UMI', UY: 'URY', UZ: 'UZB', VU: 'VUT', VE: 'VEN', VN: 'VNM', VI: 'VIR', WF: 'WLF', EH: 'ESH', YE: 'YEM', ZM: 'ZMB', ZW: 'ZWE', XK: 'XKX' }\r\n\r\nfunction getCountryISO3(countryCode) { return countryISOMapping[countryCode] }\r\n\r\nconst agglomeration_fill_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 0.5)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 0.5)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 0.5)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 0.5)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 0.5)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 0.5)\",\r\n  2000000,\r\n  \"hsla(197, 74%, 43%, 0.5)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 0.5)\"\r\n ]\r\n const agglomeration_stroke_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 1)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 1)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 1)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 1)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 1)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 1)\",\r\n  2000000,\r\n  \"hsla(197, 74%, 43%, 1)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 1)\"\r\n ]\r\n const options = [{ label:\"Angola\",value:\"AGO\" },\r\n        { label:\"Burundi\",value:\"BDI\" },\r\n        { label:\"Benin\",value:\"BEN\" },\r\n        { label:\"Burkina Faso\",value:\"BFA\" },\r\n        { label:\"Botswana\",value:\"BWA\" },\r\n        { label:\"Central African Republic\",value:\"CAF\" },\r\n        { label:\"Cote d`Ivoire\",value:\"CIV\" },\r\n        { label:\"Cameroon\",value:\"CMR\" },\r\n        { label:\"Democratic Republic of the Congo\",value:\"COD\" },\r\n        { label:\"Republic of the Congo\",value:\"COG\" },\r\n        { label:\"Cabo Verde\",value:\"CPV\" },\r\n        { label:\"Djibouti\",value:\"DJI\" },\r\n        { label:\"Algeria\",value:\"DZA\" },\r\n        { label:\"Egypt\",value:\"EGY\" },\r\n        { label:\"Eritrea\",value:\"ERI\" },\r\n        { label:\"Ethiopia\",value:\"ETH\" },\r\n        { label:\"Gabon\",value:\"GAB\" },\r\n        { label:\"Ghana\",value:\"GHA\" },\r\n        { label:\"Guinea\",value:\"GIN\" },\r\n        { label:\"The Gambia\",value:\"GMB\" },\r\n        { label:\"Guinea-Bissau\",value:\"GNB\" },\r\n        { label:\"Equatorial Guinea\",value:\"GNQ\" },\r\n        { label:\"Kenya\",value:\"KEN\" },\r\n        { label:\"Liberia\",value:\"LBR\" },\r\n        { label:\"Libya\",value:\"LBY\" },\r\n        { label:\"Lesotho\",value:\"LSO\" },\r\n        { label:\"Morocco\",value:\"MAR\" },\r\n        { label:\"Mali\",value:\"MLI\" },\r\n        { label:\"Mozambique\",value:\"MOZ\" },\r\n        { label:\"Mauritania\",value:\"MRT\" },\r\n        { label:\"Malawi\",value:\"MWI\" },\r\n        { label:\"Namibia\",value:\"NAM\" },\r\n        { label:\"Niger\",value:\"NER\" },\r\n        { label:\"Nigeria\",value:\"NGA\" },\r\n        { label:\"Rwanda\",value:\"RWA\" },\r\n        { label:\"Sudan\",value:\"SDN\" },\r\n        { label:\"Senegal\",value:\"SEN\" },\r\n        { label:\"Sierra Leone\",value:\"SLE\" },\r\n        { label:\"Somalia\",value:\"SOM\" },\r\n        { label:\"South Sudan\",value:\"SSD\" },\r\n        { label:\"Sao Tome and Principe\",value:\"STP\" },\r\n        { label:\"Kingdom of Eswatini\",value:\"SWZ\" },\r\n        { label:\"Chad\",value:\"TCD\" },\r\n        { label:\"Togo\",value:\"TGO\" },\r\n        { label:\"Tunisia\",value:\"TUN\" },\r\n        { label:\"Tanzania\",value:\"TZA\" },\r\n        { label:\"Uganda\",value:\"UGA\" },\r\n        { label:\"South Africa\",value:\"ZAF\" },\r\n        { label:\"Zambia\",value:\"ZMB\" },\r\n        { label:\"Zimbabwe\",value:\"ZWE\" }];\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3,\r\n      selectedOption: {label: '', value: ''}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    this.map.on('move', () => {\r\n      this.setState({\r\n      lng: this.map.getCenter().lng.toFixed(4),\r\n      lat: this.map.getCenter().lat.toFixed(4),\r\n      zoom: this.map.getZoom().toFixed(2)\r\n      });\r\n    });\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'});\r\n// Add Agglomerations\r\n      this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\r\n// Add Country label\r\n      this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mapbox.mapbox-streets-v7'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'AfricaContinent',\r\n            //filter:[\">\",\"Population_2015\",0],\r\n            paint: {\r\n              'fill-color': 'hsl(56, 96%, 67%)',\r\n              'fill-opacity': 0.5\r\n            }\r\n        });\r\n\r\n\r\n// Add Agglomerations layer\r\n      this.map.addLayer({\r\n            id: 'agglomerations',\r\n            source:'africapolis_agglos',\r\n            type: 'circle',\r\n            'source-layer':'africapolis2020-3mv6ux',\r\n            filter:[\">\",\"Population_2015\",0],\r\n            paint: {\r\n                'circle-stroke-color': agglomeration_stroke_color,\r\n                'circle-stroke-width': 3,\r\n                'circle-color': agglomeration_fill_color\r\n            }\r\n        });\r\n\r\n//mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4\r\n//AfricaContinent\r\n//ISO3_CODE\r\n      this.map.addLayer({\r\n            id: 'country_labels',\r\n            source:'africapolis_country_label',\r\n            type: 'symbol',\r\n            'source-layer':'country_label',\r\n            filter:[ \"all\", [ \"in\", \"$type\", \"Polygon\", \"LineString\", \"Point\" ], [ \"all\", [ \"in\", \"code\", \"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"LR\", \"LS\", \"LY\", \"MA\", \"ML\", \"MR\", \"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RW\", \"SD\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \"TN\", \"TZ\", \"UG\", \"ZA\", \"ZM\", \"ZW\" ] ] ],\r\n            layout: {\r\n              'text-field':[\"get\",\"name_en\"],\r\n              'text-font': [  \"Helvetica Neue LT Std 75 Bold\", \"Arial Unicode MS Regular\"],\r\n              'text-size': [ \"interpolate\", [\"linear\"], [\"zoom\"], 2, [ \"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [ \"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ]\r\n\r\n              //'text-color':'#FFFF00'\r\n                //'circle-stroke-color': agglomeration_stroke_color,\r\n                //'circle-stroke-width': 3,\r\n                //'circle-color': agglomeration_fill_color\r\n            }\r\n        });\r\n\r\n      this.map.on('click', 'country_labels', function(e) {\r\n      //this.setState({ selectedOption: e.features[0].properties.name_en})\r\n      console.log(e.features[0].properties.code)\r\n      console.log(getCountryISO3(e.features[0].properties.code))\r\n      });\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    if( prevState.selectedOption !== this.state.selectedOption ) {\r\n            this.remove('country');\r\n            this.add_shape('country',this.state.selectedOption.value);\r\n            this.remove('agglomerations');\r\n            this.add_point('agglomerations',this.state.selectedOption.value);\r\n    }\r\n}\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\nadd_point = (obj,country) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_agglos',\r\n        type: 'circle',\r\n        'source-layer':'africapolis2020-3mv6ux',\r\n        filter:[\"all\",[\"==\",\"ISO3\",country],[\">\",\"Population_2015\",0]],\r\n        paint: {\r\n        'circle-stroke-color': agglomeration_stroke_color,\r\n        'circle-stroke-width': 3,\r\n        'circle-color': agglomeration_fill_color\r\n        }\r\n    });\r\n}\r\nadd_shape = (obj,country) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'AfricaContinent',\r\n        filter:[\"==\",\"ISO3\",country],\r\n        paint: {\r\n          'fill-color': 'hsl(56, 96%, 67%)',\r\n          'fill-opacity': 0.9\r\n        }\r\n    });\r\n}\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" >\r\n        <Select\r\n                value={selectedOption}\r\n                onChange={(value) => this.setState({ selectedOption: value}) }\r\n                options={options}\r\n              />\r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}