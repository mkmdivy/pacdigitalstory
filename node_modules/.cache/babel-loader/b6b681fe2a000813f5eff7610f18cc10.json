{"ast":null,"code":"var _jsxFileName = \"C:\\\\worldbank\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\nimport classes from './Site.module.css';\nimport Badge from '@material-ui/core/Badge';\nimport Chip from '@material-ui/core/Chip';\n\nconst App = props => {\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      background: \"rgba(45,45,45,0.3)\",\n      // match with the menu\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"rgba(255,255,255,0.5)\" : \"rgba(255,255,255,0.9)\" // Removes weird border around container      \n      // \"&:hover\": {\n      //   // Overwrittes the different states of border\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\n      // }\n\n    }),\n    menu: base => ({ ...base,\n      // override border radius to match the box\n      borderRadius: 0,\n      // kill the gap\n      marginTop: 0\n    }),\n    menuList: base => ({ ...base,\n      // kill the white space on first and last option\n      padding: 0\n    }),\n    singleValue: base => ({ ...base,\n      color: 'white'\n    })\n  };\n  useEffect(() => {}, []);\n\n  const handleClick = e => {\n    console.log(e);\n    setSelectedOption({\n      value: e,\n      label: e\n    });\n  };\n\n  const top5buttons = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      value: '',\n      onClick: e => handleClick(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"back to default\"), options.slice(0, 10).map(e => /*#__PURE__*/React.createElement(Chip, {\n      label: e.value,\n      onClick: () => handleClick(e.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }\n    })));\n  };\n\n  const dataPresent = input => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, result.map(e => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: e.Link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: classes.buttonActive,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 48\n        }\n      }, e.Name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 106\n        }\n      }));\n    }));\n  };\n\n  {\n    /* <button className={classes.buttonActive}>{e.Name}</button> */\n  }\n  const [selectedOption, setSelectedOption] = useState({\n    value: '',\n    label: 'Search'\n  });\n  console.log(selectedOption); // +\"  \"+e.freq\n\n  const options = [];\n  const wordcount = [];\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"]; // wordlist.map(e => options.push({value: e.name, label: e.name}))\n\n  greendb.map(e => {\n    e.keyword = e.Name.toUpperCase().split(' '); // e.keyword.map(x => wordcount.push(x))    \n  }); // greendb.map(e => console.log(e.keyword))\n\n  let result = selectedOption.value == '' ? greendb : greendb.filter(e => e.keyword.includes(selectedOption.value));\n  result.map(e => e.keyword.map(x => wordcount.push(x)));\n  const wordresult = wordcount.filter(e => !wordAvoid.includes(e)); // console.log(wordcount)\n\n  const counts = {};\n  wordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1); // console.log(counts)\n  // console.log(selectedOption)\n\n  const keysSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  });\n  console.log(keysSorted); // bar,me,you,foo\n\n  const freqSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  }).map(key => counts[key]);\n  console.log(freqSorted);\n  keysSorted.map((e, idx) => options.push({\n    value: e,\n    label: e + \" \" + freqSorted[idx]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"Green Technologies Knowledge Resources Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: customStyles,\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  })), top5buttons()), dataPresent());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/worldbank/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","classes","Badge","Chip","App","props","customStyles","control","base","state","background","borderRadius","isFocused","borderColor","menu","marginTop","menuList","padding","singleValue","color","handleClick","e","console","log","setSelectedOption","value","label","top5buttons","target","options","slice","map","dataPresent","input","result","Link","buttonActive","Name","selectedOption","wordcount","wordAvoid","keyword","toUpperCase","split","filter","includes","x","push","wordresult","counts","num","keysSorted","Object","keys","sort","b","a","freqSorted","key","idx","main","header","title","box"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\nconst App = props => {\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      background: \"rgba(45,45,45,0.3)\",\r\n      // match with the menu\r\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n      // Overwrittes the different states of border\r\n      borderColor: state.isFocused ? \"rgba(255,255,255,0.5)\" : \"rgba(255,255,255,0.9)\",\r\n      // Removes weird border around container      \r\n      // \"&:hover\": {\r\n      //   // Overwrittes the different states of border\r\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\r\n\r\n      // }\r\n    }),\r\n    menu: base => ({\r\n      ...base,\r\n      // override border radius to match the box\r\n      borderRadius: 0,\r\n      // kill the gap\r\n      marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n      ...base,\r\n      // kill the white space on first and last option\r\n      padding: 0\r\n    }),\r\n    singleValue: base => ({\r\n      ...base,\r\n      color:'white'            \r\n    })\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => { \r\n    \r\n  },[])\r\n\r\n\r\n  const handleClick = (e) => {\r\n    console.log(e)\r\n    setSelectedOption({value:e, label:e})\r\n  }\r\n \r\n  const top5buttons = () => {\r\n    return (\r\n      <div>\r\n      <button value={''} onClick={(e) => handleClick(e.target.value)}>{\"back to default\"}</button>\r\n      {options.slice(0,10).map(e=> <Chip  label={e.value}  onClick={() => handleClick(e.value)} />)}\r\n\r\n      \r\n      {/* <Badge badgeContent={freqSorted[0]} color=\"primary\"><button class={classes.keybutton} value={options[0].value} onClick={(e) => handleClick(e.target.value)}>{options[0].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[1]} color=\"primary\"><button class={classes.keybutton} value={options[1].value} onClick={(e) => handleClick(e.target.value)}>{options[1].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[2]} color=\"primary\"><button class={classes.keybutton} value={options[2].value} onClick={(e) => handleClick(e.target.value)}>{options[2].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[3]} color=\"primary\"><button class={classes.keybutton} value={options[3].value} onClick={(e) => handleClick(e.target.value)}>{options[3].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[4]} color=\"primary\"><button class={classes.keybutton} value={options[4].value} onClick={(e) => handleClick(e.target.value)}>{options[4].value}</button></Badge> */}\r\n      </div>\r\n    )\r\n  \r\n  }    \r\n  \r\n  const dataPresent = (input) => {\r\n    return (\r\n      <div>\r\n      {result.map(e=> {return <a href={e.Link}><button className={classes.buttonActive}>{e.Name}</button><br/></a>})}\r\n      </div>\r\n    )\r\n  \r\n  }    \r\n\r\n{/* <button className={classes.buttonActive}>{e.Name}</button> */}\r\n\r\n  const [selectedOption, setSelectedOption] = useState({value: '', label: 'Search'});\r\n  console.log(selectedOption)\r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n// wordlist.map(e => options.push({value: e.name, label: e.name}))\r\n\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.toUpperCase().split(' ')\r\n  // e.keyword.map(x => wordcount.push(x))    \r\n})\r\n\r\n// greendb.map(e => console.log(e.keyword))\r\nlet result = selectedOption.value==''? greendb: greendb.filter(e => (e.keyword.includes(selectedOption.value)))\r\nresult.map(e => e.keyword.map(x => wordcount.push(x)))\r\n\r\n\r\nconst wordresult = wordcount.filter(e => !wordAvoid.includes(e))\r\n// console.log(wordcount)\r\n\r\n\r\nconst counts = {};\r\n\r\nwordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1)\r\n\r\n\r\n// console.log(counts)\r\n\r\n\r\n// console.log(selectedOption)\r\nconst keysSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]})\r\nconsole.log(keysSorted);     // bar,me,you,foo\r\n\r\nconst freqSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]}).map(key => counts[key]);\r\nconsole.log(freqSorted);\r\n\r\nkeysSorted.map((e,idx) => options.push({value:e,label:e+\" \"+freqSorted[idx]}) )\r\n\r\n\r\n  \r\nreturn (\r\n<div class={classes.main}>\r\n  <div class={classes.header}>\r\n    <div class={classes.title}>{\"Green Technologies Knowledge Resources Explorer\"}</div>    \r\n    <div class={classes.box}>\r\n    <Select \r\n    styles={customStyles}\r\n    options={options} \r\n    // isMulti \r\n    value={selectedOption}\r\n    onChange={setSelectedOption}\r\n    /></div>\r\n    {top5buttons()}\r\n  </div>\r\n{dataPresent()}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}