{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\component\\\\slider.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // *******************************************************\n// RAIL\n// *******************************************************\n\nconst railOuterStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 42,\n  transform: 'translate(0%, -50%)',\n  borderRadius: 7,\n  cursor: 'pointer' // border: '1px solid white',\n\n};\nconst railInnerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: 14,\n  transform: 'translate(0%, -50%)',\n  borderRadius: 7,\n  pointerEvents: 'none',\n  backgroundColor: 'rgb(155,155,155)'\n};\nexport function SliderRail({\n  getRailProps\n}) {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: railOuterStyle\n  }, getRailProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: railInnerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\nSliderRail.propTypes = {\n  getRailProps: PropTypes.func.isRequired\n}; // *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\n\nexport function Handle({\n  domain: [min, max],\n  handle: {\n    id,\n    value,\n    percent\n  },\n  disabled,\n  getHandleProps\n}) {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      transform: 'translate(-50%, -50%)',\n      WebkitTapHighlightColor: 'rgba(0,0,0,0)',\n      zIndex: 5,\n      width: 28,\n      height: 42,\n      cursor: 'pointer',\n      // border: '1px solid white',\n      backgroundColor: 'none'\n    }\n  }, getHandleProps(id), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"slider\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 2,\n      width: 24,\n      height: 24,\n      borderRadius: '50%',\n      boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\n      backgroundColor: disabled ? '#666' : '#ffc400'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\nHandle.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  getHandleProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nHandle.defaultProps = {\n  disabled: false\n}; // *******************************************************\n// KEYBOARD HANDLE COMPONENT\n// Uses a button to allow keyboard events\n// *******************************************************\n\nexport function KeyboardHandle({\n  domain: [min, max],\n  handle: {\n    id,\n    value,\n    percent\n  },\n  disabled,\n  getHandleProps\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    role: \"slider\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": value,\n    style: {\n      left: `${percent}%`,\n      position: 'absolute',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 2,\n      width: 24,\n      height: 24,\n      borderRadius: '50%',\n      boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\n      backgroundColor: disabled ? '#666' : '#ffc400'\n    }\n  }, getHandleProps(id), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }));\n}\nKeyboardHandle.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  getHandleProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nKeyboardHandle.defaultProps = {\n  disabled: false\n}; // *******************************************************\n// TRACK COMPONENT\n// *******************************************************\n\nexport function Track({\n  source,\n  target,\n  getTrackProps,\n  disabled\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      position: 'absolute',\n      transform: 'translate(0%, -50%)',\n      height: 14,\n      zIndex: 1,\n      backgroundColor: disabled ? '#999' : '#b28900',\n      borderRadius: 7,\n      cursor: 'pointer',\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`\n    }\n  }, getTrackProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }));\n}\nTrack.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  getTrackProps: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nTrack.defaultProps = {\n  disabled: false\n}; // *******************************************************\n// TICK COMPONENT\n// *******************************************************\n\nexport function Tick({\n  tick,\n  count,\n  format\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      marginTop: 14,\n      width: 1,\n      height: 5,\n      backgroundColor: 'rgb(200,200,200)',\n      left: `${tick.percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      marginTop: 22,\n      fontSize: 10,\n      textAlign: 'center',\n      marginLeft: `${-(100 / count) / 2}%`,\n      width: `${100 / count}%`,\n      left: `${tick.percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, format(tick.value)));\n}\nTick.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\nTick.defaultProps = {\n  format: d => d\n};","map":{"version":3,"sources":["C:/mapboxAndReact/src/component/slider.js"],"names":["React","Fragment","PropTypes","railOuterStyle","position","width","height","transform","borderRadius","cursor","railInnerStyle","pointerEvents","backgroundColor","SliderRail","getRailProps","propTypes","func","isRequired","Handle","domain","min","max","handle","id","value","percent","disabled","getHandleProps","left","WebkitTapHighlightColor","zIndex","boxShadow","array","shape","string","number","bool","defaultProps","KeyboardHandle","Track","source","target","getTrackProps","Tick","tick","count","format","marginTop","fontSize","textAlign","marginLeft","d"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// *******************************************************\r\n// RAIL\r\n// *******************************************************\r\nconst railOuterStyle = {\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: 42,\r\n  transform: 'translate(0%, -50%)',\r\n  borderRadius: 7,\r\n  cursor: 'pointer',\r\n  // border: '1px solid white',\r\n}\r\n\r\nconst railInnerStyle = {\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: 14,\r\n  transform: 'translate(0%, -50%)',\r\n  borderRadius: 7,\r\n  pointerEvents: 'none',\r\n  backgroundColor: 'rgb(155,155,155)',\r\n}\r\n\r\nexport function SliderRail({ getRailProps }) {\r\n  return (\r\n    <Fragment>\r\n      <div style={railOuterStyle} {...getRailProps()} />\r\n      <div style={railInnerStyle} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSliderRail.propTypes = {\r\n  getRailProps: PropTypes.func.isRequired,\r\n}\r\n\r\n// *******************************************************\r\n// HANDLE COMPONENT\r\n// *******************************************************\r\nexport function Handle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          transform: 'translate(-50%, -50%)',\r\n          WebkitTapHighlightColor: 'rgba(0,0,0,0)',\r\n          zIndex: 5,\r\n          width: 28,\r\n          height: 42,\r\n          cursor: 'pointer',\r\n          // border: '1px solid white',\r\n          backgroundColor: 'none',\r\n        }}\r\n        {...getHandleProps(id)}\r\n      />\r\n      <div\r\n        role=\"slider\"\r\n        aria-valuemin={min}\r\n        aria-valuemax={max}\r\n        aria-valuenow={value}\r\n        style={{\r\n          left: `${percent}%`,\r\n          position: 'absolute',\r\n          transform: 'translate(-50%, -50%)',\r\n          zIndex: 2,\r\n          width: 24,\r\n          height: 24,\r\n          borderRadius: '50%',\r\n          boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\r\n          backgroundColor: disabled ? '#666' : '#ffc400',\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nHandle.propTypes = {\r\n  domain: PropTypes.array.isRequired,\r\n  handle: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getHandleProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n}\r\n\r\nHandle.defaultProps = {\r\n  disabled: false,\r\n}\r\n\r\n// *******************************************************\r\n// KEYBOARD HANDLE COMPONENT\r\n// Uses a button to allow keyboard events\r\n// *******************************************************\r\nexport function KeyboardHandle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}) {\r\n  return (\r\n    <button\r\n      role=\"slider\"\r\n      aria-valuemin={min}\r\n      aria-valuemax={max}\r\n      aria-valuenow={value}\r\n      style={{\r\n        left: `${percent}%`,\r\n        position: 'absolute',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 2,\r\n        width: 24,\r\n        height: 24,\r\n        borderRadius: '50%',\r\n        boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\r\n        backgroundColor: disabled ? '#666' : '#ffc400',\r\n      }}\r\n      {...getHandleProps(id)}\r\n    />\r\n  )\r\n}\r\n\r\nKeyboardHandle.propTypes = {\r\n  domain: PropTypes.array.isRequired,\r\n  handle: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getHandleProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n}\r\n\r\nKeyboardHandle.defaultProps = {\r\n  disabled: false,\r\n}\r\n\r\n// *******************************************************\r\n// TRACK COMPONENT\r\n// *******************************************************\r\nexport function Track({ source, target, getTrackProps, disabled }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        transform: 'translate(0%, -50%)',\r\n        height: 14,\r\n        zIndex: 1,\r\n        backgroundColor: disabled ? '#999' : '#b28900',\r\n        borderRadius: 7,\r\n        cursor: 'pointer',\r\n        left: `${source.percent}%`,\r\n        width: `${target.percent - source.percent}%`,\r\n      }}\r\n      {...getTrackProps()}\r\n    />\r\n  )\r\n}\r\n\r\nTrack.propTypes = {\r\n  source: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  target: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  getTrackProps: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool,\r\n}\r\n\r\nTrack.defaultProps = {\r\n  disabled: false,\r\n}\r\n\r\n// *******************************************************\r\n// TICK COMPONENT\r\n// *******************************************************\r\nexport function Tick({ tick, count, format }) {\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          marginTop: 14,\r\n          width: 1,\r\n          height: 5,\r\n          backgroundColor: 'rgb(200,200,200)',\r\n          left: `${tick.percent}%`,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          marginTop: 22,\r\n          fontSize: 10,\r\n          textAlign: 'center',\r\n          marginLeft: `${-(100 / count) / 2}%`,\r\n          width: `${100 / count}%`,\r\n          left: `${tick.percent}%`,\r\n        }}\r\n      >\r\n        {format(tick.value)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTick.propTypes = {\r\n  tick: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    percent: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  format: PropTypes.func.isRequired,\r\n}\r\n\r\nTick.defaultProps = {\r\n  format: d => d,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}