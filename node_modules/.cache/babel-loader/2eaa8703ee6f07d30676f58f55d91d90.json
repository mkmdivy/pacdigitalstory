{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';import mapboxgl from'mapbox-gl';import axios from'axios';import papa from'papaparse';import csv2geojson from'csv2geojson';mapboxgl.accessToken='pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';var Application=/*#__PURE__*/function(_React$Component){_inherits(Application,_React$Component);var _super=_createSuper(Application);function Application(props){var _this;_classCallCheck(this,Application);_this=_super.call(this,props);_this.state={lng:5,lat:0,zoom:3};return _this;}_createClass(Application,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',center:[this.state.lng,this.state.lat],zoom:this.state.zoom});map.on('move',function(){_this2.setState({lng:map.getCenter().lng.toFixed(4),lat:map.getCenter().lat.toFixed(4),zoom:map.getZoom().toFixed(2)});});//.map(e => e.join(\",\")).join(\"\\n\")\nvar agglos=axios.get('senegal.json').then(function(response){var result=response.data.Agglomerations[\"0\"];console.log(Object.entries(result).map(function(e){return e;}));});//console.log(agglos)\n//let data = agglos.data.Agglomerations[0].Longlat;\n//var marker = new mapboxgl.Marker();\n// map.on('load', function() {\n// // Add a source for the state polygons.\n// map.addSource('states', {\n// 'type': 'geojson',\n// 'data':\n// 'https://gist.githubusercontent.com/mkmdivy/044d7f9f13cc2ec22ba6b1751c3527a6/raw/9908322b5ac7915720fc98190f755f139bde8ff3/africa'\n// });\n//\n// // Add a layer showing the state polygons.\n// map.addLayer({\n// 'id': 'NAME_EN',\n// 'type': 'fill',\n// 'source': 'states',\n// 'paint': {\n// 'fill-color': 'rgba(200, 100, 240, 0.4)',\n// 'fill-outline-color': 'rgba(200, 100, 240, 1)'\n// }\n// });\n//\n// // When a click event occurs on a feature in the states layer, open a popup at the\n// // location of the click, with description HTML from its properties.\n// map.on('click', 'NAME_EN', function(e) {\n// new mapboxgl.Popup()\n// .setLngLat(e.lngLat)\n// .setHTML(e.features[0].properties.NAME_EN)\n// .addTo(map);\n// makeGetRequest(e.features[0].properties.NAME_EN,1)\n// });\n//\n// // Change the cursor to a pointer when the mouse is over the states layer.\n// map.on('mouseenter', 'NAME_EN', function() {\n// map.getCanvas().style.cursor = 'pointer';\n// });\n//\n// // Change it back to a pointer when it leaves.\n// map.on('mouseleave', 'NAME_EN', function() {\n// map.getCanvas().style.cursor = '';\n// });\n// });\n// /////// ******Add Africapolis\n// map.on('load', function() {\n//   // Add a circle layer with a vector source.\n//   map.addLayer({\n//     id: 'points-of-interest',\n//     source: {\n//       type: 'vector',\n//       url: 'mapbox://mkmd.ck5qy6ole1xja2npflwvfk78l-2j015'\n//     },\n//     'source-layer': 'metropole',\n//     type: 'circle',\n//     paint: {\n//       // Mapbox Style Specification paint properties\n//     },\n//     layout: {\n//       // Mapbox Style Specification layout properties\n//     }\n//   });\n//\n// });\n//axios.get('chad.json').then(response=>{console.log(response.data.Agglomerations[0].Longlat)})\n//mkmd.ck5qy6ole1xja2npflwvfk78l-2j015\nfunction makeGetRequest(){return _makeGetRequest.apply(this,arguments);}function _makeGetRequest(){_makeGetRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var covid,covid_name,covid_latest;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv');case 2:covid=_context.sent;//console.log(covid.data)\ncovid_name=papa.parse(covid.data,{header:true,skipEmptyLines:true}).data[\"0\"];covid_latest=Object.keys(covid_name)[Object.keys(covid_name).length-1];csv2geojson.csv2geojson(covid.data,{latfield:'Lat',lonfield:'Long',delimiter:',',numericFields:covid_latest},function(err,data){//let covid_latest=Object.keys(data.features[0].properties)[Object.keys(data.features[0].properties).length-1]\nvar covid_array=data;console.log(covid_array);map.on('load',function(){map.addSource('covid',{type:'geojson',data:covid_array});map.addSource('africapolis_country',{type:'vector',url:'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'});map.addLayer({id:'country',source:'africapolis_country',type:'fill','source-layer':'AfricaContinent',filter:[\"in\",\"ISO3\",\"BEN\",\"BFA\",\"CIV\",\"CPV\",\"GHA\",\"GIN\",\"GMB\",\"GNB\",\"LBR\",\"MLI\",\"NER\",\"NGA\",\"SEN\",\"SLE\",\"TGO\",\"TCD\",\"MRT\"],paint:{'fill-outline-color':'#000000','fill-color':'hsl(56, 96%, 67%)','fill-opacity':0.5}});map.addLayer({'id':'covid','type':'circle','source':'covid',filter:['in','Country/Region',\"Benin\",\"Burkina Faso\",\"Cabo Verde\",\"Chad\",\"Cote d'Ivoire\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Liberia\",\"Mali\",\"Niger\",\"Nigeria\",\"Senegal\",\"Sierra Leone\",\"Togo\"],'paint':{'circle-color':['step',['get',covid_latest],'#51bbd6',30,'#f1f075',100,'#f28cb1'],'circle-radius':['step',['get',covid_latest],20,100,30,750,40]}});map.addLayer({id:'covid-count',type:'symbol',source:'covid',filter:['in','Country/Region',\"Benin\",\"Burkina Faso\",\"Cabo Verde\",\"Chad\",\"Cote d'Ivoire\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Liberia\",\"Mali\",\"Niger\",\"Nigeria\",\"Senegal\",\"Sierra Leone\",\"Togo\"],layout:{'text-field':\"{\"+covid_latest+\"}\",'text-font':['DIN Offc Pro Medium','Arial Unicode MS Bold'],'text-size':12}});//new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\n});});//let covid_array= papa.parse(covid.data,{header:true,skipEmptyLines:true}).data;\n//var x;\n//for (x in [3,5,25,32,33,35,47,48,84,85,87,96,99,101,104,105,118,119,122,125,143,149,153,157,164,165,173,174,189,194,200,201,204,209,211,213,215,230,231,235,241,243,244,254,255,256,258,261,262,263]){new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map)\n//new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\n//}\n//let res = await axios.get(country+'.json');\n//console.log(res.data.Agglomerations);\n//let data = res.data.Agglomerations[select].Longlat;\n//new mapboxgl.Marker().setLngLat(data).addTo(map);\n//marker.setLngLat(data)\n//marker.addTo(map);\ncase 6:case\"end\":return _context.stop();}}},_callee);}));return _makeGetRequest.apply(this,arguments);}makeGetRequest();//let agglos = axios.get('egypt.json');\n//console.log(agglos)\n//let data = agglos.data.Agglomerations[0].Longlat;\n//var marker = new mapboxgl.Marker();\n}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this3.mapContainer=el;},className:\"mapContainer\"}));}}]);return Application;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(Application,null),document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","papa","csv2geojson","accessToken","Application","props","state","lng","lat","zoom","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","agglos","get","then","response","result","data","Agglomerations","console","log","Object","entries","e","makeGetRequest","covid","covid_name","parse","header","skipEmptyLines","covid_latest","keys","length","latfield","lonfield","delimiter","numericFields","err","covid_array","addSource","type","url","addLayer","id","source","filter","paint","layout","el","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport papa from 'papaparse';\r\nimport csv2geojson from 'csv2geojson'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n\r\n    map.on('move', () => {\r\n    this.setState({\r\n    lng: map.getCenter().lng.toFixed(4),\r\n    lat: map.getCenter().lat.toFixed(4),\r\n    zoom: map.getZoom().toFixed(2)\r\n    });\r\n    });\r\n\r\n    //.map(e => e.join(\",\")).join(\"\\n\")\r\n    let agglos = axios.get('senegal.json').then(response=>{\r\n      let result = response.data.Agglomerations[\"0\"]\r\n      console.log(Object.entries(result).map(e=>e))\r\n\r\n\r\n  });\r\n    //console.log(agglos)\r\n    //let data = agglos.data.Agglomerations[0].Longlat;\r\n    //var marker = new mapboxgl.Marker();\r\n\r\n    // map.on('load', function() {\r\n    // // Add a source for the state polygons.\r\n    // map.addSource('states', {\r\n    // 'type': 'geojson',\r\n    // 'data':\r\n    // 'https://gist.githubusercontent.com/mkmdivy/044d7f9f13cc2ec22ba6b1751c3527a6/raw/9908322b5ac7915720fc98190f755f139bde8ff3/africa'\r\n    // });\r\n    //\r\n    // // Add a layer showing the state polygons.\r\n    // map.addLayer({\r\n    // 'id': 'NAME_EN',\r\n    // 'type': 'fill',\r\n    // 'source': 'states',\r\n    // 'paint': {\r\n    // 'fill-color': 'rgba(200, 100, 240, 0.4)',\r\n    // 'fill-outline-color': 'rgba(200, 100, 240, 1)'\r\n    // }\r\n    // });\r\n    //\r\n    // // When a click event occurs on a feature in the states layer, open a popup at the\r\n    // // location of the click, with description HTML from its properties.\r\n    // map.on('click', 'NAME_EN', function(e) {\r\n    // new mapboxgl.Popup()\r\n    // .setLngLat(e.lngLat)\r\n    // .setHTML(e.features[0].properties.NAME_EN)\r\n    // .addTo(map);\r\n    // makeGetRequest(e.features[0].properties.NAME_EN,1)\r\n    // });\r\n    //\r\n    // // Change the cursor to a pointer when the mouse is over the states layer.\r\n    // map.on('mouseenter', 'NAME_EN', function() {\r\n    // map.getCanvas().style.cursor = 'pointer';\r\n    // });\r\n    //\r\n    // // Change it back to a pointer when it leaves.\r\n    // map.on('mouseleave', 'NAME_EN', function() {\r\n    // map.getCanvas().style.cursor = '';\r\n    // });\r\n    // });\r\n\r\n\r\n\r\n    // /////// ******Add Africapolis\r\n    // map.on('load', function() {\r\n    //   // Add a circle layer with a vector source.\r\n    //   map.addLayer({\r\n    //     id: 'points-of-interest',\r\n    //     source: {\r\n    //       type: 'vector',\r\n    //       url: 'mapbox://mkmd.ck5qy6ole1xja2npflwvfk78l-2j015'\r\n    //     },\r\n    //     'source-layer': 'metropole',\r\n    //     type: 'circle',\r\n    //     paint: {\r\n    //       // Mapbox Style Specification paint properties\r\n    //     },\r\n    //     layout: {\r\n    //       // Mapbox Style Specification layout properties\r\n    //     }\r\n    //   });\r\n    //\r\n    // });\r\n\r\n    //axios.get('chad.json').then(response=>{console.log(response.data.Agglomerations[0].Longlat)})\r\n    //mkmd.ck5qy6ole1xja2npflwvfk78l-2j015\r\n      async function makeGetRequest() {\r\n      let covid = await axios.get('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')\r\n      //console.log(covid.data)\r\n      let covid_name=papa.parse(covid.data,{header:true,skipEmptyLines:true}).data[\"0\"];\r\n      let covid_latest=Object.keys(covid_name)[Object.keys(covid_name).length-1]\r\n      csv2geojson.csv2geojson(covid.data,{\r\n    latfield: 'Lat',\r\n    lonfield: 'Long',\r\n    delimiter: ',',\r\n    numericFields:covid_latest\r\n},\r\nfunction(err,data){\r\n  //let covid_latest=Object.keys(data.features[0].properties)[Object.keys(data.features[0].properties).length-1]\r\n      let covid_array=data\r\n      console.log(covid_array)\r\n    map.on('load', function() {\r\n      map.addSource('covid', {\r\n        type: 'geojson',\r\n        data: covid_array\r\n      });\r\n      map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'});\r\n      map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'AfricaContinent',\r\n            filter:[\"in\",\"ISO3\",\"BEN\",\"BFA\",\"CIV\",\"CPV\",\"GHA\",\"GIN\",\"GMB\",\"GNB\",\"LBR\",\"MLI\",\"NER\",\"NGA\",\"SEN\",\"SLE\",\"TGO\",\"TCD\",\"MRT\"],\r\n            paint: {\r\n              'fill-outline-color': '#000000',\r\n              'fill-color': 'hsl(56, 96%, 67%)',\r\n              'fill-opacity': 0.5\r\n            }\r\n        });\r\n      map.addLayer({\r\n      'id': 'covid',\r\n      'type': 'circle',\r\n      'source': 'covid',\r\n      filter: ['in', 'Country/Region',\"Benin\",\"Burkina Faso\",\"Cabo Verde\",\"Chad\",\"Cote d'Ivoire\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Liberia\",\"Mali\",\"Niger\",\"Nigeria\",\"Senegal\",\"Sierra Leone\",\"Togo\"],\r\n      'paint': {\r\n        'circle-color': [\r\n      'step',\r\n      ['get', covid_latest],\r\n      '#51bbd6',\r\n      30,\r\n      '#f1f075',\r\n      100,\r\n      '#f28cb1'\r\n      ],\r\n        'circle-radius': [\r\n      'step',\r\n      ['get', covid_latest],\r\n      20,\r\n      100,\r\n      30,\r\n      750,\r\n      40\r\n      ]\r\n      }\r\n      });\r\n\r\n      map.addLayer({\r\n      id: 'covid-count',\r\n      type: 'symbol',\r\n      source: 'covid',\r\n      filter: ['in', 'Country/Region',\"Benin\",\"Burkina Faso\",\"Cabo Verde\",\"Chad\",\"Cote d'Ivoire\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Liberia\",\"Mali\",\"Niger\",\"Nigeria\",\"Senegal\",\"Sierra Leone\",\"Togo\"],\r\n      layout: {\r\n      'text-field': \"{\"+covid_latest+\"}\",\r\n      'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n      'text-size': 12\r\n      }\r\n      });\r\n        //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\r\n      });\r\n    });\r\n\r\n      //let covid_array= papa.parse(covid.data,{header:true,skipEmptyLines:true}).data;\r\n      //var x;\r\n      //for (x in [3,5,25,32,33,35,47,48,84,85,87,96,99,101,104,105,118,119,122,125,143,149,153,157,164,165,173,174,189,194,200,201,204,209,211,213,215,230,231,235,241,243,244,254,255,256,258,261,262,263]){new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map)\r\n        //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\r\n      //}\r\n\r\n\r\n      //let res = await axios.get(country+'.json');\r\n      //console.log(res.data.Agglomerations);\r\n      //let data = res.data.Agglomerations[select].Longlat;\r\n\r\n      //new mapboxgl.Marker().setLngLat(data).addTo(map);\r\n      //marker.setLngLat(data)\r\n      //marker.addTo(map);\r\n    }\r\n\r\n  makeGetRequest()\r\n    //let agglos = axios.get('egypt.json');\r\n    //console.log(agglos)\r\n    //let data = agglos.data.Agglomerations[0].Longlat;\r\n    //var marker = new mapboxgl.Marker();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}