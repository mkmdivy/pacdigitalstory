{"ast":null,"code":"var _jsxFileName = \"C:\\\\worldbank\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\n\nconst App = props => {\n  // +\"  \"+e.freq\n  const options = [];\n  const wordcount = [];\n  wordlist.map(e => options.push({\n    value: e.name,\n    label: e.name\n  }));\n  greendb.map(e => {\n    e.keyword = e.Name.split(' ');\n    e.keyword.map(wordcount.append(x));\n  });\n  console.log(wordcount);\n  console.log(options);\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"];\n  const [selectedOption, setSelectedOption] = useState('Korea');\n  console.log(selectedOption);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSelectedOption({\n      value: \"Korea\",\n      label: \"Korea\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }\n  }, \"Korea\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => console.log(\"KOREA\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }\n  }, \"Korea\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/worldbank/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","App","props","options","wordcount","map","e","push","value","name","label","keyword","Name","split","append","x","console","log","wordAvoid","selectedOption","setSelectedOption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAIA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB;AACF,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACAJ,EAAAA,QAAQ,CAACK,GAAT,CAAaC,CAAC,IAAIH,OAAO,CAACI,IAAR,CAAa;AAACC,IAAAA,KAAK,EAAEF,CAAC,CAACG,IAAV;AAAgBC,IAAAA,KAAK,EAAEJ,CAAC,CAACG;AAAzB,GAAb,CAAlB;AACAV,EAAAA,OAAO,CAACM,GAAR,CAAYC,CAAC,IAAI;AACfA,IAAAA,CAAC,CAACK,OAAF,GAAUL,CAAC,CAACM,IAAF,CAAOC,KAAP,CAAa,GAAb,CAAV;AACAP,IAAAA,CAAC,CAACK,OAAF,CAAUN,GAAV,CAAcD,SAAS,CAACU,MAAV,CAAiBC,CAAjB,CAAd;AACD,GAHD;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,QAAMe,SAAS,GAAG,CAAC,KAAD,EAAO,IAAP,EAAY,IAAZ,EAAiB,KAAjB,EAAuB,IAAvB,EAA4B,KAA5B,EAAkC,GAAlC,EAAsC,IAAtC,EAA2C,MAA3C,EAAkD,IAAlD,EAAuD,MAAvD,EAA8D,GAA9D,EAAkE,OAAlE,EAA0E,KAA1E,EAAgF,IAAhF,EAAqF,KAArF,EAA2F,MAA3F,EAAkG,IAAlG,EAAuG,GAAvG,EAA2G,MAA3G,EAAkH,OAAlH,EAA0H,IAA1H,EAA+H,KAA/H,EAAqI,IAArI,EAA0I,IAA1I,EAA+I,QAA/I,EAAwJ,OAAxJ,EAAgK,EAAhK,EAAmK,aAAnK,EAAiL,KAAjL,EAAuL,MAAvL,EAA8L,KAA9L,EAAoM,GAApM,EAAwM,KAAxM,EAA8M,IAA9M,EAAmN,MAAnN,EAA0N,IAA1N,EAA+N,IAA/N,EAAoO,OAApO,EAA4O,GAA5O,CAAlB;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,OAAD,CAApD;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAYE,cAAZ;AAKA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AACA,IAAA,OAAO,EAAEhB,OADT,CAEA;AAFA;AAGA,IAAA,KAAK,EAAEgB,cAHP;AAIA,IAAA,QAAQ,EAAEC,iBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAOA;AAAQ,IAAA,OAAO,EAAE,MAAKA,iBAAiB,CAAC;AAACZ,MAAAA,KAAK,EAAC,OAAP;AAAeE,MAAAA,KAAK,EAAC;AAArB,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPA,eAQA;AAAQ,IAAA,OAAO,EAAE,MAAKM,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARA,CADA;AAYC,CAhCD;;AAkCA,eAAehB,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\n\r\n\r\n\r\nconst App = props => {\r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nwordlist.map(e => options.push({value: e.name, label: e.name}))\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.split(' ')\r\n  e.keyword.map(wordcount.append(x))    \r\n})\r\nconsole.log(wordcount)\r\n\r\nconsole.log(options)\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n\r\nconst [selectedOption, setSelectedOption] = useState('Korea');\r\nconsole.log(selectedOption)\r\n\r\n\r\n\r\n  \r\nreturn (\r\n<div>\r\n<Select \r\noptions={options} \r\n// isMulti \r\nvalue={selectedOption}\r\nonChange={setSelectedOption}\r\n/>\r\n<button onClick={()=> setSelectedOption({value:\"Korea\",label:\"Korea\"})}>Korea</button>\r\n<button onClick={()=> console.log(\"KOREA\")}>Korea</button>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}