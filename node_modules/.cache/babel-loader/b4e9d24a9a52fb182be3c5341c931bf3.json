{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Select from 'react-select'; //// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst countryISOMapping = {\n  AO: 1,\n  BI: 2,\n  BJ: 3,\n  BF: 4,\n  BW: 5,\n  CF: 6,\n  CI: 7,\n  CM: 8,\n  CD: 9,\n  CG: 10,\n  CV: 11,\n  DJ: 12,\n  DZ: 13,\n  EG: 14,\n  ER: 15,\n  ET: 16,\n  GA: 17,\n  GH: 18,\n  GN: 19,\n  GM: 20,\n  GW: 21,\n  GQ: 22,\n  KE: 23,\n  LR: 24,\n  LY: 25,\n  LS: 26,\n  MA: 27,\n  ML: 28,\n  MZ: 29,\n  MR: 30,\n  MW: 31,\n  NA: 32,\n  NE: 33,\n  NG: 34,\n  RW: 35,\n  SD: 36,\n  SN: 37,\n  SL: 38,\n  SO: 39,\n  SS: 40,\n  ST: 41,\n  SZ: 42,\n  TD: 43,\n  TG: 44,\n  TN: 45,\n  TZ: 46,\n  UG: 47,\n  ZA: 48,\n  ZM: 49,\n  ZW: 50,\n  AGO: 1,\n  BDI: 2,\n  BEN: 3,\n  BFA: 4,\n  BWA: 5,\n  CAF: 6,\n  CIV: 7,\n  CMR: 8,\n  COD: 9,\n  COG: 10,\n  CPV: 11,\n  DJI: 12,\n  DZA: 13,\n  EGY: 14,\n  ERI: 15,\n  ETH: 16,\n  GAB: 17,\n  GHA: 18,\n  GIN: 19,\n  GMB: 20,\n  GNB: 21,\n  GNQ: 22,\n  KEN: 23,\n  LBR: 24,\n  LBY: 25,\n  LSO: 26,\n  MAR: 27,\n  MLI: 28,\n  MOZ: 29,\n  MRT: 30,\n  MWI: 31,\n  NAM: 32,\n  NER: 33,\n  NGA: 34,\n  RWA: 35,\n  SDN: 36,\n  SEN: 37,\n  SLE: 38,\n  SOM: 39,\n  SSD: 40,\n  STP: 41,\n  SWZ: 42,\n  TCD: 43,\n  TGO: 44,\n  TUN: 45,\n  TZA: 46,\n  UGA: 47,\n  ZAF: 48,\n  ZMB: 49,\n  ZWE: 50\n};\n\nfunction getCountryISO3(countryCode) {\n  return countryISOMapping[countryCode];\n}\n\nconst agglomeration_fill_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 0.5)\", 10000, \"hsla(55, 30%, 93%, 0.5)\", 30000, \"hsla(60, 100%, 90%, 0.5)\", 100000, \"hsla(98, 55%, 81%, 0.5)\", 300000, \"hsla(166, 44%, 65%, 0.5)\", 1000000, \"hsla(186, 53%, 51%, 0.5)\", 2000000, \"hsla(197, 74%, 43%, 0.5)\", 11847635, \"hsla(197, 74%, 43%, 0.5)\"];\nconst agglomeration_stroke_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 1)\", 10000, \"hsla(55, 30%, 93%, 1)\", 30000, \"hsla(60, 100%, 90%, 1)\", 100000, \"hsla(98, 55%, 81%, 1)\", 300000, \"hsla(166, 44%, 65%, 1)\", 1000000, \"hsla(186, 53%, 51%, 1)\", 2000000, \"hsla(197, 74%, 43%, 1)\", 11847635, \"hsla(197, 74%, 43%, 1)\"];\nconst options = [{\n  label: \"Angola\",\n  value: \"AGO\"\n}, {\n  label: \"Burundi\",\n  value: \"BDI\"\n}, {\n  label: \"Benin\",\n  value: \"BEN\"\n}, {\n  label: \"Burkina Faso\",\n  value: \"BFA\"\n}, {\n  label: \"Botswana\",\n  value: \"BWA\"\n}, {\n  label: \"Central African Republic\",\n  value: \"CAF\"\n}, {\n  label: \"Cote d`Ivoire\",\n  value: \"CIV\"\n}, {\n  label: \"Cameroon\",\n  value: \"CMR\"\n}, {\n  label: \"Democratic Republic of the Congo\",\n  value: \"COD\"\n}, {\n  label: \"Republic of the Congo\",\n  value: \"COG\"\n}, {\n  label: \"Cabo Verde\",\n  value: \"CPV\"\n}, {\n  label: \"Djibouti\",\n  value: \"DJI\"\n}, {\n  label: \"Algeria\",\n  value: \"DZA\"\n}, {\n  label: \"Egypt\",\n  value: \"EGY\"\n}, {\n  label: \"Eritrea\",\n  value: \"ERI\"\n}, {\n  label: \"Ethiopia\",\n  value: \"ETH\"\n}, {\n  label: \"Gabon\",\n  value: \"GAB\"\n}, {\n  label: \"Ghana\",\n  value: \"GHA\"\n}, {\n  label: \"Guinea\",\n  value: \"GIN\"\n}, {\n  label: \"The Gambia\",\n  value: \"GMB\"\n}, {\n  label: \"Guinea-Bissau\",\n  value: \"GNB\"\n}, {\n  label: \"Equatorial Guinea\",\n  value: \"GNQ\"\n}, {\n  label: \"Kenya\",\n  value: \"KEN\"\n}, {\n  label: \"Liberia\",\n  value: \"LBR\"\n}, {\n  label: \"Libya\",\n  value: \"LBY\"\n}, {\n  label: \"Lesotho\",\n  value: \"LSO\"\n}, {\n  label: \"Morocco\",\n  value: \"MAR\"\n}, {\n  label: \"Mali\",\n  value: \"MLI\"\n}, {\n  label: \"Mozambique\",\n  value: \"MOZ\"\n}, {\n  label: \"Mauritania\",\n  value: \"MRT\"\n}, {\n  label: \"Malawi\",\n  value: \"MWI\"\n}, {\n  label: \"Namibia\",\n  value: \"NAM\"\n}, {\n  label: \"Niger\",\n  value: \"NER\"\n}, {\n  label: \"Nigeria\",\n  value: \"NGA\"\n}, {\n  label: \"Rwanda\",\n  value: \"RWA\"\n}, {\n  label: \"Sudan\",\n  value: \"SDN\"\n}, {\n  label: \"Senegal\",\n  value: \"SEN\"\n}, {\n  label: \"Sierra Leone\",\n  value: \"SLE\"\n}, {\n  label: \"Somalia\",\n  value: \"SOM\"\n}, {\n  label: \"South Sudan\",\n  value: \"SSD\"\n}, {\n  label: \"Sao Tome and Principe\",\n  value: \"STP\"\n}, {\n  label: \"Kingdom of Eswatini\",\n  value: \"SWZ\"\n}, {\n  label: \"Chad\",\n  value: \"TCD\"\n}, {\n  label: \"Togo\",\n  value: \"TGO\"\n}, {\n  label: \"Tunisia\",\n  value: \"TUN\"\n}, {\n  label: \"Tanzania\",\n  value: \"TZA\"\n}, {\n  label: \"Uganda\",\n  value: \"UGA\"\n}, {\n  label: \"South Africa\",\n  value: \"ZAF\"\n}, {\n  label: \"Zambia\",\n  value: \"ZMB\"\n}, {\n  label: \"Zimbabwe\",\n  value: \"ZWE\"\n}]; //// Basic setting of the map\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = obj => {\n      this.map.removeLayer(obj);\n    };\n\n    this.add_point = (obj, country) => {\n      this.map.addLayer({\n        id: obj,\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\"all\", [\"==\", \"ISO3\", country], [\">\", \"Population_2015\", 0]],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      });\n    };\n\n    this.add_shape = (obj, country) => {\n      this.map.addLayer({\n        id: obj,\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'AfricaContinent',\n        filter: [\"==\", \"ISO3\", country],\n        paint: {\n          'fill-color': 'hsl(56, 96%, 67%)',\n          'fill-opacity': 0.9\n        }\n      });\n      console.log(this.map.getSource(AfircaContinent)); //this.map.fitBounds([[-79, 43], [-73, 45]])\n    };\n\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3,\n      selectedOption: {\n        label: '',\n        value: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    this.map.on('move', () => {\n      this.setState({\n        lng: this.map.getCenter().lng.toFixed(4),\n        lat: this.map.getCenter().lat.toFixed(4),\n        zoom: this.map.getZoom().toFixed(2)\n      });\n    }); //// Import Africapolis agglomerations from mapbox\n\n    this.map.on('load', () => {\n      // Add Country shape\n      this.map.addSource('africapolis_country', {\n        type: 'vector',\n        url: 'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'\n      }); // Add Agglomerations\n\n      this.map.addSource('africapolis_agglos', {\n        type: 'vector',\n        url: 'mapbox://mkmd.3e0rk98j'\n      }); // Add Country label\n\n      this.map.addSource('africapolis_country_label', {\n        type: 'vector',\n        url: 'mapbox://mapbox.mapbox-streets-v7'\n      }); // Add Country layer\n\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'AfricaContinent',\n        //filter:[\">\",\"Population_2015\",0],\n        paint: {\n          'fill-color': 'hsl(56, 96%, 67%)',\n          'fill-opacity': 0.5\n        }\n      }); // Add Agglomerations layer\n\n      this.map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\">\", \"Population_2015\", 0],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      }); //mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4\n      //AfricaContinent\n      //ISO3_CODE\n\n      this.map.addLayer({\n        id: 'country_labels',\n        source: 'africapolis_country_label',\n        type: 'symbol',\n        'source-layer': 'country_label',\n        filter: [\"all\", [\"in\", \"$type\", \"Polygon\", \"LineString\", \"Point\"], [\"all\", [\"in\", \"code\", \"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"LR\", \"LS\", \"LY\", \"MA\", \"ML\", \"MR\", \"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RW\", \"SD\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \"TN\", \"TZ\", \"UG\", \"ZA\", \"ZM\", \"ZW\"]]],\n        layout: {\n          'text-field': [\"get\", \"name_en\"],\n          'text-font': [\"Helvetica Neue LT Std 75 Bold\", \"Arial Unicode MS Regular\"],\n          'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22]] //'text-color':'#FFFF00'\n          //'circle-stroke-color': agglomeration_stroke_color,\n          //'circle-stroke-width': 3,\n          //'circle-color': agglomeration_fill_color\n\n        }\n      });\n      this.map.on('click', 'country_labels', e => {\n        this.setState({\n          selectedOption: {\n            value: getCountryISO3(e.features[0].properties.code),\n            label: e.features[0].properties.name_en\n          }\n        });\n        console.log(getCountryISO3(e.features[0].properties.code));\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedOption !== this.state.selectedOption) {\n      console.log(this.state.selectedOption, prevState.selectedOption);\n      this.remove('country');\n      this.add_shape('country', this.state.selectedOption.value);\n      this.remove('agglomerations');\n      this.add_point('agglomerations', this.state.selectedOption.value);\n    }\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom: \", this.state.zoom), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: value => this.setState({\n        selectedOption: value\n      }),\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","accessToken","countryISOMapping","AO","BI","BJ","BF","BW","CF","CI","CM","CD","CG","CV","DJ","DZ","EG","ER","ET","GA","GH","GN","GM","GW","GQ","KE","LR","LY","LS","MA","ML","MZ","MR","MW","NA","NE","NG","RW","SD","SN","SL","SO","SS","ST","SZ","TD","TG","TN","TZ","UG","ZA","ZM","ZW","AGO","BDI","BEN","BFA","BWA","CAF","CIV","CMR","COD","COG","CPV","DJI","DZA","EGY","ERI","ETH","GAB","GHA","GIN","GMB","GNB","GNQ","KEN","LBR","LBY","LSO","MAR","MLI","MOZ","MRT","MWI","NAM","NER","NGA","RWA","SDN","SEN","SLE","SOM","SSD","STP","SWZ","TCD","TGO","TUN","TZA","UGA","ZAF","ZMB","ZWE","getCountryISO3","countryCode","agglomeration_fill_color","agglomeration_stroke_color","options","label","value","Application","Component","constructor","props","remove","obj","map","removeLayer","add_point","country","addLayer","id","source","type","filter","paint","add_shape","console","log","getSource","AfircaContinent","state","lng","lat","zoom","selectedOption","componentDidMount","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","addSource","url","layout","e","features","properties","code","name_en","componentDidUpdate","prevProps","prevState","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\nconst countryISOMapping = {AO:1, BI:2, BJ:3, BF:4, BW:5, CF:6, CI:7, CM:8, CD:9, CG:10, CV:11, DJ:12, DZ:13, EG:14, ER:15, ET:16, GA:17, GH:18, GN:19, GM:20, GW:21, GQ:22, KE:23, LR:24, LY:25, LS:26, MA:27, ML:28, MZ:29, MR:30, MW:31, NA:32, NE:33, NG:34, RW:35, SD:36, SN:37, SL:38, SO:39, SS:40, ST:41, SZ:42, TD:43, TG:44, TN:45, TZ:46, UG:47, ZA:48, ZM:49, ZW:50, AGO:1, BDI:2, BEN:3, BFA:4, BWA:5, CAF:6, CIV:7, CMR:8, COD:9, COG:10, CPV:11, DJI:12, DZA:13, EGY:14, ERI:15, ETH:16, GAB:17, GHA:18, GIN:19, GMB:20, GNB:21, GNQ:22, KEN:23, LBR:24, LBY:25, LSO:26, MAR:27, MLI:28, MOZ:29, MRT:30, MWI:31, NAM:32, NER:33, NGA:34, RWA:35, SDN:36, SEN:37, SLE:38, SOM:39, SSD:40, STP:41, SWZ:42, TCD:43, TGO:44, TUN:45, TZA:46, UGA:47, ZAF:48, ZMB:49, ZWE:50 }\r\n\r\nfunction getCountryISO3(countryCode) { return countryISOMapping[countryCode] }\r\n\r\nconst agglomeration_fill_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 0.5)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 0.5)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 0.5)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 0.5)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 0.5)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 0.5)\",\r\n  2000000,\r\n  \"hsla(197, 74%, 43%, 0.5)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 0.5)\"\r\n ]\r\n const agglomeration_stroke_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 1)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 1)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 1)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 1)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 1)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 1)\",\r\n  2000000,\r\n  \"hsla(197, 74%, 43%, 1)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 1)\"\r\n ]\r\n const options = [{ label:\"Angola\",value:\"AGO\" }, { label:\"Burundi\",value:\"BDI\" }, { label:\"Benin\",value:\"BEN\" }, { label:\"Burkina Faso\",value:\"BFA\" }, { label:\"Botswana\",value:\"BWA\" }, { label:\"Central African Republic\",value:\"CAF\" }, { label:\"Cote d`Ivoire\",value:\"CIV\" }, { label:\"Cameroon\",value:\"CMR\" }, { label:\"Democratic Republic of the Congo\",value:\"COD\" }, { label:\"Republic of the Congo\",value:\"COG\" }, { label:\"Cabo Verde\",value:\"CPV\" }, { label:\"Djibouti\",value:\"DJI\" }, { label:\"Algeria\",value:\"DZA\" }, { label:\"Egypt\",value:\"EGY\" }, { label:\"Eritrea\",value:\"ERI\" }, { label:\"Ethiopia\",value:\"ETH\" }, { label:\"Gabon\",value:\"GAB\" }, { label:\"Ghana\",value:\"GHA\" }, { label:\"Guinea\",value:\"GIN\" }, { label:\"The Gambia\",value:\"GMB\" }, { label:\"Guinea-Bissau\",value:\"GNB\" }, { label:\"Equatorial Guinea\",value:\"GNQ\" }, { label:\"Kenya\",value:\"KEN\" }, { label:\"Liberia\",value:\"LBR\" }, { label:\"Libya\",value:\"LBY\" }, { label:\"Lesotho\",value:\"LSO\" }, { label:\"Morocco\",value:\"MAR\" }, { label:\"Mali\",value:\"MLI\" }, { label:\"Mozambique\",value:\"MOZ\" }, { label:\"Mauritania\",value:\"MRT\" }, { label:\"Malawi\",value:\"MWI\" }, { label:\"Namibia\",value:\"NAM\" }, { label:\"Niger\",value:\"NER\" }, { label:\"Nigeria\",value:\"NGA\" }, { label:\"Rwanda\",value:\"RWA\" }, { label:\"Sudan\",value:\"SDN\" }, { label:\"Senegal\",value:\"SEN\" }, { label:\"Sierra Leone\",value:\"SLE\" }, { label:\"Somalia\",value:\"SOM\" }, { label:\"South Sudan\",value:\"SSD\" }, { label:\"Sao Tome and Principe\",value:\"STP\" }, { label:\"Kingdom of Eswatini\",value:\"SWZ\" }, { label:\"Chad\",value:\"TCD\" }, { label:\"Togo\",value:\"TGO\" }, { label:\"Tunisia\",value:\"TUN\" }, { label:\"Tanzania\",value:\"TZA\" }, { label:\"Uganda\",value:\"UGA\" }, { label:\"South Africa\",value:\"ZAF\" }, { label:\"Zambia\",value:\"ZMB\" }, { label:\"Zimbabwe\",value:\"ZWE\" }];\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3,\r\n      selectedOption: {label: '', value: ''}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    this.map.on('move', () => {\r\n      this.setState({\r\n      lng: this.map.getCenter().lng.toFixed(4),\r\n      lat: this.map.getCenter().lat.toFixed(4),\r\n      zoom: this.map.getZoom().toFixed(2)\r\n      });\r\n    });\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4'});\r\n// Add Agglomerations\r\n      this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\r\n// Add Country label\r\n      this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mapbox.mapbox-streets-v7'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'AfricaContinent',\r\n            //filter:[\">\",\"Population_2015\",0],\r\n            paint: {\r\n              'fill-color': 'hsl(56, 96%, 67%)',\r\n              'fill-opacity': 0.5\r\n            }\r\n        });\r\n\r\n\r\n// Add Agglomerations layer\r\n      this.map.addLayer({\r\n            id: 'agglomerations',\r\n            source:'africapolis_agglos',\r\n            type: 'circle',\r\n            'source-layer':'africapolis2020-3mv6ux',\r\n            filter:[\">\",\"Population_2015\",0],\r\n            paint: {\r\n                'circle-stroke-color': agglomeration_stroke_color,\r\n                'circle-stroke-width': 3,\r\n                'circle-color': agglomeration_fill_color\r\n            }\r\n        });\r\n\r\n//mkmd.ck19bzbfg07z42tmz06bk8soe-6dzi4\r\n//AfricaContinent\r\n//ISO3_CODE\r\n      this.map.addLayer({\r\n            id: 'country_labels',\r\n            source:'africapolis_country_label',\r\n            type: 'symbol',\r\n            'source-layer':'country_label',\r\n            filter:[ \"all\", [ \"in\", \"$type\", \"Polygon\", \"LineString\", \"Point\" ], [ \"all\", [ \"in\", \"code\", \"AO\", \"BF\", \"BI\", \"BJ\", \"BW\", \"CD\", \"CF\", \"CG\", \"CI\", \"CM\", \"CV\", \"DJ\", \"DZ\", \"EG\", \"ER\", \"ET\", \"GA\", \"GH\", \"GM\", \"GN\", \"GQ\", \"GW\", \"KE\", \"LR\", \"LS\", \"LY\", \"MA\", \"ML\", \"MR\", \"MW\", \"MZ\", \"NA\", \"NE\", \"NG\", \"RW\", \"SD\", \"SL\", \"SN\", \"SO\", \"SS\", \"ST\", \"SZ\", \"TD\", \"TG\", \"TN\", \"TZ\", \"UG\", \"ZA\", \"ZM\", \"ZW\" ] ] ],\r\n            layout: {\r\n              'text-field':[\"get\",\"name_en\"],\r\n              'text-font': [  \"Helvetica Neue LT Std 75 Bold\", \"Arial Unicode MS Regular\"],\r\n              'text-size': [ \"interpolate\", [\"linear\"], [\"zoom\"], 2, [ \"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [ \"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ]\r\n\r\n              //'text-color':'#FFFF00'\r\n                //'circle-stroke-color': agglomeration_stroke_color,\r\n                //'circle-stroke-width': 3,\r\n                //'circle-color': agglomeration_fill_color\r\n            }\r\n        });\r\n\r\n        this.map.on('click', 'country_labels', e =>  {\r\n              this.setState({ selectedOption: {value: getCountryISO3(e.features[0].properties.code), label: e.features[0].properties.name_en  } })\r\n              console.log(getCountryISO3(e.features[0].properties.code))\r\n            });\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    if( prevState.selectedOption !== this.state.selectedOption ) {\r\n      console.log(this.state.selectedOption, prevState.selectedOption);\r\n      this.remove('country');\r\n      this.add_shape('country',this.state.selectedOption.value);\r\n      this.remove('agglomerations');\r\n      this.add_point('agglomerations',this.state.selectedOption.value);\r\n    }\r\n}\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\nadd_point = (obj,country) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_agglos',\r\n        type: 'circle',\r\n        'source-layer':'africapolis2020-3mv6ux',\r\n        filter:[\"all\",[\"==\",\"ISO3\",country],[\">\",\"Population_2015\",0]],\r\n        paint: {\r\n        'circle-stroke-color': agglomeration_stroke_color,\r\n        'circle-stroke-width': 3,\r\n        'circle-color': agglomeration_fill_color\r\n        }\r\n    });\r\n}\r\nadd_shape = (obj,country) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'AfricaContinent',\r\n        filter:[\"==\",\"ISO3\",country],\r\n        paint: {\r\n          'fill-color': 'hsl(56, 96%, 67%)',\r\n          'fill-opacity': 0.9\r\n        }\r\n    });\r\n    console.log(this.map.getSource(AfircaContinent))\r\n    //this.map.fitBounds([[-79, 43], [-73, 45]])\r\n}\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" >\r\n        <Select\r\n                value={selectedOption}\r\n                onChange={(value) => this.setState({ selectedOption: value}) }\r\n                options={options}\r\n              />\r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}