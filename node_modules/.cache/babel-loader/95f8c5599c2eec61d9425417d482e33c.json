{"ast":null,"code":"var _jsxFileName = \"C:\\\\greentech\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\nimport classes from './Site.module.css';\nimport { Badge, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StackGrid from \"react-stack-grid\";\nimport { Web, Videocam, Description, PictureAsPdf } from '@material-ui/icons';\n\nconst App = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    }\n  }));\n  const [renderHook, setRenderHook] = useState();\n  useEffect(() => {\n    const dataPresent = input => {\n      return /*#__PURE__*/React.createElement(StackGrid, {\n        columnWidth: 230,\n        gutterWidth: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, result.slice(0, 150).map((e, idx) => {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          href: e.Link,\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 52\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          key: idx,\n          className: e.Type === \"Website\" ? classes.buttonW : e.Type === 'Video' ? classes.buttonV : e.Type === 'Article' ? classes.buttonA : classes.buttonR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 85\n          }\n        }, e.Name, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: \"fixed\",\n            right: 5,\n            bottom: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 253\n          }\n        }, e.Type === \"Website\" ? /*#__PURE__*/React.createElement(Web, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 323\n          }\n        }) : e.Type === 'Video' ? /*#__PURE__*/React.createElement(Videocam, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 350\n          }\n        }) : e.Type === 'Article' ? /*#__PURE__*/React.createElement(Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 386\n          }\n        }) : /*#__PURE__*/React.createElement(PictureAsPdf, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 403\n          }\n        })), \" \"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 435\n          }\n        }));\n      }));\n    };\n\n    setTimeout(() => {\n      setRenderHook(null);\n    }, 0);\n  }, []);\n  const chipclasses = useStyles();\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      background: \"rgba(45,45,45,1)\",\n      // match with the menu\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"rgba(255,255,255,1)\" : \"rgba(255,255,255,1)\" // Removes weird border around container      \n      // \"&:hover\": {\n      //   // Overwrittes the different states of border\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\n      // }\n\n    }),\n    menu: base => ({ ...base,\n      // override border radius to match the box\n      borderRadius: 0,\n      // kill the gap\n      marginTop: 0\n    }),\n    menuList: base => ({ ...base,\n      // kill the white space on first and last option\n      padding: 0\n    }),\n    singleValue: base => ({ ...base,\n      color: 'white'\n    })\n  };\n  useEffect(() => {}, []);\n\n  const handleClick = e => {\n    console.log(e);\n    setSelectedOption({\n      value: e,\n      label: e\n    });\n  };\n\n  const top5buttons = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: chipclasses.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      value: '',\n      onClick: e => handleClick(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, \"Select all\"), options.slice(0, 10).map((e, i) => /*#__PURE__*/React.createElement(Badge, {\n      badgeContent: freqSorted[i],\n      color: freqSorted[i] > 50 ? \"secondary\" : freqSorted[i] > 40 ? \"error\" : \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: e.value,\n      onClick: () => handleClick(e.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 126\n      }\n    }))));\n  };\n\n  {\n    /* <button className={classes.buttonActive}>{e.Name}</button> */\n  }\n  const [selectedOption, setSelectedOption] = useState({\n    value: '',\n    label: 'Search'\n  });\n  console.log(selectedOption); // +\"  \"+e.freq\n\n  const options = [];\n  const wordcount = [];\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"]; // wordlist.map(e => options.push({value: e.name, label: e.name}))\n\n  greendb.map(e => {\n    e.keyword = e.Name.toUpperCase().split(' '); // e.keyword.map(x => wordcount.push(x))    \n  }); // greendb.map(e => console.log(e.keyword))\n\n  const [web, setweb] = useState(true);\n  const [video, setvideo] = useState(true);\n  const [report, setreport] = useState(true);\n  const [article, setarticle] = useState(true);\n  let typelist = [];\n\n  if (web) {\n    typelist.push(\"Website\");\n  }\n\n  if (video) {\n    typelist.push(\"Video\");\n  }\n\n  if (report) {\n    typelist.push(\"Report\");\n  }\n\n  if (article) {\n    typelist.push(\"Article\");\n  }\n\n  console.log(typelist);\n  let result = selectedOption.value == '' ? greendb.filter(e => typelist.includes(e.Type)) : greendb.filter(e => typelist.includes(e.Type) && e.keyword.includes(selectedOption.value));\n  result.map(e => e.keyword.map(x => wordcount.push(x)));\n  const wordresult = wordcount.filter(e => !wordAvoid.includes(e)); // console.log(wordcount)\n\n  const counts = {};\n  wordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1); // console.log(counts)\n  // console.log(selectedOption)\n\n  const keysSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  });\n  console.log(keysSorted); // bar,me,you,foo\n\n  const freqSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  }).map(key => counts[key]);\n  console.log(freqSorted);\n  keysSorted.map((e, idx) => options.push({\n    value: e,\n    label: e + \" \" + freqSorted[idx]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      right: 350,\n      top: 20,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Web, {\n    color: web ? 'white' : 'disabled',\n    onClick: e => web ? setweb(false) : setweb(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 66\n    }\n  }), /*#__PURE__*/React.createElement(Videocam, {\n    color: video ? 'white' : 'disabled',\n    onClick: e => video ? setvideo(false) : setvideo(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 152\n    }\n  }), /*#__PURE__*/React.createElement(Description, {\n    color: report ? 'white' : 'disabled',\n    onClick: e => report ? setreport(false) : setreport(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 251\n    }\n  }), /*#__PURE__*/React.createElement(PictureAsPdf, {\n    color: article ? 'white' : 'disabled',\n    onClick: e => article ? setarticle(false) : setarticle(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 357\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, \"Green Technologies Knowledge Resources Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: customStyles,\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  })), top5buttons()), dataPresent());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/greentech/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","classes","Badge","Chip","makeStyles","StackGrid","Web","Videocam","Description","PictureAsPdf","App","props","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","renderHook","setRenderHook","dataPresent","input","result","slice","map","e","idx","Link","Type","buttonW","buttonV","buttonA","buttonR","Name","position","right","bottom","setTimeout","chipclasses","customStyles","control","base","state","background","borderRadius","isFocused","borderColor","menu","marginTop","menuList","padding","singleValue","color","handleClick","console","log","setSelectedOption","value","label","top5buttons","target","options","i","freqSorted","selectedOption","wordcount","wordAvoid","keyword","toUpperCase","split","web","setweb","video","setvideo","report","setreport","article","setarticle","typelist","push","filter","includes","x","wordresult","counts","num","keysSorted","Object","keys","sort","b","a","key","main","header","top","title","box"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport { Badge, Chip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StackGrid from \"react-stack-grid\";\r\nimport { Web, Videocam, Description, PictureAsPdf} from '@material-ui/icons';\r\n\r\n\r\nconst App = props => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const [renderHook, setRenderHook] = useState();\r\n  useEffect(() => {\r\n    const dataPresent = (input) => {\r\n      return (\r\n        \r\n          <StackGrid\r\n          columnWidth={230}\r\n          gutterWidth={10}        \r\n        >\r\n        {result.slice(0,150).map((e,idx)=> {return <a href={e.Link} target=\"_blank\"><button key={idx} className={e.Type===\"Website\"? classes.buttonW : e.Type==='Video'?  classes.buttonV : e.Type==='Article'?  classes.buttonA : classes.buttonR}>{e.Name}<div style={{position:\"fixed\",right:5,bottom:5}}>{e.Type===\"Website\"? <Web/> : e.Type==='Video'? <Videocam/>  : e.Type==='Article'?  <Description/> : <PictureAsPdf/>}</div> </button><br/></a>})}\r\n        </StackGrid>\r\n        \r\n      )\r\n    \r\n    }    \r\n\r\n\r\n\r\n\r\n      setTimeout(() => {\r\n        setRenderHook(null);\r\n      }, 0);\r\n    }, []);\r\n\r\n  const chipclasses = useStyles();\r\n\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      background: \"rgba(45,45,45,1)\",\r\n      // match with the menu\r\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n      // Overwrittes the different states of border\r\n      borderColor: state.isFocused ? \"rgba(255,255,255,1)\" : \"rgba(255,255,255,1)\",\r\n      // Removes weird border around container      \r\n      // \"&:hover\": {\r\n      //   // Overwrittes the different states of border\r\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\r\n\r\n      // }\r\n    }),\r\n    menu: base => ({\r\n      ...base,\r\n      // override border radius to match the box\r\n      borderRadius: 0,\r\n      // kill the gap\r\n      marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n      ...base,\r\n      // kill the white space on first and last option\r\n                 \r\n      padding: 0\r\n    }),\r\n    singleValue: base => ({\r\n      ...base,\r\n      color:'white'            \r\n    })\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => { \r\n    \r\n  },[])\r\n\r\n\r\n  const handleClick = (e) => {\r\n    console.log(e)\r\n    setSelectedOption({value:e, label:e})    \r\n  }\r\n \r\n  const top5buttons = () => {\r\n    return (\r\n      <div class={chipclasses.root}>\r\n      <button value={''} onClick={(e) => handleClick(e.target.value)}>{\"Select all\"}</button>            \r\n      {options.slice(0,10).map((e,i)=> \r\n      <Badge badgeContent={freqSorted[i]} color={freqSorted[i] > 50? \"secondary\" : freqSorted[i] > 40? \"error\" : \"primary\" }><Chip  label={e.value} onClick={() => handleClick(e.value)} /></Badge>)\r\n      }      \r\n      </div>\r\n    )\r\n  \r\n  }    \r\n  \r\n \r\n\r\n{/* <button className={classes.buttonActive}>{e.Name}</button> */}\r\n\r\n  const [selectedOption, setSelectedOption] = useState({value: '', label: 'Search'});\r\n  console.log(selectedOption)\r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n// wordlist.map(e => options.push({value: e.name, label: e.name}))\r\n\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.toUpperCase().split(' ')\r\n  // e.keyword.map(x => wordcount.push(x))    \r\n})\r\n\r\n// greendb.map(e => console.log(e.keyword))\r\n\r\nconst [web, setweb] = useState(true);\r\nconst [video, setvideo] = useState(true);\r\nconst [report, setreport] = useState(true);\r\nconst [article, setarticle] = useState(true);\r\n\r\nlet typelist = []\r\nif(web){typelist.push(\"Website\")}\r\nif(video){typelist.push(\"Video\")}\r\nif(report){typelist.push(\"Report\")}\r\nif(article){typelist.push(\"Article\")}\r\nconsole.log(typelist)\r\n\r\nlet result = selectedOption.value==''? greendb.filter(e => (typelist.includes(e.Type))): greendb.filter(e => (typelist.includes(e.Type) && e.keyword.includes(selectedOption.value)))\r\nresult.map(e => e.keyword.map(x => wordcount.push(x)))\r\nconst wordresult = wordcount.filter(e => !wordAvoid.includes(e))\r\n// console.log(wordcount)\r\n\r\n\r\nconst counts = {};\r\n\r\nwordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1)\r\n\r\n\r\n// console.log(counts)\r\n\r\n\r\n// console.log(selectedOption)\r\nconst keysSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]})\r\nconsole.log(keysSorted);     // bar,me,you,foo\r\n\r\nconst freqSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]}).map(key => counts[key]);\r\nconsole.log(freqSorted);\r\n\r\nkeysSorted.map((e,idx) => options.push({value:e,label:e+\" \"+freqSorted[idx]}) )\r\n\r\n\r\n  \r\nreturn (\r\n<div class={classes.main}>\r\n  <div class={classes.header}>\r\n  <div style={{position:\"fixed\",right:350,top:20,color:\"white\"}}><Web color={web? 'white' :'disabled'} onClick={e=>web? setweb(false) : setweb(true)}/><Videocam color={video? 'white' :'disabled'} onClick={e=>video? setvideo(false) : setvideo(true)}/><Description color={report? 'white' :'disabled'} onClick={e=>report? setreport(false) : setreport(true)}/><PictureAsPdf color={article? 'white' :'disabled'} onClick={e=>article? setarticle(false) : setarticle(true)}/></div>\r\n    <div class={classes.title}>{\"Green Technologies Knowledge Resources Explorer\"}</div>    \r\n    <div class={classes.box}>\r\n    <Select \r\n    styles={customStyles}\r\n    options={options} \r\n    // isMulti \r\n    value={selectedOption}\r\n    onChange={setSelectedOption}\r\n    /></div>\r\n    {top5buttons()}\r\n  </div>\r\n{dataPresent()}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}