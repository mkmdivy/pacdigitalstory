{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport sci from './sci.json';\nimport countryData from './country.json';\nimport classes from './Site.module.css';\nimport { BarChart, Cell, Bar, Tooltip, XAxis, YAxis } from 'recharts'; //iso_3166_1_alpha_3\n///6808: 520  baseline\n//// divide 20% percentile per country//////\n//// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\", \"#333333\"]; //////////////////\n// sort array ascending\n\nlet top5_list = [[], [], [], [], []];\nlet result = [];\n\nconst asc = arr => arr.sort((a, b) => a - b);\n\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\n\nconst mean = arr => sum(arr) / arr.length;\n\nconst quantile = (arr, q) => {\n  const sorted = asc(arr);\n  const pos = (sorted.length - 1) * q;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  } else {\n    return sorted[base];\n  }\n};\n\nconst legend = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, \"Social Connectedness Index\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[0]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }\n}), \"< 1x\", \" \", /*#__PURE__*/React.createElement(\"small\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 65\n  }\n}, \"(20th percentile)\")), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[1]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 6\n  }\n}), \"1-2x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[2]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 6\n  }\n}), \"2-3x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[3]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 6\n  }\n}), \"3-5x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[4]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }\n}), \"5-10x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[5]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }\n}), \"10-25x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[6]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }\n}), \"25-100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[7]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }\n}), \">= 100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[8]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }\n}), \"Data not available\"));\n\nconst tooltip = e => {\n  if (e.payload[0]) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, \" \", e.payload[0].payload.region, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 76\n      }\n    }), \" \", e.payload[0].payload.sciScaled, \" SCI\");\n  }\n}; //// Basic setting of the map\n\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = e => {\n      this.setState({\n        selectedCountry: e.features[0].properties.iso_3166_1\n      });\n      let selected = [];\n      let scidata = [];\n      sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n      selected.map(e => scidata.push(e.sci));\n      let percentile20 = quantile(scidata, .20); //selected.map(e => e.sci = e.sci/ percentile20)\n\n      let top5 = scidata.sort((a, b) => b - a).slice(0, 5);\n      selected.map(e => {\n        e.region = countryData[e.end][1];\n        e.sciScaled = Math.round(e.sci / percentile20);\n\n        if (e.sci === top5[0]) {\n          top5_list[0] = e;\n        } else if (e.sci === top5[1]) {\n          top5_list[1] = e;\n        } else if (e.sci === top5[2]) {\n          top5_list[2] = e;\n        } else if (e.sci === top5[3]) {\n          top5_list[3] = e;\n        } else if (e.sci === top5[4]) {\n          top5_list[4] = e;\n        }\n      }); //top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\n      // Calculate the sums and group data (while tracking count)\n\n      const reduced = selected.reduce(function (m, d) {\n        if (!m[d.region]) {\n          m[d.region] = { ...d,\n            count: 1\n          };\n          return m;\n        }\n\n        m[d.region].sciScaled += d.sciScaled;\n        m[d.region].count += 1;\n        return m;\n      }, {}); // Create new array from grouped data and compute the average\n\n      result = Object.keys(reduced).map(function (k) {\n        const item = reduced[k];\n        return {\n          region: item.region,\n          sciScaled: Math.round(item.sciScaled / item.count * 100) / 100\n        };\n      });\n      console.log(result); // console.log(JSON.stringify(result,null,4));\n\n      this.setState({\n        name: e.features[0].properties.name_en,\n        region: e.features[0].properties.region\n      });\n      let matchExpression = ['match', ['get', 'iso_3166_1']]; // Calculate color values for each country based on 'hdi' value\n\n      selected.forEach(e => {\n        // 1 2 3 5 10 25 100 above100\n        //e.sci = e.sci/percentile20\n        if (e.sci / percentile20 < 1) {\n          matchExpression.push(e['end'], \"#F3F2E8\");\n        } else if (e.sci / percentile20 < 2) {\n          matchExpression.push(e['end'], \"#D4EBE2\");\n        } else if (e.sci / percentile20 < 3) {\n          matchExpression.push(e['end'], \"#B6E3DB\");\n        } else if (e.sci / percentile20 < 5) {\n          matchExpression.push(e['end'], \"#97DCD5\");\n        } else if (e.sci / percentile20 < 10) {\n          matchExpression.push(e['end'], \"#79D5CF\");\n        } else if (e.sci / percentile20 < 25) {\n          matchExpression.push(e['end'], \"#5ACEC9\");\n        } else if (e.sci / percentile20 < 100) {\n          matchExpression.push(e['end'], \"#3CC6C2\");\n        } else {\n          matchExpression.push(e['end'], \"#1DBFBC\");\n        }\n      });\n      matchExpression.push(this.state.selectedCountry, '#e8ae40'); //console.log(matchExpression)\n      // Last value is the default, used where there is no data\n\n      matchExpression.push('rgba(0, 0, 0, 0)'); // //console.log(this.state.selectedOption, prevState.selectedOption);\n\n      this.remove('country');\n      console.log(matchExpression);\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'country_boundaries',\n        paint: {\n          'fill-color': matchExpression,\n          'fill-opacity': 0.9\n        }\n      });\n    };\n\n    this.onChange = values => {\n      this.setState({\n        values\n      });\n    };\n\n    this.onFilter = filters => {\n      this.setState({\n        [filters.target.id]: !this.state[filters.target.id]\n      });\n    };\n\n    this.remove = obj => {\n      this.map.removeLayer(obj);\n    };\n\n    this.moveRegion = e => {\n      console.log(e);\n\n      if (e) {\n        switch (e.activeLabel) {\n          case 'Africa':\n            this.map.flyTo({\n              center: [32.259, 2.036],\n              zoom: 3.14,\n              essential: true\n            });\n            break;\n\n          case 'Americas':\n            this.map.flyTo({\n              center: [-69.390, 22.259],\n              zoom: 1.82,\n              essential: true\n            });\n            break;\n\n          case 'Asia':\n            this.map.flyTo({\n              center: [104.687, 32.592],\n              zoom: 3.14,\n              essential: true\n            });\n            break;\n\n          case 'Europe':\n            this.map.flyTo({\n              center: [27.920, 56.907],\n              zoom: 3.19,\n              essential: true\n            });\n            break;\n\n          case 'Oceania':\n            this.map.flyTo({\n              center: [155.731, -16.435],\n              zoom: 3.11,\n              essential: true\n            });\n            break;\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 2,\n      selectedCountry: \"France\",\n      name: \"France\",\n      region: \"Europe\"\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    let selected = [];\n    let scidata = [];\n    sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n    selected.map(e => scidata.push(e.sci));\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    }); //// Import Africapolis agglomerations from mapbox\n\n    this.map.on('load', () => {\n      // Add Country shape\n      this.map.addSource('africapolis_country', {\n        type: 'vector',\n        url: 'mapbox://mapbox.country-boundaries-v1'\n      }); // Add Country layer\n\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'country_boundaries',\n        //filter:[\"==\",\"Region_ID\",1],\n        paint: {\n          'fill-color': '#fdfdf5',\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 0.2, 0]\n        }\n      });\n      this.map.on('click', 'country', e => {\n        onUpdate(e);\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\n    if (prevState !== this.state) {}\n  }\n\n  //5 Countries with the highest SCI\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 43\n      }\n    }, this.state.name), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, \"Top 5 highest SCI countries\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, \"SCI\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    }, \"Region\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, top5_list[0].end ? top5_list.map((e, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 20\n      }\n    }, countryData[top5_list[i].end][0]), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 64\n      }\n    }, top5_list[i].sciScaled), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      className: countryData[top5_list[i].end][1] === this.state.region ? classes.regionsel : classes.normal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 98\n      }\n    }, countryData[top5_list[i].end][1]), \" \")) : null)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, \"Regional average\"), /*#__PURE__*/React.createElement(BarChart, {\n      width: 320,\n      height: 150,\n      data: result.sort((a, b) => a.region.localeCompare(b.region)),\n      style: {\n        marginTop: \"10px\"\n      },\n      onClick: e => this.moveRegion(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"region\",\n      style: {\n        textAnchor: 'middle',\n        fontSize: '100%',\n        fill: 'rgba(255, 255, 255, 1)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      content: tooltip,\n      cursor: {\n        fill: 'rgba(255, 255, 255, 0.3)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"sciScaled\",\n      fill: \"#3CC6C2\",\n      id: \"region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, result.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      cursor: \"pointer\",\n      key: `cell-${index}`,\n      fill: entry.region === this.state.region ? '#e8ae40' : '#3CC6C2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: classes.mapContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.legend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, legend));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","sci","countryData","classes","BarChart","Cell","Bar","Tooltip","XAxis","YAxis","accessToken","colors","top5_list","result","asc","arr","sort","a","b","sum","reduce","mean","length","quantile","q","sorted","pos","base","Math","floor","rest","undefined","legend","backgroundColor","tooltip","e","payload","region","sciScaled","Application","Component","constructor","props","onUpdate","setState","selectedCountry","features","properties","iso_3166_1","selected","scidata","map","start","state","push","percentile20","top5","slice","end","round","reduced","m","d","count","Object","keys","k","item","console","log","name","name_en","matchExpression","forEach","remove","addLayer","id","source","type","paint","onChange","values","onFilter","filters","target","obj","removeLayer","moveRegion","activeLabel","flyTo","center","zoom","essential","lng","lat","componentDidMount","Map","container","mapContainer","style","on","addSource","url","componentDidUpdate","prevProps","prevState","render","selectedOption","topleft","table","i","regionsel","normal","localeCompare","marginTop","textAnchor","fontSize","fill","entry","index","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport sci from './sci.json';\r\nimport countryData from './country.json';\r\nimport classes from './Site.module.css';\r\nimport { BarChart, Cell, Bar, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\n//iso_3166_1_alpha_3\r\n///6808: 520  baseline\r\n//// divide 20% percentile per country//////\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\nlet top5_list=[[],[],[],[],[]];\r\nlet result=[];\r\n\r\nconst asc = arr => arr.sort((a, b) => a - b);\r\n\r\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\r\n\r\nconst mean = arr => sum(arr) / arr.length;\r\n\r\nconst quantile = (arr, q) => {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n        return sorted[base];\r\n    }\r\n};\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connectedness Index</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x\"} <small>{\"(20th percentile)\"}</small></div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n<div><span style={{backgroundColor: colors[8]}}></span>{\"Data not available\"}</div>\r\n</div>\r\n);\r\n\r\nconst tooltip = e => {\r\n  if (e.payload[0]) {\r\n  return ( <div className={classes.tooltip}> {e.payload[0].payload.region} <br/> {e.payload[0].payload.sciScaled} SCI</div> ) }\r\n}\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 2,\r\n      selectedCountry: \"France\",\r\n      name: \"France\",\r\n      region: \"Europe\"\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nlet selected = [];\r\nlet scidata= [];\r\nsci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\nselected.map(e => scidata.push(e.sci))\r\n\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mapbox.country-boundaries-v1'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'country_boundaries',\r\n            //filter:[\"==\",\"Region_ID\",1],\r\n            paint: {\r\n              'fill-color': '#fdfdf5',\r\n              'fill-opacity': ['case',['boolean', ['feature-state', 'hover'], false],0.2,0]\r\n            }\r\n        });\r\n\r\n\r\n\r\n        this.map.on('click', 'country', e =>  {\r\n              onUpdate(e)\r\n            });\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\r\n\r\n    if( prevState !== this.state) {\r\n\r\n\r\n  }\r\n}\r\n\r\nonUpdate = e => {\r\n\r\n  this.setState({selectedCountry:e.features[0].properties.iso_3166_1})\r\n\r\n  let selected = [];\r\n  let scidata= [];\r\n  sci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\n  selected.map(e => scidata.push(e.sci))\r\n  let percentile20 = quantile(scidata, .20)\r\n  //selected.map(e => e.sci = e.sci/ percentile20)\r\n\r\n\r\n  let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n  selected.map(e => {\r\n    e.region=countryData[e.end][1]\r\n    e.sciScaled= Math.round(e.sci/percentile20)\r\n    if(e.sci===top5[0]) {top5_list[0]=e}\r\n    else if(e.sci===top5[1]) {top5_list[1]=e}\r\n    else if(e.sci===top5[2]) {top5_list[2]=e}\r\n    else if(e.sci===top5[3]) {top5_list[3]=e}\r\n    else if(e.sci===top5[4]) {top5_list[4]=e}\r\n  })\r\n\r\n  //top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\r\n\r\n                // Calculate the sums and group data (while tracking count)\r\n  const reduced = selected.reduce(function(m, d){\r\n      if(!m[d.region]){\r\n        m[d.region] = {...d, count: 1};\r\n        return m;\r\n      }\r\n      m[d.region].sciScaled += d.sciScaled;\r\n      m[d.region].count += 1;\r\n      return m;\r\n   },{});\r\n\r\n   // Create new array from grouped data and compute the average\r\n      result = Object.keys(reduced).map(function(k){\r\n       const item  = reduced[k];\r\n       return {\r\n           region: item.region,\r\n           sciScaled: Math.round(item.sciScaled/item.count*100)/100,\r\n       }\r\n   })\r\nconsole.log(result)\r\n// console.log(JSON.stringify(result,null,4));\r\n\r\n  this.setState({name:e.features[0].properties.name_en,region:e.features[0].properties.region})\r\n\r\n  let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n  // Calculate color values for each country based on 'hdi' value\r\n  selected.forEach( e => {\r\n\r\n  // 1 2 3 5 10 25 100 above100\r\n\r\n  //e.sci = e.sci/percentile20\r\n  if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n  else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n  else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n  else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n  else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n  else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n  else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n  else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n  });\r\n\r\n  matchExpression.push(this.state.selectedCountry, '#e8ae40');\r\n\r\n  //console.log(matchExpression)\r\n\r\n  // Last value is the default, used where there is no data\r\n  matchExpression.push('rgba(0, 0, 0, 0)');\r\n\r\n  // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n  this.remove('country');\r\n  console.log(matchExpression)\r\n  this.map.addLayer({\r\n    id: 'country',\r\n    source:'africapolis_country',\r\n    type: 'fill',\r\n    'source-layer':'country_boundaries',\r\n    paint: {\r\n      'fill-color': matchExpression,\r\n      'fill-opacity': 0.9\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nonChange = values => {\r\n  this.setState({ values })\r\n}\r\n\r\nonFilter = filters => {\r\n  this.setState({[filters.target.id]: !this.state[filters.target.id]});\r\n}\r\n\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\n\r\nmoveRegion = e => {\r\nconsole.log(e)\r\n      if(e) {\r\n      switch(e.activeLabel){\r\n      case 'Africa':\r\n      this.map.flyTo({center: [32.259 ,2.036], zoom:3.14, essential: true }); break;\r\n      case 'Americas':\r\n      this.map.flyTo({center: [-69.390 ,22.259], zoom:1.82, essential: true }); break;\r\n      case 'Asia':\r\n      this.map.flyTo({center: [104.687 ,32.592], zoom:3.14, essential: true }); break;\r\n      case 'Europe':\r\n      this.map.flyTo({center: [27.920 ,56.907], zoom:3.19, essential: true }); break;\r\n      case 'Oceania':\r\n      this.map.flyTo({center: [155.731 ,-16.435], zoom:3.11, essential: true }); break;\r\n      default:\r\n      return null;\r\n            }}\r\n}\r\n//5 Countries with the highest SCI\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> <p>{this.state.name}</p> <br/>\r\n        <span>Top 5 highest SCI countries</span>\r\n        <table className={classes.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Country</th><th>SCI</th><th>Region</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {top5_list[0].end? top5_list.map((e,i)=>\r\n              <tr> <td>{countryData[top5_list[i].end][0]}</td> <td>{top5_list[i].sciScaled}</td> <td className={ countryData[top5_list[i].end][1]===this.state.region? classes.regionsel : classes.normal }>{countryData[top5_list[i].end][1]}</td> </tr>\r\n              ) : null}\r\n            </tbody>\r\n          </table>\r\n        <br/> <span>Regional average</span>\r\n            <BarChart width={320} height={150} data={result.sort((a, b) => a.region.localeCompare(b.region))} style={{marginTop: \"10px\"}}  onClick={e => this.moveRegion(e)} >\r\n              <XAxis dataKey=\"region\" style={{ textAnchor: 'middle', fontSize: '100%', fill: 'rgba(255, 255, 255, 1)' }} />\r\n              <Tooltip content={tooltip} cursor={{fill: 'rgba(255, 255, 255, 0.3)'}} />\r\n              <Bar dataKey=\"sciScaled\" fill=\"#3CC6C2\" id=\"region\">\r\n                {result.map((entry,index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Cell cursor=\"pointer\" key={`cell-${index}`} fill={entry.region ===  this.state.region ? '#e8ae40' : '#3CC6C2' } />\r\n\t\t\t\t\t\t\t\t\t))}\r\n  \t\t\t\t\t\t</Bar>\r\n  \t\t\t\t\t</BarChart>\r\n           </div>\r\n        <div ref={el => this.mapContainer = el} className={classes.mapContainer} />\r\n        <div className={classes.legend}>{legend}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}