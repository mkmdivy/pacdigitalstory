{"ast":null,"code":"var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar length = /*#__PURE__*/require('./length');\n\nvar slice = /*#__PURE__*/require('./slice');\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\n\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nmodule.exports = splitAt;","map":{"version":3,"sources":["C:/mapboxAndReact/node_modules/ramda/src/splitAt.js"],"names":["_curry2","require","length","slice","splitAt","index","array","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAG,aAAaC,OAAO,CAAC,oBAAD,CAAlC;;AAEA,IAAIC,MAAM,GAAG,aAAaD,OAAO,CAAC,UAAD,CAAjC;;AAEA,IAAIE,KAAK,GAAG,aAAaF,OAAO,CAAC,SAAD,CAAhC;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIG,OAAO,GAAG,aAAaJ,OAAO,CAAC,SAASI,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAChE,SAAO,CAACH,KAAK,CAAC,CAAD,EAAIE,KAAJ,EAAWC,KAAX,CAAN,EAAyBH,KAAK,CAACE,KAAD,EAAQH,MAAM,CAACI,KAAD,CAAd,EAAuBA,KAAvB,CAA9B,CAAP;AACD,CAFiC,CAAlC;;AAGAC,MAAM,CAACC,OAAP,GAAiBJ,OAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar length = /*#__PURE__*/require('./length');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\n\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nmodule.exports = splitAt;"]},"metadata":{},"sourceType":"script"}