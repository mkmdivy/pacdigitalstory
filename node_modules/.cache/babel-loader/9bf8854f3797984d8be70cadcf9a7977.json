{"ast":null,"code":"var _jsxFileName = \"C:\\\\digitalstory\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport data from './data.json';\nimport optionsvariable from './optionvariable.json';\nimport options from './option.json';\nimport wordlist from './wordlist.json';\nimport classes from './Site.module.css';\nimport { Badge, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StackGrid from \"react-stack-grid\";\nimport { Web, Videocam, Description, PictureAsPdf } from '@material-ui/icons';\nimport ReactGA from 'react-ga';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst App = props => {\n  const locale = \"en\";\n  const colorBasket = [\"#016FB9\", \"#2D9E48\", \"#a70000\", \"#EC4E20\", \"#353531\", \"#FF9505\", \"#D5E0C8\", \"#A36E52\", \"#D5C73E\", \"#D0AACF\", \"#7F97BC\", \"#68D7DA\"];\n  const [selectedOption, setSelectedOption] = useState([{\n    value: 'Angola',\n    label: 'Angola'\n  }]);\n  const [selectedOptionvar, setSelectedOptionvar] = useState({\n    value: 'Education completed in single years',\n    label: 'Education completed in single years'\n  });\n  const countrylist = [];\n  selectedOption.map(d => countrylist.push(d.value));\n  const filteredData = data.filter(d => countrylist.includes(d.country));\n  const selectedData = [{\n    sbin: 0,\n    label: 'Rural'\n  }, {\n    sbin: 10,\n    label: '10,000 - 50,000'\n  }, {\n    sbin: 50,\n    label: '50,000 - 250,000'\n  }, {\n    sbin: 250,\n    label: '250,000 - 1,000,000'\n  }, {\n    sbin: 1000,\n    label: '1,000,000+'\n  }];\n  filteredData.map(d => selectedData.map(e => e.sbin === d.sbin ? e[d.country] = d[selectedOptionvar.value] : null));\n  console.log(selectedData);\n\n  const renderTooltip = props => {\n    if (props.active && props.payload !== null && props.payload[0] !== null) {\n      let payload = props.payload[0].payload;\n      let tooltip = null;\n      console.log(props);\n      tooltip = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Tooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, props.payload.map((i, idx) => /*#__PURE__*/React.createElement(\"p\", {\n        key: idx,\n        style: {\n          color: i.color,\n          marginLeft: \"10px\",\n          marginRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, i.dataKey, \": \", Math.round(i.value * 1000) / 10, \"%\")));\n      return tooltip;\n    }\n  };\n\n  const renderLineChart = /*#__PURE__*/React.createElement(BarChart, {\n    width: 1000,\n    height: 600,\n    data: selectedData,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    cursor: {\n      strokeWidth: 0\n    },\n    content: renderTooltip,\n    language: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }), countrylist.map((d, e) => /*#__PURE__*/React.createElement(Bar, {\n    dataKey: d,\n    fill: colorBasket[e],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, \"Data explorer Africa's urban Economy 2022\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select // styles={customStyles}\n  , {\n    options: options,\n    isMulti: true,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select // styles={customStyles}\n  , {\n    options: optionsvariable // // isMulti \n    ,\n    value: selectedOptionvar,\n    onChange: setSelectedOptionvar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }))), renderLineChart);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/digitalstory/src/App.js"],"names":["React","useState","useRef","useEffect","Select","data","optionsvariable","options","wordlist","classes","Badge","Chip","makeStyles","StackGrid","Web","Videocam","Description","PictureAsPdf","ReactGA","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","App","props","locale","colorBasket","selectedOption","setSelectedOption","value","label","selectedOptionvar","setSelectedOptionvar","countrylist","map","d","push","filteredData","filter","includes","country","selectedData","sbin","e","console","log","renderTooltip","active","payload","tooltip","i","idx","color","marginLeft","marginRight","dataKey","Math","round","renderLineChart","top","right","left","bottom","strokeWidth","main","header","title","box"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport data from './data.json';\r\nimport optionsvariable from './optionvariable.json';\r\nimport options from './option.json';\r\nimport wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport { Badge, Chip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StackGrid from \"react-stack-grid\";\r\nimport { Web, Videocam, Description, PictureAsPdf} from '@material-ui/icons';\r\nimport ReactGA from 'react-ga';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst App = props => {\r\n  \r\nconst locale = \"en\"\r\nconst colorBasket = [\r\n  \"#016FB9\",\r\n  \"#2D9E48\",    \r\n  \"#a70000\",\r\n  \"#EC4E20\",\r\n    \"#353531\",\r\n    \"#FF9505\",\r\n    \r\n    \"#D5E0C8\",\r\n    \"#A36E52\",\r\n    \"#D5C73E\",\r\n    \"#D0AACF\",\r\n    \r\n    \"#7F97BC\",\r\n    \"#68D7DA\",\r\n  ];  \r\n\r\nconst [selectedOption, setSelectedOption] = useState([{value: 'Angola', label: 'Angola'}]);\r\nconst [selectedOptionvar, setSelectedOptionvar] = useState({value: 'Education completed in single years', label: 'Education completed in single years'});\r\nconst countrylist = []\r\n\r\nselectedOption.map(d=>countrylist.push(d.value))\r\n\r\nconst filteredData = data.filter(d => countrylist.includes(d.country))\r\nconst selectedData = [\r\n  {sbin:0,label:'Rural'},\r\n  {sbin:10,label:'10,000 - 50,000'},\r\n  {sbin:50,label:'50,000 - 250,000'},\r\n  {sbin:250,label:'250,000 - 1,000,000'},\r\n  {sbin:1000,label:'1,000,000+'},\r\n]\r\n\r\nfilteredData.map(d=>\r\n  selectedData.map(e => \r\n    e.sbin === d.sbin? e[d.country]=d[selectedOptionvar.value] : null\r\n    )\r\n  )\r\n\r\nconsole.log(selectedData)\r\n\r\n\r\n\r\nconst renderTooltip = (props) => {\r\n  if (props.active && props.payload !== null && props.payload[0] !== null) {\r\n    let payload = props.payload[0].payload;\r\n    let tooltip = null;\r\n    console.log(props)    \r\n          tooltip = (\r\n            <div className={classes.Tooltip}>            \r\n              {props.payload.map((i, idx) => (\r\n                <p\r\n                  key={idx}\r\n                  style={{\r\n                    color: i.color,\r\n                    marginLeft: \"10px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  {i.dataKey}: {Math.round(i.value * 1000) / 10}%\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        \r\n\r\n    return tooltip;\r\n  }\r\n}\r\n\r\n\r\nconst renderLineChart = (\r\n  <BarChart\r\n  width={1000}\r\n  height={600}\r\n  data={selectedData}\r\n  margin={{\r\n    top: 5,\r\n    right: 30,\r\n    left: 20,\r\n    bottom: 5,\r\n  }}\r\n>\r\n  <CartesianGrid strokeDasharray=\"3 3\" />\r\n  <XAxis dataKey=\"label\" />\r\n  <YAxis />\r\n  <Tooltip\r\n      cursor={{ strokeWidth: 0 }}\r\n      content={renderTooltip}      \r\n      language={locale} />\r\n  <Legend />  \r\n  {countrylist.map((d,e) => \r\n    <Bar dataKey={d} fill={colorBasket[e]}  />\r\n  )}\r\n  \r\n  {/* <Bar dataKey=\"uv\" fill=\"#82ca9d\" /> */}\r\n</BarChart>\r\n);\r\n\r\n\r\n  \r\nreturn (\r\n<div class={classes.main}>\r\n  <div class={classes.header}>  \r\n    <div class={classes.title}>{\"Data explorer Africa's urban Economy 2022\"}</div>    \r\n    <div class={classes.box}>\r\n    <Select \r\n    // styles={customStyles}\r\n    options={options} \r\n    isMulti \r\n    value={selectedOption}\r\n    onChange={setSelectedOption}\r\n    /></div>    \r\n        <div class={classes.box}>\r\n    <Select \r\n    // styles={customStyles}\r\n    options={optionsvariable} \r\n    // // isMulti \r\n    value={selectedOptionvar}\r\n    onChange={setSelectedOptionvar}\r\n    /></div>    \r\n\r\n  </div>\r\n  {renderLineChart}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}