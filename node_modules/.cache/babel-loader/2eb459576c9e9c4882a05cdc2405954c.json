{"ast":null,"code":"var _jsxFileName = \"C:\\\\networkproj\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport africa from './africa.json';\nimport classes from './Site.module.css';\nimport { BarChart, Cell, Bar, Tooltip, XAxis, ResponsiveContainer } from 'recharts';\nimport ReactGA from 'react-ga';\nimport './index.css';\nimport logo from './OECD_white_EN.png';\nimport MaterialIcon from 'material-icons-react';\nimport { ForceGraph2D } from 'react-force-graph';\nReactGA.initialize('UA-128268752-1');\nReactGA.pageview(window.location.search + window.location.pathname); //iso_3166_1_alpha_3\n//// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\", \"#333333\"];\nconst Dist = 1950;\n\nconst TimeSlider = ({\n  Dist,\n  width\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: `${width}px`\n    },\n    className: classes[\"input-slider\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: 1950,\n    max: 2020,\n    value: 2010,\n    step: 10,\n    onChange: e => e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }, Dist));\n};\n\nexport default TimeSlider; //////////////////\n// sort array ascending\n\nconst legend = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}, \"Social Connectedness\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[0]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }\n}), \"< 1x\", \" \", /*#__PURE__*/React.createElement(\"small\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 65\n  }\n}, \"(20th percentile)\")), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[1]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }\n}), \"1-2x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[2]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }\n}), \"2-3x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[3]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }\n}), \"3-5x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[4]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }\n}), \"5-10x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[5]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }\n}), \"10-25x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[6]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 6\n  }\n}), \"25-100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[7]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 6\n  }\n}), \">= 100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[8]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 6\n  }\n}), \"Data not available\"));\n\nconst tooltip = e => {\n  if (e.payload[0]) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    }, \" \", e.payload[0].payload.region, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 76\n      }\n    }), \"SCI \", e.payload[0].payload.sciScaled, \"x\");\n  }\n}; //// Basic setting of the map\n\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = button => {\n      this.setState({\n        rendered: \"Yes\"\n      }); // if (button===\"Map\")\n      // {this.setState({rendered:\"Yes\"})}\n      // else {this.setState({rendered:\"Yes\"})}\n    };\n\n    this.state = {\n      lng: 10,\n      lat: 0,\n      zoom: 2.5,\n      selectedCountry: \"NG\",\n      name: \"\",\n      region: \"Africa\",\n      button: \"Map\",\n      rendered: \"\",\n      distance: 1950\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    const Dist = this.state.distance;\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      attributionControl: false\n    });\n    this.map.on('load', () => {\n      this.map.addSource('node-237nu4', {\n        type: 'vector',\n        url: 'mapbox://mkmd.1ya649n5'\n      });\n      this.map.addSource('edge-dm0qvz', {\n        type: 'vector',\n        url: 'mapbox://mkmd.1rxtvzvy'\n      });\n      this.map.addLayer({\n        id: 'edge',\n        source: 'edge-dm0qvz',\n        type: \"line\",\n        'source-layer': 'edge-dm0qvz',\n        // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\n        paint: {\n          \"line-color\": [\"match\", [\"get\", \"border\"], [\"0\"], colors[0], \"red\"]\n        }\n      });\n      this.map.addLayer({\n        id: 'node',\n        source: 'node-237nu4',\n        type: \"circle\",\n        'source-layer': 'node-237nu4',\n        // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\n        paint: {\n          \"circle-radius\": [\"step\", [\"get\", `Pop2015`], 2.5, 10000, 3, 30000, 4, 100000, 6, 300000, 8, 1000000, 10, 2000000, 13, 11847635, 15],\n          \"circle-color\": [\"step\", [\"get\", `Pop2015`], colors[0], 10000, colors[1], 30000, colors[2], 100000, colors[3], 300000, colors[4], 1000000, colors[5], 2000000, colors[6], 11847635, colors[7]],\n          \"circle-stroke-width\": 1,\n          \"circle-stroke-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 3, 0, 15, 1],\n          \"circle-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 3, 0.4, 10, 1] // [\n          //   \"case\",\n          //   [\"boolean\", [\"feature-state\", \"hover\"], false],\n          //   1,\n          //   0.7,\n          // ],\n\n        }\n      });\n    }); /////////////////////////////////////////// Network part\n\n    africa.nodes.map(e => {\n      e.x = e.x;\n      e.y = e.y;\n    });\n    africa.links.map(e => e.border === 1 ? e.color = \"rgb(255,0,0)\" : e.color = \"rgb(255,255,255,.3)\"); // africa.links.map(e => e.border==1? e.value=e.value+1000 : null)\n    // africa.links.map(e => e.value=e.value*Math.random())\n\n    console.log(africa); /////////////////////////////////////////////////////////////////////////////////////\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.button !== this.state.button) {\n      this.onUpdate(this.state.button);\n    }\n  }\n\n  //5 Countries with the highest SCI\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.headwrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 43\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonwrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.button === \"Map\" ? classes.buttonActive : classes.button,\n      onClick: () => this.state.button === \"Network\" ? this.setState({\n        button: \"Map\"\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, \"Map\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.button === \"Network\" ? classes.buttonActive : classes.button,\n      onClick: () => this.state.button === \"Map\" ? this.setState({\n        button: \"Network\"\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, \"Network\")), /*#__PURE__*/React.createElement(\"headtitle\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, \" \", this.state.name)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 56\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, \"Cities and roads in Africa\"), /*#__PURE__*/React.createElement(TimeSlider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"VariableInfoWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, \"How it is calculated?\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 63\n      }\n    }), \"The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 161\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 166\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, \"Methodology\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 47\n      }\n    }), \"We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 618\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 623\n      }\n    }), \"The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"color\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }\n    }, \"Click the right button to check more detail and download the data on the Facebook page\"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, \"Move to the Facebook Data for Good page to check detail and download the data\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: classes.mapContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    })), this.state.button === \"Map\" ? null : /*#__PURE__*/React.createElement(ForceGraph2D, {\n      d3Force: ('link', null),\n      backgroundColor: \"black\",\n      graphData: africa,\n      nodeId: \"id\",\n      nodeVal: \"size3\",\n      nodeLabel: \"nameG\",\n      nodeAutoColorBy: \"group\",\n      linkSource: \"source\",\n      linkTarget: \"target\",\n      linkColor: \"color\",\n      cooldownTicks: \"50\",\n      onZoom: z => {\n        console.log(z);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/networkproj/src/index.js"],"names":["React","ReactDOM","mapboxgl","africa","classes","BarChart","Cell","Bar","Tooltip","XAxis","ResponsiveContainer","ReactGA","logo","MaterialIcon","ForceGraph2D","initialize","pageview","window","location","search","pathname","accessToken","colors","Dist","TimeSlider","width","e","legend","backgroundColor","tooltip","payload","region","sciScaled","Application","Component","constructor","props","onUpdate","button","setState","rendered","state","lng","lat","zoom","selectedCountry","name","distance","componentDidMount","map","Map","container","mapContainer","style","center","attributionControl","on","addSource","type","url","addLayer","id","source","paint","nodes","x","y","links","border","color","console","log","componentDidUpdate","prevProps","prevState","render","topleft","headwrapper","buttonwrapper","buttonActive","table","el","z","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport africa from './africa.json';\r\nimport classes from './Site.module.css';\r\nimport { BarChart, Cell, Bar, Tooltip, XAxis,ResponsiveContainer} from 'recharts';\r\nimport ReactGA from 'react-ga';\r\nimport './index.css';\r\nimport logo from './OECD_white_EN.png';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport { ForceGraph2D } from 'react-force-graph';\r\n\r\n\r\nReactGA.initialize('UA-128268752-1');\r\nReactGA.pageview(window.location.search+window.location.pathname);\r\n\r\n//iso_3166_1_alpha_3\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\nconst Dist = 1950\r\n\r\nconst TimeSlider = ({ Dist, width }) => {\r\n  return (\r\n    <div style={{ width: `${width}px` }} className={classes[\"input-slider\"]}>\r\n      <input type=\"range\"\r\n        min={1950}\r\n        max={2020}\r\n        value={2010}\r\n        step={10}\r\n        onChange={(e) =>\r\n           e\r\n          }\r\n      />\r\n      {<span>{Dist}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeSlider;\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connectedness</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x\"} <small>{\"(20th percentile)\"}</small></div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n<div><span style={{backgroundColor: colors[8]}}></span>{\"Data not available\"}</div>\r\n</div>\r\n);\r\n\r\nconst tooltip = e => {\r\n  if (e.payload[0]) {\r\n  return ( <div className={classes.tooltip}> {e.payload[0].payload.region} <br/>SCI {e.payload[0].payload.sciScaled}x</div> ) }\r\n}\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 10,\r\n      lat: 0,\r\n      zoom: 2.5,\r\n      selectedCountry: \"NG\",\r\n      name: \"\",\r\n      region: \"Africa\",\r\n      button: \"Map\",\r\n      rendered: \"\",\r\n      distance: 1950\r\n    };\r\n  }\r\n\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nconst Dist = this.state.distance\r\n\r\n\r\nthis.map = new mapboxgl.Map({\r\n  container: this.mapContainer,\r\n  style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n  center: [this.state.lng, this.state.lat],\r\n  zoom: this.state.zoom,\r\n  attributionControl: false\r\n});\r\n\r\nthis.map.on('load', () => {\r\nthis.map.addSource('node-237nu4', { type: 'vector', url: 'mapbox://mkmd.1ya649n5'});\r\nthis.map.addSource('edge-dm0qvz', { type: 'vector', url: 'mapbox://mkmd.1rxtvzvy'});\r\nthis.map.addLayer({\r\n  id: 'edge',\r\n  source:'edge-dm0qvz',\r\n  type : \"line\",\r\n  'source-layer':'edge-dm0qvz',\r\n  // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\r\n  paint: {\r\n    \"line-color\" : [\"match\", [\"get\",\"border\"],\r\n     [\"0\"],colors[0],\r\n     \"red\"\r\n  ]\r\n  },\r\n})\r\n\r\nthis.map.addLayer({\r\n  id: 'node',\r\n  source:'node-237nu4',\r\n  type : \"circle\",\r\n  'source-layer':'node-237nu4',\r\n  // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\r\n  paint: {\r\n    \"circle-radius\":  [\r\n      \"step\",\r\n      [\"get\", `Pop2015`],\r\n      2.5,\r\n      10000,\r\n      3,\r\n      30000,\r\n      4,\r\n      100000,\r\n      6,\r\n      300000,\r\n      8,\r\n      1000000,\r\n      10,\r\n      2000000,\r\n      13,\r\n      11847635,\r\n      15,\r\n    ]\r\n    ,\r\n    \"circle-color\": [\r\n      \"step\",\r\n      [\"get\", `Pop2015`],\r\n      colors[0],\r\n      10000,\r\n      colors[1],\r\n      30000,\r\n      colors[2],\r\n      100000,\r\n      colors[3],\r\n      300000,\r\n      colors[4],\r\n      1000000,\r\n      colors[5],\r\n      2000000,\r\n      colors[6],\r\n      11847635,\r\n      colors[7],\r\n    ],\r\n\r\n    \"circle-stroke-width\": 1,\r\n    \"circle-stroke-opacity\": [\r\n      \"interpolate\",\r\n      [\"linear\"],\r\n      [\"zoom\"],\r\n      0,\r\n      0,\r\n      3,\r\n      0,\r\n      15,\r\n      1,\r\n    ],\r\n    \"circle-opacity\": [\r\n      \"interpolate\",\r\n      [\"linear\"],\r\n      [\"zoom\"],\r\n      0,\r\n      0,\r\n      3,\r\n      0.4,\r\n      10,\r\n      1\r\n    ]\r\n\r\n    \r\n    // [\r\n    //   \"case\",\r\n    //   [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n    //   1,\r\n    //   0.7,\r\n    // ],\r\n  },\r\n});\r\n});\r\n\r\n\r\n\r\n/////////////////////////////////////////// Network part\r\n\r\n\r\nafrica.nodes.map(e => {\r\n  e.x = e.x\r\n  e.y = e.y\r\n})\r\n\r\nafrica.links.map(e => e.border===1? e.color=\"rgb(255,0,0)\" : e.color=\"rgb(255,255,255,.3)\")\r\n// africa.links.map(e => e.border==1? e.value=e.value+1000 : null)\r\n// africa.links.map(e => e.value=e.value*Math.random())\r\nconsole.log(africa)\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n  if(prevState.button !== this.state.button)\r\n  {this.onUpdate(this.state.button)}\r\n  \r\n\r\n}\r\n\r\nonUpdate = (button) => {\r\n  \r\n  this.setState({rendered:\"Yes\"})\r\n  // if (button===\"Map\")\r\n  // {this.setState({rendered:\"Yes\"})}\r\n  // else {this.setState({rendered:\"Yes\"})}\r\n  \r\n}\r\n\r\n\r\n\r\n//5 Countries with the highest SCI\r\nrender() {\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> <div className={classes.headwrapper}> <div className={classes.buttonwrapper}>          \r\n        <button className={this.state.button===\"Map\"? classes.buttonActive : classes.button} onClick={() => this.state.button===\"Network\"? this.setState({button:\"Map\"}) : null}>{\"Map\"}</button>\r\n        <button className={this.state.button===\"Network\"? classes.buttonActive : classes.button} onClick={() => this.state.button===\"Map\"? this.setState({button:\"Network\"}) : null}>{\"Network\"}</button></div>\r\n        <headtitle> {this.state.name}</headtitle></div><br/>\r\n        <span>Cities and roads in Africa</span>\r\n        <TimeSlider/>\r\n        <table className={classes.table}>\r\n            <thead>\r\n              <tr>\r\n                {/* <th>Country</th><th>Road</th><th>Network</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              \r\n            </tbody>\r\n          </table>\r\n        {/* <br/> <span>Regional average</span> */}\r\n              <div className=\"VariableInfoWrapper\">\r\n                  <MaterialIcon icon=\"info\"/>\r\n                  <span><strong>How it is calculated?</strong><br/>\r\n                  The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.<br/><br/>\r\n                  <strong>Methodology</strong><br/>\r\n                  We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.<br/><br/>\r\n                The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\r\n                <br/><br/><color>Click the right button to check more detail and download the data on the Facebook page</color> </span>\r\n              </div>\r\n              <div className=\"FB\">\r\n              <a href=\"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\">\r\n                  <MaterialIcon icon=\"facebook\"/>\r\n                  <span>Move to the Facebook Data for Good page to check detail and download the data</span>\r\n              </a>\r\n              </div>\r\n           </div>\r\n           <div><div ref={el => this.mapContainer = el} className={classes.mapContainer} /></div>\r\n           {this.state.button===\"Map\"? null :  < ForceGraph2D     \r\n        d3Force={('link',null)}\r\n        backgroundColor=\"black\"    \r\n        graphData={africa}\r\n        nodeId=\"id\"\r\n        nodeVal=\"size3\"\r\n        nodeLabel=\"nameG\"\r\n        nodeAutoColorBy=\"group\"\r\n        linkSource=\"source\"\r\n        linkTarget=\"target\"\r\n        linkColor=\"color\"\r\n        cooldownTicks=\"50\"        \r\n        onZoom={(z)=>{\r\n          console.log(z)\r\n        }}        \r\n        /> }          \r\n      </div>      \r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}