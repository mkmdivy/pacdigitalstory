{"ast":null,"code":"import _objectSpread from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';import mapboxgl from'mapbox-gl';import axios from'axios';import Select from'react-select';import sci from'./sci.json';import countryData from'./country.json';import classes from'./Site.module.css';import{BarChart,Cell,Bar,Tooltip,XAxis,YAxis}from'recharts';//iso_3166_1_alpha_3\n///6808: 520  baseline\n//// divide 20% percentile per country//////\n//// Access token for Africapolis mapbox account\nmapboxgl.accessToken='pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';var colors=[\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"];//////////////////\n// sort array ascending\nconsole.log(countryData[\"AF\"]);var top5_list=[[],[],[],[],[]];var result=[];var asc=function asc(arr){return arr.sort(function(a,b){return a-b;});};var sum=function sum(arr){return arr.reduce(function(a,b){return a+b;},0);};var mean=function mean(arr){return sum(arr)/arr.length;};var quantile=function quantile(arr,q){var sorted=asc(arr);var pos=(sorted.length-1)*q;var base=Math.floor(pos);var rest=pos-base;if(sorted[base+1]!==undefined){return sorted[base]+rest*(sorted[base+1]-sorted[base]);}else{return sorted[base];}};var legend=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Social Connectedness Index\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[0]}}),\"< 1x\",\" \",/*#__PURE__*/React.createElement(\"small\",null,\"(20th percentile)\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[1]}}),\"1-2x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[2]}}),\"2-3x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[3]}}),\"3-5x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[4]}}),\"5-10x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[5]}}),\"10-25x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[6]}}),\"25-100x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[7]}}),\">= 100x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[8]}}),\"Data not available\"));var agglomeration_fill_color=[\"step\",[\"get\",\"Population_2015\"],\"hsla(0, 0%, 8%, 0.5)\",10000,\"hsla(55, 30%, 93%, 0.5)\",30000,\"hsla(60, 100%, 90%, 0.5)\",100000,\"hsla(98, 55%, 81%, 0.5)\",300000,\"hsla(166, 44%, 65%, 0.5)\",1000000,\"hsla(186, 53%, 51%, 0.5)\",3000000,\"hsla(197, 74%, 43%, 0.5)\",11847635,\"hsla(197, 74%, 43%, 0.5)\"];var agglomeration_stroke_color=[\"step\",[\"get\",\"Population_2015\"],\"hsla(0, 0%, 8%, 1)\",10000,\"hsla(55, 30%, 93%, 1)\",30000,\"hsla(60, 100%, 90%, 1)\",100000,\"hsla(98, 55%, 81%, 1)\",300000,\"hsla(166, 44%, 65%, 1)\",1000000,\"hsla(186, 53%, 51%, 1)\",3000000,\"hsla(197, 74%, 43%, 1)\",11847635,\"hsla(197, 74%, 43%, 1)\"];// const options = [];\n// country_label.map(v=>{return options.push({label:v, value:v})});\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\n//// Basic setting of the map\nvar Application=/*#__PURE__*/function(_React$Component){_inherits(Application,_React$Component);var _super=_createSuper(Application);function Application(props){var _this;_classCallCheck(this,Application);_this=_super.call(this,props);_this.onUpdate=function(update){_this.setState({update:update});};_this.onChange=function(values){_this.setState({values:values});};_this.onFilter=function(filters){_this.setState(_defineProperty({},filters.target.id,!_this.state[filters.target.id]));};_this.remove=function(obj){_this.map.removeLayer(obj);};_this.add_shape=function(obj,filter1){_this.map.addLayer({id:obj,source:'africapolis_country',type:'fill','source-layer':'africacontinent_complete-ays128',filter:filter1,paint:{'fill-color':'#fdfdf5','fill-opacity':[\"interpolate\",[\"linear\"],[\"zoom\"],0,1,5,0]//8.5\n}}// layer order\n);//console.log(this.map.getSource(\"africapolis_country\"))\n};_this.state={lng:5,lat:0,zoom:2,selectedCountry:\"US\",name:\"Select the country to check SCI\",region:\"\"};return _this;}_createClass(Application,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//// Initial map setting\nvar selected=[];var scidata=[];sci.map(function(e){return e.start===_this2.state.selectedCountry?selected.push(e):null;});console.log(selected);selected.map(function(e){return scidata.push(e.sci);});console.log(scidata);console.log(quantile(scidata,.20));//Object.keys(selected).map(e => console.log(e))\nthis.map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',/// Select mapstyle from mapbox studio\ncenter:[this.state.lng,this.state.lat],zoom:this.state.zoom});// this.map.on('move', () => {\n//   this.setState({\n//   lng: this.map.getCenter().lng.toFixed(4),\n//   lat: this.map.getCenter().lat.toFixed(4),\n//   zoom: this.map.getZoom().toFixed(2)\n//   });\n// });\n//// Import Africapolis agglomerations from mapbox\nthis.map.on('load',function(){// Add Country shape\n_this2.map.addSource('africapolis_country',{type:'vector',url:'mapbox://mapbox.country-boundaries-v1'});// Add Agglomerations\n//    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\n// Add Country label\n// this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mapbox.mapbox-streets-v8'});\n// Add Region labelled\n//    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\n// Add Country layer\n_this2.map.addLayer({id:'country',source:'africapolis_country',type:'fill','source-layer':'country_boundaries',//filter:[\"==\",\"Region_ID\",1],\npaint:{'fill-color':'#fdfdf5','fill-opacity':['case',['boolean',['feature-state','hover'],false],0.2,0]}});// this.map.addLayer({\n//       id: 'country_labels',\n//       source:'africapolis_country_label',\n//       type: 'symbol',\n//       'source-layer':'place_label',\n//       //filter:[  \"match\",  [\"get\", \"class\"],  \"country\",  [    \"match\",    [\"get\", \"worldview\"],    [\"all\", \"US\"],    true,    false  ],  \"disputed_country\",  [    \"all\",    [      \"==\",      [\"get\", \"disputed\"],      \"true\"    ],    [      \"match\",      [\"get\", \"worldview\"],      [\"all\", \"US\"],      true,      false    ]  ],  false],\n//       layout: {\n//         'text-field':[\"get\",\"name_en\"],\n//         'text-font': [   \"DIN Pro Medium\",  \"Arial Unicode MS Regular\"],\n//         //'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ],\n//       },\n//       paint:{//'text-opacity':[ \"step\",[\"zoom\"],  0,  3,  1,  22,  1],\n//              'text-color':['case',['boolean', ['feature-state', 'hover'], false],\"hsl(0,0%,0%)\",\"hsl(215, 30%, 75%)\"],\n//              //'text-halo-color': \"hsl(0, 0%, 100%)\",\n//              //'text-halo-width': 1.25\n//            }\n//   });\n//\n_this2.map.on('click','country',function(e){//console.log(e.features[0].properties.iso_3166_1)\n_this2.setState({selectedCountry:e.features[0].properties.iso_3166_1});var selected=[];var scidata=[];sci.map(function(e){return e.start===_this2.state.selectedCountry?selected.push(e):null;});selected.map(function(e){return scidata.push(e.sci);});var percentile20=quantile(scidata,.20);//selected.map(e => e.sci = e.sci/ percentile20)\nvar top5=scidata.sort(function(a,b){return b-a;}).slice(0,5);selected.map(function(e){e.region=countryData[e.end][1];e.sciScaled=Math.round(e.sci/percentile20);if(e.sci===top5[0]){top5_list[0]=e;}else if(e.sci===top5[1]){top5_list[1]=e;}else if(e.sci===top5[2]){top5_list[2]=e;}else if(e.sci===top5[3]){top5_list[3]=e;}else if(e.sci===top5[4]){top5_list[4]=e;}});//top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\n// Calculate the sums and group data (while tracking count)\nvar reduced=selected.reduce(function(m,d){if(!m[d.region]){m[d.region]=_objectSpread({},d,{count:1});return m;}m[d.region].sciScaled+=d.sciScaled;m[d.region].count+=1;return m;},{});// Create new array from grouped data and compute the average\nresult=Object.keys(reduced).map(function(k){var item=reduced[k];return{region:item.region,sciScaled:Math.round(item.sciScaled/item.count*100)/100};});console.log(result);// console.log(JSON.stringify(result,null,4));\n_this2.setState({name:e.features[0].properties.name_en,region:e.features[0].properties.region});var matchExpression=['match',['get','iso_3166_1']];// Calculate color values for each country based on 'hdi' value\nselected.forEach(function(e){// 1 2 3 5 10 25 100 above100\n//e.sci = e.sci/percentile20\nif(e.sci/percentile20<1){matchExpression.push(e['end'],\"#F3F2E8\");}else if(e.sci/percentile20<2){matchExpression.push(e['end'],\"#D4EBE2\");}else if(e.sci/percentile20<3){matchExpression.push(e['end'],\"#B6E3DB\");}else if(e.sci/percentile20<5){matchExpression.push(e['end'],\"#97DCD5\");}else if(e.sci/percentile20<10){matchExpression.push(e['end'],\"#79D5CF\");}else if(e.sci/percentile20<25){matchExpression.push(e['end'],\"#5ACEC9\");}else if(e.sci/percentile20<100){matchExpression.push(e['end'],\"#3CC6C2\");}else{matchExpression.push(e['end'],\"#1DBFBC\");}});matchExpression.push(_this2.state.selectedCountry,'#e8ae40');//console.log(matchExpression)\n// Last value is the default, used where there is no data\nmatchExpression.push('rgba(0, 0, 0, 0)');// //console.log(this.state.selectedOption, prevState.selectedOption);\n_this2.remove('country');console.log(matchExpression);_this2.map.addLayer({id:'country',source:'africapolis_country',type:'fill','source-layer':'country_boundaries',//filter:[\"==\",\"Region_ID\",1],\npaint:{'fill-color':matchExpression,'fill-opacity':0.9}});// this.remove('country_labels')\n// this.map.addLayer({\n//       id: 'country_labels',\n//       source:'africapolis_country_label',\n//       type: 'symbol',\n//       'source-layer':'place_label',\n//       filter:[ \"all\", [ \"match\", [\"get\", \"worldview\"], [\"US\",\"all\"], true, false ],[ \"match\", [\"get\", \"type\"], [\"country\"], true, false ],[ \"match\", [\"get\", \"iso_3166_1\"], [top5_list[0].end,top5_list[1].end,top5_list[2].end,top5_list[3].end,top5_list[4].end  ], true, false ]],\n//       //filter:[  \"match\",  [\"get\", \"class\"],  \"country\",  [    \"match\",    [\"get\", \"worldview\"],    [\"all\", \"US\"],    true,    false  ],  \"disputed_country\",  [    \"all\",    [      \"==\",      [\"get\", \"disputed\"],      \"true\"    ],    [      \"match\",      [\"get\", \"worldview\"],      [\"all\", \"US\"],      true,      false    ]  ],  false],\n//       layout: {\n//         //'text-size': [ \"interpolate\", [ \"cubic-bezier\", 0.2, 0, 0.7, 1 ], [\"zoom\"], 1, [ \"step\", [\"get\", \"symbolrank\"], 15.399999999999999, 4, 12.6, 5, 11.2 ], 9, [ \"step\", [\"get\", \"symbolrank\"], 39.199999999999996, 4, 30.799999999999997, 5, 29.4 ] ],\n//         'text-field':[\"get\",\"name_en\"],\n//         'text-font': [\"DIN Pro Medium\",\"Arial Unicode MS Regular\"],\n//         'icon-allow-overlap': true,\n//         'text-allow-overlap': true,\n//         //'text-allow-overlap' : true\n//         //'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ],\n//       },\n//       paint:{//'text-opacity':[ \"step\",[\"zoom\"],  0,  3,  1,  22,  1],\n//         'text-color':['case',['boolean', ['feature-state', 'hover'], false],\"hsl(0,0%,0%)\",\"hsl(0,0%,100%)\"],\n//         'text-halo-color': \"hsl(0,0%,0%)\",\n//         'text-halo-width': 1.25\n//            }\n//   });\n//\n});var hoveredID=null;_this2.map.on('mouseenter','country',function(e){if(e.features.length>0){if(hoveredID){_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:false});}hoveredID=e.features[0].id;_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:true});}});_this2.map.on('mouseleave','country',function(e){if(hoveredID){_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:false});}hoveredID=null;});});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){//if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\nif(prevState!==this.state){}}},{key:\"render\",//Countries with the highest SCI\nvalue:function render(){var _this3=this;var selectedOption=this.state.selectedOption;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.topleft},\" \",/*#__PURE__*/React.createElement(\"p\",null,this.state.name),\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"table\",{className:classes.table},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Country\"),/*#__PURE__*/React.createElement(\"th\",null,\"SCI\"),/*#__PURE__*/React.createElement(\"th\",null,\"Region\"))),/*#__PURE__*/React.createElement(\"tbody\",null,top5_list[0].end?top5_list.map(function(e,i){return/*#__PURE__*/React.createElement(\"tr\",null,\" \",/*#__PURE__*/React.createElement(\"td\",null,countryData[top5_list[i].end][0]),\" \",/*#__PURE__*/React.createElement(\"td\",null,top5_list[i].sciScaled),\" \",/*#__PURE__*/React.createElement(\"td\",null,countryData[top5_list[i].end][1]),\" \");}):null)),/*#__PURE__*/React.createElement(BarChart,{width:320,height:150,data:result.sort(function(a,b){return a.region.localeCompare(b.region);})},/*#__PURE__*/React.createElement(XAxis,{dataKey:\"region\",color:\"white\",style:{textAnchor:'middle',fontSize:'100%',fill:'rgba(255, 255, 255, 1)'}}),/*#__PURE__*/React.createElement(Bar,{dataKey:\"sciScaled\",fill:\"#3CC6C2\",id:\"region\"},result.map(function(entry,index){return/*#__PURE__*/React.createElement(Cell,{cursor:\"pointer\",key:\"cell-\".concat(index),fill:entry.region===_this3.state.region?'#e8ae40':'#3CC6C2'});})),/*#__PURE__*/React.createElement(Tooltip,null))),/*#__PURE__*/React.createElement(\"div\",null,\"Longitude: \",this.state.lng,\" | Latitude: \",this.state.lat,\" | Zoom: \",this.state.zoom),/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this3.mapContainer=el;},className:classes.mapContainer}),/*#__PURE__*/React.createElement(\"div\",{className:classes.legend},legend));}}]);return Application;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(Application,null),document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","sci","countryData","classes","BarChart","Cell","Bar","Tooltip","XAxis","YAxis","accessToken","colors","console","log","top5_list","result","asc","arr","sort","a","b","sum","reduce","mean","length","quantile","q","sorted","pos","base","Math","floor","rest","undefined","legend","backgroundColor","agglomeration_fill_color","agglomeration_stroke_color","Application","props","onUpdate","update","setState","onChange","values","onFilter","filters","target","id","state","remove","obj","map","removeLayer","add_shape","filter1","addLayer","source","type","filter","paint","lng","lat","zoom","selectedCountry","name","region","selected","scidata","e","start","push","Map","container","mapContainer","style","center","on","addSource","url","features","properties","iso_3166_1","percentile20","top5","slice","end","sciScaled","round","reduced","m","d","count","Object","keys","k","item","name_en","matchExpression","forEach","hoveredID","setFeatureState","sourceLayer","hover","prevProps","prevState","selectedOption","topleft","table","i","localeCompare","textAnchor","fontSize","fill","entry","index","el","Component","render","document","getElementById"],"mappings":"q0BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,YAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,CAAmBC,IAAnB,CAAyBC,GAAzB,CAA8BC,OAA9B,CAAuCC,KAAvC,CAA8CC,KAA9C,KAA2D,UAA3D,CAEA;AACA;AACA;AAEA;AACAX,QAAQ,CAACY,WAAT,CAAuB,uFAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAW,SAAX,CAAqB,SAArB,CAA+B,SAA/B,CAAyC,SAAzC,CAAmD,SAAnD,CAA6D,SAA7D,CAAuE,SAAvE,CAAiF,SAAjF,CAAf,CAIA;AAEA;AACAC,OAAO,CAACC,GAAR,CAAYX,WAAW,CAAC,IAAD,CAAvB,EACA,GAAIY,CAAAA,SAAS,CAAC,CAAC,EAAD,CAAI,EAAJ,CAAO,EAAP,CAAU,EAAV,CAAa,EAAb,CAAd,CACA,GAAIC,CAAAA,MAAM,CAAC,EAAX,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,CAAS,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAT,CAAJ,EAAf,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAJ,GAAG,QAAIA,CAAAA,GAAG,CAACK,MAAJ,CAAW,SAACH,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAX,CAA4B,CAA5B,CAAJ,EAAf,CAEA,GAAMG,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAN,GAAG,QAAII,CAAAA,GAAG,CAACJ,GAAD,CAAH,CAAWA,GAAG,CAACO,MAAnB,EAAhB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACR,GAAD,CAAMS,CAAN,CAAY,CACzB,GAAMC,CAAAA,MAAM,CAAGX,GAAG,CAACC,GAAD,CAAlB,CACA,GAAMW,CAAAA,GAAG,CAAG,CAACD,MAAM,CAACH,MAAP,CAAgB,CAAjB,EAAsBE,CAAlC,CACA,GAAMG,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAb,CACA,GAAMI,CAAAA,IAAI,CAAGJ,GAAG,CAAGC,IAAnB,CACA,GAAIF,MAAM,CAACE,IAAI,CAAG,CAAR,CAAN,GAAqBI,SAAzB,CAAoC,CAChC,MAAON,CAAAA,MAAM,CAACE,IAAD,CAAN,CAAeG,IAAI,EAAIL,MAAM,CAACE,IAAI,CAAG,CAAR,CAAN,CAAmBF,MAAM,CAACE,IAAD,CAA7B,CAA1B,CACH,CAFD,IAEO,CACH,MAAOF,CAAAA,MAAM,CAACE,IAAD,CAAb,CACH,CACJ,CAVD,CAYA,GAAMK,CAAAA,MAAM,cACZ,4CACE,2DADF,cAEA,4CAAK,4BAAM,KAAK,CAAE,CAACC,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,CAAwD,MAAxD,kBAAgE,iCAAQ,mBAAR,CAAhE,CAFA,cAGA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,QAHA,cAIA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,QAJA,cAKA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,QALA,cAMA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,SANA,cAOA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,UAPA,cAQA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,WARA,cASA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,CAAwD,SAAxD,CATA,cAUA,4CAAK,4BAAM,KAAK,CAAE,CAACwB,eAAe,CAAExB,MAAM,CAAC,CAAD,CAAxB,CAAb,EAAL,CAAwD,oBAAxD,CAVA,CADA,CAgBA,GAAMyB,CAAAA,wBAAwB,CAAE,CAC9B,MAD8B,CAE9B,CAAC,KAAD,CAAQ,iBAAR,CAF8B,CAG9B,sBAH8B,CAI9B,KAJ8B,CAK9B,yBAL8B,CAM9B,KAN8B,CAO9B,0BAP8B,CAQ9B,MAR8B,CAS9B,yBAT8B,CAU9B,MAV8B,CAW9B,0BAX8B,CAY9B,OAZ8B,CAa9B,0BAb8B,CAc9B,OAd8B,CAe9B,0BAf8B,CAgB9B,QAhB8B,CAiB9B,0BAjB8B,CAAhC,CAmBC,GAAMC,CAAAA,0BAA0B,CAAE,CACjC,MADiC,CAEjC,CAAC,KAAD,CAAQ,iBAAR,CAFiC,CAGjC,oBAHiC,CAIjC,KAJiC,CAKjC,uBALiC,CAMjC,KANiC,CAOjC,wBAPiC,CAQjC,MARiC,CASjC,uBATiC,CAUjC,MAViC,CAWjC,wBAXiC,CAYjC,OAZiC,CAajC,wBAbiC,CAcjC,OAdiC,CAejC,wBAfiC,CAgBjC,QAhBiC,CAiBjC,wBAjBiC,CAAlC,CAoBD;AACA;AACA;AACA;AAIA;GACMC,CAAAA,W,sHACJ,qBAAYC,KAAZ,CAAmB,6CACjB,uBAAMA,KAAN,EADiB,MAsPrBC,QAtPqB,CAsPV,SAAAC,MAAM,CAAI,CACnB,MAAKC,QAAL,CAAc,CAAED,MAAM,CAANA,MAAF,CAAd,EACD,CAxPoB,OA0PrBE,QA1PqB,CA0PV,SAAAC,MAAM,CAAI,CACnB,MAAKF,QAAL,CAAc,CAAEE,MAAM,CAANA,MAAF,CAAd,EACD,CA5PoB,OA8PrBC,QA9PqB,CA8PV,SAAAC,OAAO,CAAI,CACpB,MAAKJ,QAAL,oBAAgBI,OAAO,CAACC,MAAR,CAAeC,EAA/B,CAAoC,CAAC,MAAKC,KAAL,CAAWH,OAAO,CAACC,MAAR,CAAeC,EAA1B,CAArC,GACD,CAhQoB,OAkQrBE,MAlQqB,CAkQZ,SAAAC,GAAG,CAAI,CACZ,MAAKC,GAAL,CAASC,WAAT,CAAqBF,GAArB,EACH,CApQoB,OAsQrBG,SAtQqB,CAsQT,SAACH,GAAD,CAAKI,OAAL,CAAiB,CACzB,MAAKH,GAAL,CAASI,QAAT,CAAkB,CACdR,EAAE,CAAEG,GADU,CAEdM,MAAM,CAAC,qBAFO,CAGdC,IAAI,CAAE,MAHQ,CAId,eAAe,iCAJD,CAKdC,MAAM,CAACJ,OALO,CAMdK,KAAK,CAAE,CACL,aAAc,SADT,CAEL,eAAgB,CAAC,aAAD,CAAe,CAAC,QAAD,CAAf,CAA0B,CAAC,MAAD,CAA1B,CAAoC,CAApC,CAAsC,CAAtC,CAAwC,CAAxC,CAA0C,CAA1C,CAA6C;AAFxD,CANO,CAWnB;AAXC,EAaA;AAEH,CAtRoB,CAEjB,MAAKX,KAAL,CAAa,CACXY,GAAG,CAAE,CADM,CAEXC,GAAG,CAAE,CAFM,CAGXC,IAAI,CAAE,CAHK,CAIXC,eAAe,CAAE,IAJN,CAKXC,IAAI,CAAE,iCALK,CAMXC,MAAM,CAAE,EANG,CAAb,CAFiB,aAUlB,C,qFACiB,iBACpB;AAEA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,OAAO,CAAE,EAAb,CACAnE,GAAG,CAACmD,GAAJ,CAAQ,SAAAiB,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,GAAU,MAAI,CAACrB,KAAL,CAAWe,eAArB,CAAsCG,QAAQ,CAACI,IAAT,CAAcF,CAAd,CAAtC,CAAyD,IAA7D,EAAT,EACAzD,OAAO,CAACC,GAAR,CAAYsD,QAAZ,EACAA,QAAQ,CAACf,GAAT,CAAa,SAAAiB,CAAC,QAAID,CAAAA,OAAO,CAACG,IAAR,CAAaF,CAAC,CAACpE,GAAf,CAAJ,EAAd,EACAW,OAAO,CAACC,GAAR,CAAYuD,OAAZ,EACAxD,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAAC2C,OAAD,CAAU,GAAV,CAApB,EACA;AAIK,KAAKhB,GAAL,CAAW,GAAItD,CAAAA,QAAQ,CAAC0E,GAAb,CAAiB,CAC3BC,SAAS,CAAE,KAAKC,YADW,CAE3BC,KAAK,CAAE,gDAFoB,CAE8B;AACzDC,MAAM,CAAE,CAAC,KAAK3B,KAAL,CAAWY,GAAZ,CAAiB,KAAKZ,KAAL,CAAWa,GAA5B,CAHmB,CAI3BC,IAAI,CAAE,KAAKd,KAAL,CAAWc,IAJU,CAAjB,CAAX,CAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACI,KAAKX,GAAL,CAASyB,EAAT,CAAY,MAAZ,CAAoB,UAAM,CAE9B;AACM,MAAI,CAACzB,GAAL,CAAS0B,SAAT,CAAmB,qBAAnB,CAA0C,CAAEpB,IAAI,CAAE,QAAR,CAAkBqB,GAAG,CAAE,uCAAvB,CAA1C,EACN;AACE;AACF;AACK;AACL;AACE;AAEF;AACM,MAAI,CAAC3B,GAAL,CAASI,QAAT,CAAkB,CACZR,EAAE,CAAE,SADQ,CAEZS,MAAM,CAAC,qBAFK,CAGZC,IAAI,CAAE,MAHM,CAIZ,eAAe,oBAJH,CAKZ;AACAE,KAAK,CAAE,CAEL,aAAc,SAFT,CAGL,eAAgB,CAAC,MAAD,CAAQ,CAAC,SAAD,CAAY,CAAC,eAAD,CAAkB,OAAlB,CAAZ,CAAwC,KAAxC,CAAR,CAAuD,GAAvD,CAA2D,CAA3D,CAHX,CANK,CAAlB,EAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAI,CAACR,GAAL,CAASyB,EAAT,CAAY,OAAZ,CAAqB,SAArB,CAAgC,SAAAR,CAAC,CAAK,CAChC;AACA,MAAI,CAAC3B,QAAL,CAAc,CAACsB,eAAe,CAACK,CAAC,CAACW,QAAF,CAAW,CAAX,EAAcC,UAAd,CAAyBC,UAA1C,CAAd,EAEA,GAAIf,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,OAAO,CAAE,EAAb,CACAnE,GAAG,CAACmD,GAAJ,CAAQ,SAAAiB,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,GAAU,MAAI,CAACrB,KAAL,CAAWe,eAArB,CAAsCG,QAAQ,CAACI,IAAT,CAAcF,CAAd,CAAtC,CAAyD,IAA7D,EAAT,EACAF,QAAQ,CAACf,GAAT,CAAa,SAAAiB,CAAC,QAAID,CAAAA,OAAO,CAACG,IAAR,CAAaF,CAAC,CAACpE,GAAf,CAAJ,EAAd,EACA,GAAIkF,CAAAA,YAAY,CAAG1D,QAAQ,CAAC2C,OAAD,CAAU,GAAV,CAA3B,CACA;AAGA,GAAIgB,CAAAA,IAAI,CAAChB,OAAO,CAAClD,IAAR,CAAa,SAACC,CAAD,CAAGC,CAAH,QAASA,CAAAA,CAAC,CAACD,CAAX,EAAb,EAA2BkE,KAA3B,CAAiC,CAAjC,CAAmC,CAAnC,CAAT,CACAlB,QAAQ,CAACf,GAAT,CAAa,SAAAiB,CAAC,CAAI,CAChBA,CAAC,CAACH,MAAF,CAAShE,WAAW,CAACmE,CAAC,CAACiB,GAAH,CAAX,CAAmB,CAAnB,CAAT,CACAjB,CAAC,CAACkB,SAAF,CAAazD,IAAI,CAAC0D,KAAL,CAAWnB,CAAC,CAACpE,GAAF,CAAMkF,YAAjB,CAAb,CACA,GAAGd,CAAC,CAACpE,GAAF,GAAQmF,IAAI,CAAC,CAAD,CAAf,CAAoB,CAACtE,SAAS,CAAC,CAAD,CAAT,CAAauD,CAAb,CAAe,CAApC,IACK,IAAGA,CAAC,CAACpE,GAAF,GAAQmF,IAAI,CAAC,CAAD,CAAf,CAAoB,CAACtE,SAAS,CAAC,CAAD,CAAT,CAAauD,CAAb,CAAe,CAApC,IACA,IAAGA,CAAC,CAACpE,GAAF,GAAQmF,IAAI,CAAC,CAAD,CAAf,CAAoB,CAACtE,SAAS,CAAC,CAAD,CAAT,CAAauD,CAAb,CAAe,CAApC,IACA,IAAGA,CAAC,CAACpE,GAAF,GAAQmF,IAAI,CAAC,CAAD,CAAf,CAAoB,CAACtE,SAAS,CAAC,CAAD,CAAT,CAAauD,CAAb,CAAe,CAApC,IACA,IAAGA,CAAC,CAACpE,GAAF,GAAQmF,IAAI,CAAC,CAAD,CAAf,CAAoB,CAACtE,SAAS,CAAC,CAAD,CAAT,CAAauD,CAAb,CAAe,CAC1C,CARD,EAUA;AAEc;AACd,GAAMoB,CAAAA,OAAO,CAAGtB,QAAQ,CAAC7C,MAAT,CAAgB,SAASoE,CAAT,CAAYC,CAAZ,CAAc,CAC1C,GAAG,CAACD,CAAC,CAACC,CAAC,CAACzB,MAAH,CAAL,CAAgB,CACdwB,CAAC,CAACC,CAAC,CAACzB,MAAH,CAAD,kBAAkByB,CAAlB,EAAqBC,KAAK,CAAE,CAA5B,GACA,MAAOF,CAAAA,CAAP,CACD,CACDA,CAAC,CAACC,CAAC,CAACzB,MAAH,CAAD,CAAYqB,SAAZ,EAAyBI,CAAC,CAACJ,SAA3B,CACAG,CAAC,CAACC,CAAC,CAACzB,MAAH,CAAD,CAAY0B,KAAZ,EAAqB,CAArB,CACA,MAAOF,CAAAA,CAAP,CACF,CARc,CAQb,EARa,CAAhB,CAUC;AACG3E,MAAM,CAAG8E,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBrC,GAArB,CAAyB,SAAS2C,CAAT,CAAW,CAC5C,GAAMC,CAAAA,IAAI,CAAIP,OAAO,CAACM,CAAD,CAArB,CACA,MAAO,CACH7B,MAAM,CAAE8B,IAAI,CAAC9B,MADV,CAEHqB,SAAS,CAAEzD,IAAI,CAAC0D,KAAL,CAAWQ,IAAI,CAACT,SAAL,CAAeS,IAAI,CAACJ,KAApB,CAA0B,GAArC,EAA0C,GAFlD,CAAP,CAIH,CANW,CAAT,CAOlBhF,OAAO,CAACC,GAAR,CAAYE,MAAZ,EACC;AAEa,MAAI,CAAC2B,QAAL,CAAc,CAACuB,IAAI,CAACI,CAAC,CAACW,QAAF,CAAW,CAAX,EAAcC,UAAd,CAAyBgB,OAA/B,CAAuC/B,MAAM,CAACG,CAAC,CAACW,QAAF,CAAW,CAAX,EAAcC,UAAd,CAAyBf,MAAvE,CAAd,EAEA,GAAIgC,CAAAA,eAAe,CAAG,CAAC,OAAD,CAAU,CAAC,KAAD,CAAQ,YAAR,CAAV,CAAtB,CAEA;AACA/B,QAAQ,CAACgC,OAAT,CAAkB,SAAA9B,CAAC,CAAI,CAEvB;AAEA;AACA,GAAGA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,CAAxB,CAA2B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAvE,IACK,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,CAAzB,CAA4B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAxE,IACA,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,CAAzB,CAA4B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAxE,IACA,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,CAAzB,CAA4B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAxE,IACA,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,EAAzB,CAA6B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAzE,IACA,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,EAAzB,CAA6B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAAzE,IACA,IAAIA,CAAC,CAACpE,GAAF,CAAMkF,YAAN,CAAqB,GAAzB,CAA8B,CAACe,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAA1E,IACA,CAAC6B,eAAe,CAAC3B,IAAhB,CAAqBF,CAAC,CAAC,KAAD,CAAtB,CAA+B,SAA/B,EAA2C,CAChD,CAbD,EAeA6B,eAAe,CAAC3B,IAAhB,CAAqB,MAAI,CAACtB,KAAL,CAAWe,eAAhC,CAAiD,SAAjD,EAEA;AAEA;AACAkC,eAAe,CAAC3B,IAAhB,CAAqB,kBAArB,EAEA;AACA,MAAI,CAACrB,MAAL,CAAY,SAAZ,EACAtC,OAAO,CAACC,GAAR,CAAYqF,eAAZ,EACA,MAAI,CAAC9C,GAAL,CAASI,QAAT,CAAkB,CAChBR,EAAE,CAAE,SADY,CAEhBS,MAAM,CAAC,qBAFS,CAGhBC,IAAI,CAAE,MAHU,CAIhB,eAAe,oBAJC,CAKhB;AACAE,KAAK,CAAE,CACL,aAAcsC,eADT,CAEL,eAAgB,GAFX,CANS,CAAlB,EAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD,CAnHL,EAuHR,GAAIE,CAAAA,SAAS,CAAC,IAAd,CACQ,MAAI,CAAChD,GAAL,CAASyB,EAAT,CAAY,YAAZ,CAA0B,SAA1B,CAAqC,SAAAR,CAAC,CAAK,CACzC,GAAIA,CAAC,CAACW,QAAF,CAAWxD,MAAX,CAAoB,CAAxB,CAA2B,CACrB,GAAI4E,SAAJ,CAAe,CACX,MAAI,CAAChD,GAAL,CAASiD,eAAT,CACA,CAAE5C,MAAM,CAAE,qBAAV,CAAiCT,EAAE,CAACoD,SAApC,CAA+CE,WAAW,CAAC,oBAA3D,CADA,CAEA,CAAEC,KAAK,CAAE,KAAT,CAFA,EAIC,CACLH,SAAS,CAAG/B,CAAC,CAACW,QAAF,CAAW,CAAX,EAAchC,EAA1B,CACA,MAAI,CAACI,GAAL,CAASiD,eAAT,CACA,CAAE5C,MAAM,CAAE,qBAAV,CAAiCT,EAAE,CAACoD,SAApC,CAA+CE,WAAW,CAAC,oBAA3D,CADA,CAEA,CAAEC,KAAK,CAAE,IAAT,CAFA,EAIC,CACJ,CAdL,EAgBA,MAAI,CAACnD,GAAL,CAASyB,EAAT,CAAY,YAAZ,CAA0B,SAA1B,CAAqC,SAAAR,CAAC,CAAK,CACzC,GAAI+B,SAAJ,CAAe,CACH,MAAI,CAAChD,GAAL,CAASiD,eAAT,CACA,CAAE5C,MAAM,CAAE,qBAAV,CAAiCT,EAAE,CAACoD,SAApC,CAA+CE,WAAW,CAAC,oBAA3D,CADA,CAEA,CAAEC,KAAK,CAAE,KAAT,CAFA,EAID,CACDH,SAAS,CAAG,IAAZ,CACH,CART,EAaH,CAlMD,EAqMH,C,8DACkBI,S,CAAWC,S,CAAW,CACrC;AAEA,GAAIA,SAAS,GAAK,KAAKxD,KAAvB,CAA8B,CAG/B,CACF,C,gBAmCD;uBACS,oBACGyD,CAAAA,cADH,CACsB,KAAKzD,KAD3B,CACGyD,cADH,CAEL,mBACE,4CACE,2BAAK,SAAS,CAAEvG,OAAO,CAACwG,OAAxB,mBAAkC,6BAAI,KAAK1D,KAAL,CAAWgB,IAAf,CAAlC,kBAA2D,8BAA3D,cACE,6BAAO,SAAS,CAAE9D,OAAO,CAACyG,KAA1B,eACE,8CACE,2CACE,wCADF,cACkB,oCADlB,cAC8B,uCAD9B,CADF,CADF,cAME,iCACG9F,SAAS,CAAC,CAAD,CAAT,CAAawE,GAAb,CAAkBxE,SAAS,CAACsC,GAAV,CAAc,SAACiB,CAAD,CAAGwC,CAAH,qBACjC,+CAAK,8BAAK3G,WAAW,CAACY,SAAS,CAAC+F,CAAD,CAAT,CAAavB,GAAd,CAAX,CAA8B,CAA9B,CAAL,CAAL,kBAAiD,8BAAKxE,SAAS,CAAC+F,CAAD,CAAT,CAAatB,SAAlB,CAAjD,kBAAmF,8BAAKrF,WAAW,CAACY,SAAS,CAAC+F,CAAD,CAAT,CAAavB,GAAd,CAAX,CAA8B,CAA9B,CAAL,CAAnF,KADiC,EAAd,CAAlB,CAEG,IAHN,CANF,CADF,cAaI,oBAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,CAAmC,IAAI,CAAEvE,MAAM,CAACG,IAAP,CAAY,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAC+C,MAAF,CAAS4C,aAAT,CAAuB1F,CAAC,CAAC8C,MAAzB,CAAV,EAAZ,CAAzC,eACE,oBAAC,KAAD,EAAO,OAAO,CAAC,QAAf,CAAwB,KAAK,CAAC,OAA9B,CAAsC,KAAK,CAAE,CAAE6C,UAAU,CAAE,QAAd,CAAwBC,QAAQ,CAAE,MAAlC,CAA0CC,IAAI,CAAE,wBAAhD,CAA7C,EADF,cAEE,oBAAC,GAAD,EAAK,OAAO,CAAC,WAAb,CAAyB,IAAI,CAAC,SAA9B,CAAwC,EAAE,CAAC,QAA3C,EACGlG,MAAM,CAACqC,GAAP,CAAW,SAAC8D,KAAD,CAAOC,KAAP,qBAClB,oBAAC,IAAD,EAAM,MAAM,CAAC,SAAb,CAAuB,GAAG,gBAAUA,KAAV,CAA1B,CAA6C,IAAI,CAAED,KAAK,CAAChD,MAAN,GAAkB,MAAI,CAACjB,KAAL,CAAWiB,MAA7B,CAAsC,SAAtC,CAAkD,SAArG,EADkB,EAAX,CADH,CAFF,cAQE,oBAAC,OAAD,MARF,CAbJ,CADF,cA0BE,6CAAiB,KAAKjB,KAAL,CAAWY,GAA5B,iBAA8C,KAAKZ,KAAL,CAAWa,GAAzD,aAAuE,KAAKb,KAAL,CAAWc,IAAlF,CA1BF,cA2BE,2BAAK,GAAG,CAAE,aAAAqD,EAAE,QAAI,CAAA,MAAI,CAAC1C,YAAL,CAAoB0C,EAAxB,EAAZ,CAAwC,SAAS,CAAEjH,OAAO,CAACuE,YAA3D,EA3BF,cA4BE,2BAAK,SAAS,CAAEvE,OAAO,CAAC+B,MAAxB,EAAiCA,MAAjC,CA5BF,CADF,CAgCD,C,yBA3TuBtC,KAAK,CAACyH,S,EA6ThCxH,QAAQ,CAACyH,MAAT,cAAgB,oBAAC,WAAD,MAAhB,CAAiCC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAjC","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport sci from './sci.json';\r\nimport countryData from './country.json';\r\nimport classes from './Site.module.css';\r\nimport { BarChart, Cell, Bar, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\n//iso_3166_1_alpha_3\r\n///6808: 520  baseline\r\n//// divide 20% percentile per country//////\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\nconsole.log(countryData[\"AF\"])\r\nlet top5_list=[[],[],[],[],[]];\r\nlet result=[];\r\n\r\nconst asc = arr => arr.sort((a, b) => a - b);\r\n\r\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\r\n\r\nconst mean = arr => sum(arr) / arr.length;\r\n\r\nconst quantile = (arr, q) => {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n        return sorted[base];\r\n    }\r\n};\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connectedness Index</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x\"} <small>{\"(20th percentile)\"}</small></div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n<div><span style={{backgroundColor: colors[8]}}></span>{\"Data not available\"}</div>\r\n</div>\r\n);\r\n\r\n\r\nconst agglomeration_fill_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 0.5)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 0.5)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 0.5)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 0.5)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 0.5)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 0.5)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 0.5)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 0.5)\"\r\n ]\r\n const agglomeration_stroke_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 1)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 1)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 1)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 1)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 1)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 1)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 1)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 1)\"\r\n ]\r\n\r\n// const options = [];\r\n// country_label.map(v=>{return options.push({label:v, value:v})});\r\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\r\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\r\n\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 2,\r\n      selectedCountry: \"US\",\r\n      name: \"Select the country to check SCI\",\r\n      region: \"\"\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nlet selected = [];\r\nlet scidata= [];\r\nsci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\nconsole.log(selected)\r\nselected.map(e => scidata.push(e.sci))\r\nconsole.log(scidata)\r\nconsole.log(quantile(scidata, .20))\r\n//Object.keys(selected).map(e => console.log(e))\r\n\r\n\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    // this.map.on('move', () => {\r\n    //   this.setState({\r\n    //   lng: this.map.getCenter().lng.toFixed(4),\r\n    //   lat: this.map.getCenter().lat.toFixed(4),\r\n    //   zoom: this.map.getZoom().toFixed(2)\r\n    //   });\r\n    // });\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mapbox.country-boundaries-v1'});\r\n// Add Agglomerations\r\n  //    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\r\n// Add Country label\r\n     // this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mapbox.mapbox-streets-v8'});\r\n// Add Region labelled\r\n  //    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'country_boundaries',\r\n            //filter:[\"==\",\"Region_ID\",1],\r\n            paint: {\r\n\r\n              'fill-color': '#fdfdf5',\r\n              'fill-opacity': ['case',['boolean', ['feature-state', 'hover'], false],0.2,0]\r\n            }\r\n        });\r\n\r\n\r\n        // this.map.addLayer({\r\n        //       id: 'country_labels',\r\n        //       source:'africapolis_country_label',\r\n        //       type: 'symbol',\r\n        //       'source-layer':'place_label',\r\n        //       //filter:[  \"match\",  [\"get\", \"class\"],  \"country\",  [    \"match\",    [\"get\", \"worldview\"],    [\"all\", \"US\"],    true,    false  ],  \"disputed_country\",  [    \"all\",    [      \"==\",      [\"get\", \"disputed\"],      \"true\"    ],    [      \"match\",      [\"get\", \"worldview\"],      [\"all\", \"US\"],      true,      false    ]  ],  false],\r\n        //       layout: {\r\n        //         'text-field':[\"get\",\"name_en\"],\r\n        //         'text-font': [   \"DIN Pro Medium\",  \"Arial Unicode MS Regular\"],\r\n        //         //'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ],\r\n        //       },\r\n        //       paint:{//'text-opacity':[ \"step\",[\"zoom\"],  0,  3,  1,  22,  1],\r\n        //              'text-color':['case',['boolean', ['feature-state', 'hover'], false],\"hsl(0,0%,0%)\",\"hsl(215, 30%, 75%)\"],\r\n        //              //'text-halo-color': \"hsl(0, 0%, 100%)\",\r\n        //              //'text-halo-width': 1.25\r\n        //            }\r\n        //   });\r\n        //\r\n\r\n        this.map.on('click', 'country', e =>  {\r\n              //console.log(e.features[0].properties.iso_3166_1)\r\n              this.setState({selectedCountry:e.features[0].properties.iso_3166_1})\r\n\r\n              let selected = [];\r\n              let scidata= [];\r\n              sci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\n              selected.map(e => scidata.push(e.sci))\r\n              let percentile20 = quantile(scidata, .20)\r\n              //selected.map(e => e.sci = e.sci/ percentile20)\r\n\r\n\r\n              let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n              selected.map(e => {\r\n                e.region=countryData[e.end][1]\r\n                e.sciScaled= Math.round(e.sci/percentile20)\r\n                if(e.sci===top5[0]) {top5_list[0]=e}\r\n                else if(e.sci===top5[1]) {top5_list[1]=e}\r\n                else if(e.sci===top5[2]) {top5_list[2]=e}\r\n                else if(e.sci===top5[3]) {top5_list[3]=e}\r\n                else if(e.sci===top5[4]) {top5_list[4]=e}\r\n              })\r\n\r\n              //top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\r\n\r\n                            // Calculate the sums and group data (while tracking count)\r\n              const reduced = selected.reduce(function(m, d){\r\n                  if(!m[d.region]){\r\n                    m[d.region] = {...d, count: 1};\r\n                    return m;\r\n                  }\r\n                  m[d.region].sciScaled += d.sciScaled;\r\n                  m[d.region].count += 1;\r\n                  return m;\r\n               },{});\r\n\r\n               // Create new array from grouped data and compute the average\r\n                  result = Object.keys(reduced).map(function(k){\r\n                   const item  = reduced[k];\r\n                   return {\r\n                       region: item.region,\r\n                       sciScaled: Math.round(item.sciScaled/item.count*100)/100,\r\n                   }\r\n               })\r\nconsole.log(result)\r\n // console.log(JSON.stringify(result,null,4));\r\n\r\n              this.setState({name:e.features[0].properties.name_en,region:e.features[0].properties.region})\r\n\r\n              let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n              // Calculate color values for each country based on 'hdi' value\r\n              selected.forEach( e => {\r\n\r\n              // 1 2 3 5 10 25 100 above100\r\n\r\n              //e.sci = e.sci/percentile20\r\n              if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n              else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n              else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n              else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n              else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n              else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n              else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n              else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n              });\r\n\r\n              matchExpression.push(this.state.selectedCountry, '#e8ae40');\r\n\r\n              //console.log(matchExpression)\r\n\r\n              // Last value is the default, used where there is no data\r\n              matchExpression.push('rgba(0, 0, 0, 0)');\r\n\r\n              // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n              this.remove('country');\r\n              console.log(matchExpression)\r\n              this.map.addLayer({\r\n                id: 'country',\r\n                source:'africapolis_country',\r\n                type: 'fill',\r\n                'source-layer':'country_boundaries',\r\n                //filter:[\"==\",\"Region_ID\",1],\r\n                paint: {\r\n                  'fill-color': matchExpression,\r\n                  'fill-opacity': 0.9\r\n                }\r\n              });\r\n\r\n              // this.remove('country_labels')\r\n              // this.map.addLayer({\r\n              //       id: 'country_labels',\r\n              //       source:'africapolis_country_label',\r\n              //       type: 'symbol',\r\n              //       'source-layer':'place_label',\r\n              //       filter:[ \"all\", [ \"match\", [\"get\", \"worldview\"], [\"US\",\"all\"], true, false ],[ \"match\", [\"get\", \"type\"], [\"country\"], true, false ],[ \"match\", [\"get\", \"iso_3166_1\"], [top5_list[0].end,top5_list[1].end,top5_list[2].end,top5_list[3].end,top5_list[4].end  ], true, false ]],\r\n              //       //filter:[  \"match\",  [\"get\", \"class\"],  \"country\",  [    \"match\",    [\"get\", \"worldview\"],    [\"all\", \"US\"],    true,    false  ],  \"disputed_country\",  [    \"all\",    [      \"==\",      [\"get\", \"disputed\"],      \"true\"    ],    [      \"match\",      [\"get\", \"worldview\"],      [\"all\", \"US\"],      true,      false    ]  ],  false],\r\n              //       layout: {\r\n              //         //'text-size': [ \"interpolate\", [ \"cubic-bezier\", 0.2, 0, 0.7, 1 ], [\"zoom\"], 1, [ \"step\", [\"get\", \"symbolrank\"], 15.399999999999999, 4, 12.6, 5, 11.2 ], 9, [ \"step\", [\"get\", \"symbolrank\"], 39.199999999999996, 4, 30.799999999999997, 5, 29.4 ] ],\r\n              //         'text-field':[\"get\",\"name_en\"],\r\n              //         'text-font': [\"DIN Pro Medium\",\"Arial Unicode MS Regular\"],\r\n              //         'icon-allow-overlap': true,\r\n              //         'text-allow-overlap': true,\r\n              //         //'text-allow-overlap' : true\r\n              //         //'text-size': [\"interpolate\", [\"linear\"], [\"zoom\"], 2, [\"step\", [\"get\", \"scalerank\"], 10, 3, 8, 5, 5 ], 9, [\"step\", [\"get\", \"scalerank\"], 35, 3, 27, 5, 22 ] ],\r\n              //       },\r\n              //       paint:{//'text-opacity':[ \"step\",[\"zoom\"],  0,  3,  1,  22,  1],\r\n              //         'text-color':['case',['boolean', ['feature-state', 'hover'], false],\"hsl(0,0%,0%)\",\"hsl(0,0%,100%)\"],\r\n              //         'text-halo-color': \"hsl(0,0%,0%)\",\r\n              //         'text-halo-width': 1.25\r\n              //            }\r\n              //   });\r\n              //\r\n\r\n\r\n            });\r\n\r\n\r\n\r\nvar hoveredID=null;\r\n        this.map.on('mouseenter', 'country', e =>  {\r\n          if (e.features.length > 0) {\r\n                if (hoveredID) {\r\n                    this.map.setFeatureState(\r\n                    { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                    { hover: false }\r\n                    );\r\n                    }\r\n                hoveredID = e.features[0].id;\r\n                this.map.setFeatureState(\r\n                { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                { hover: true }\r\n                );\r\n                }\r\n            });\r\n\r\n        this.map.on('mouseleave', 'country', e =>  {\r\n          if (hoveredID) {\r\n                      this.map.setFeatureState(\r\n                      { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                      { hover: false }\r\n                      );\r\n                    }\r\n                    hoveredID = null;\r\n                });\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\r\n\r\n    if( prevState !== this.state) {\r\n\r\n\r\n  }\r\n}\r\n\r\nonUpdate = update => {\r\n  this.setState({ update })\r\n}\r\n\r\nonChange = values => {\r\n  this.setState({ values })\r\n}\r\n\r\nonFilter = filters => {\r\n  this.setState({[filters.target.id]: !this.state[filters.target.id]});\r\n}\r\n\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\n\r\nadd_shape = (obj,filter1) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'africacontinent_complete-ays128',\r\n        filter:filter1,\r\n        paint: {\r\n          'fill-color': '#fdfdf5',\r\n          'fill-opacity': [\"interpolate\",[\"linear\"],[\"zoom\"], 0,1,5,0] //8.5\r\n        }\r\n    }\r\n   // layer order\r\n  );\r\n    //console.log(this.map.getSource(\"africapolis_country\"))\r\n\r\n}\r\n//Countries with the highest SCI\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> <p>{this.state.name}</p> <br/>\r\n          <table className={classes.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Country</th><th>SCI</th><th>Region</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {top5_list[0].end? top5_list.map((e,i)=>\r\n              <tr> <td>{countryData[top5_list[i].end][0]}</td> <td>{top5_list[i].sciScaled}</td> <td>{countryData[top5_list[i].end][1]}</td> </tr>\r\n              ) : null}\r\n            </tbody>\r\n          </table>\r\n            <BarChart width={320} height={150} data={result.sort((a, b) => a.region.localeCompare(b.region))}>\r\n              <XAxis dataKey=\"region\" color=\"white\" style={{ textAnchor: 'middle', fontSize: '100%', fill: 'rgba(255, 255, 255, 1)' }}/>\r\n              <Bar dataKey=\"sciScaled\" fill=\"#3CC6C2\" id=\"region\" >\r\n                {result.map((entry,index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Cell cursor=\"pointer\" key={`cell-${index}`} fill={entry.region ===  this.state.region ? '#e8ae40' : '#3CC6C2' } />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\r\n  \t\t\t\t\t\t</Bar>\r\n              <Tooltip/>\r\n  \t\t\t\t\t</BarChart>\r\n\r\n           </div>\r\n        <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\r\n        <div ref={el => this.mapContainer = el} className={classes.mapContainer} />\r\n        <div className={classes.legend}>{legend}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}