{"ast":null,"code":"var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\n\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nmodule.exports = apply;","map":{"version":3,"sources":["C:/mapboxAndReact/node_modules/ramda/src/apply.js"],"names":["_curry2","require","apply","fn","args","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAG,aAAaC,OAAO,CAAC,oBAAD,CAAlC;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIC,KAAK,GAAG,aAAaF,OAAO,CAAC,SAASE,KAAT,CAAeC,EAAf,EAAmBC,IAAnB,EAAyB;AACxD,SAAOD,EAAE,CAACD,KAAH,CAAS,IAAT,EAAeE,IAAf,CAAP;AACD,CAF+B,CAAhC;;AAGAC,MAAM,CAACC,OAAP,GAAiBJ,KAAjB","sourcesContent":["var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\n\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nmodule.exports = apply;"]},"metadata":{},"sourceType":"script"}