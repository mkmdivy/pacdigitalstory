{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n    var marker = new mapboxgl.Marker();\n\n    function animateMarker(timestamp) {\n      var radius = 20; // Update the data to a new position based on the animation timestamp. The\n      // divisor in the expression `timestamp / 1000` controls the animation speed.\n\n      marker.setLngLat([Math.cos(timestamp / 1000) * radius, Math.sin(timestamp / 1000) * radius]); // Ensure it's added to the map. This is safe to call if it's already added.\n\n      marker.addTo(map); // Request the next frame of the animation.\n\n      requestAnimationFrame(animateMarker);\n    } // Start the animation.\n\n\n    requestAnimationFrame(animateMarker); //axios.get('chad.json').then(response=>{console.log('ID:', response.data.Agglomerations[0].Longlat);})\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","marker","Marker","animateMarker","timestamp","radius","setLngLat","Math","cos","sin","addTo","requestAnimationFrame","render","el","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAD,QAAQ,CAACE,WAAT,GAAuB,uFAAvB;;AACA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,IAAIZ,QAAQ,CAACa,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KAAKC,YADW;AAE3BC,MAAAA,KAAK,EAAE,gDAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAAC,KAAKV,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAHmB;AAI3BC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAJU,KAAjB,CAAZ;AAMAE,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACrB,WAAKC,QAAL,CAAc;AACdX,QAAAA,GAAG,EAAEI,GAAG,CAACQ,SAAJ,GAAgBZ,GAAhB,CAAoBa,OAApB,CAA4B,CAA5B,CADS;AAEdZ,QAAAA,GAAG,EAAEG,GAAG,CAACQ,SAAJ,GAAgBX,GAAhB,CAAoBY,OAApB,CAA4B,CAA5B,CAFS;AAGdX,QAAAA,IAAI,EAAEE,GAAG,CAACU,OAAJ,GAAcD,OAAd,CAAsB,CAAtB;AAHQ,OAAd;AAKC,KAND;AAQA,QAAIE,MAAM,GAAG,IAAIvB,QAAQ,CAACwB,MAAb,EAAb;;AAEA,aAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAClC,UAAIC,MAAM,GAAG,EAAb,CADkC,CAGlC;AACA;;AACAJ,MAAAA,MAAM,CAACK,SAAP,CAAiB,CACjBC,IAAI,CAACC,GAAL,CAASJ,SAAS,GAAG,IAArB,IAA6BC,MADZ,EAEjBE,IAAI,CAACE,GAAL,CAASL,SAAS,GAAG,IAArB,IAA6BC,MAFZ,CAAjB,EALkC,CAUlC;;AACAJ,MAAAA,MAAM,CAACS,KAAP,CAAapB,GAAb,EAXkC,CAalC;;AACAqB,MAAAA,qBAAqB,CAACR,aAAD,CAArB;AACC,KAhCiB,CAiClB;;;AACAQ,IAAAA,qBAAqB,CAACR,aAAD,CAArB,CAlCkB,CAmClB;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEC,EAAE,IAAI,KAAKpB,YAAL,GAAoBoB,EAApC;AAAwC,MAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtDuC;;AA4D1CpC,QAAQ,CAACmC,MAAT,eAAgB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAiCE,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAjC","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    map.on('move', () => {\r\n    this.setState({\r\n    lng: map.getCenter().lng.toFixed(4),\r\n    lat: map.getCenter().lat.toFixed(4),\r\n    zoom: map.getZoom().toFixed(2)\r\n    });\r\n    });\r\n\r\n    var marker = new mapboxgl.Marker();\r\n\r\n    function animateMarker(timestamp) {\r\n    var radius = 20;\r\n\r\n    // Update the data to a new position based on the animation timestamp. The\r\n    // divisor in the expression `timestamp / 1000` controls the animation speed.\r\n    marker.setLngLat([\r\n    Math.cos(timestamp / 1000) * radius,\r\n    Math.sin(timestamp / 1000) * radius\r\n    ]);\r\n\r\n    // Ensure it's added to the map. This is safe to call if it's already added.\r\n    marker.addTo(map);\r\n\r\n    // Request the next frame of the animation.\r\n    requestAnimationFrame(animateMarker);\r\n    }\r\n    // Start the animation.\r\n    requestAnimationFrame(animateMarker);\r\n    //axios.get('chad.json').then(response=>{console.log('ID:', response.data.Agglomerations[0].Longlat);})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}