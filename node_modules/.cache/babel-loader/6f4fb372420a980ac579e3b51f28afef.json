{"ast":null,"code":"var _jsxFileName = \"C:\\\\networkproj\\\\src\\\\Urban.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport mapboxgl from 'mapbox-gl';\nimport classes from './Site.module.css';\nimport MaterialIcon from 'material-icons-react';\nimport urbandata from './urbandata.json';\n\nconst Urban = () => {\n  mapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\n  const colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\", \"#333333\"];\n  const [Dist, setDist] = useState(1000);\n  const [mapnetwork, setmapnetwork] = useState(\"Network\");\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"rgba(255,255,255,.99)\",\n      secondary: \"rgba(255,255,255,.99)\"\n    },\n    background: {\n      default: null\n    },\n    context: {\n      background: \"#cb4b16\",\n      text: \"#fff\"\n    },\n    divider: {\n      default: \"rgba(0,0,0,.10)\"\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(70,0,0,.99)\",\n      disabled: \"rgba(0,0,0,.12)\"\n    },\n    highlightOnHover: {\n      default: \"#e3e3e3\",\n      text: \"#000\"\n    }\n  });\n  const columns = [// {\n  //   name: <h2>ID</h2>,\n  //   selector: \"Agglomeration_ID\",\n  //   sortable: true,\n  //   cell: (row) => (\n  //     <b>\n  //       {row.Agglomeration_ID}\n  //     </b>\n  //   ),\n  // },\n  {\n    name: /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Name\"),\n    selector: \"Agglomeration_Name\",\n    sortable: true\n  }, {\n    name: /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Pop\"),\n    selector: \"Population_2015\",\n    sortable: true\n  }, {\n    name: /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"D-Index\"),\n    selector: \"nS\",\n    sortable: true\n  } // {\n  //   name: <h2>Country</h2>,\n  //   selector: \"Country\",\n  //   sortable: true,\n  // }\n  ];\n  const customStyles = {\n    rows: {\n      style: {\n        minHeight: \"72px\"\n      }\n    },\n    headCells: {\n      style: {\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\"\n      }\n    },\n    cells: {\n      style: {\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\"\n      }\n    }\n  };\n\n  const tooltip = e => {\n    if (e.payload[0]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.tooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }\n      }, \" \", e.payload[0].payload.time, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 76\n        }\n      }), \"SCI \", e.payload[0].payload.time, \"x\");\n    }\n  };\n\n  const TimeSlider = ({\n    Dist,\n    width\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: `${width}px`\n      },\n      className: classes[\"input-slider\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: 1000,\n      value: Dist,\n      step: 1,\n      onChange: event => setDist(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 10\n      }\n    }, Dist, \" Minutes\"));\n  };\n\n  const [mapbox, setmapbox] = useState({\n    lng: 10,\n    lat: 0,\n    zoom: 2.5,\n    button: \"Map\"\n  });\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (!map) {\n      const popUp = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mkmd/ckh29t4mc06t51aoojdc7v1hl',\n        /// Select mapstyle from mapbox studio\n        center: [mapbox.lng, mapbox.lat],\n        zoom: mapbox.zoom,\n        attributionControl: false\n      });\n      map.on('load', () => {\n        setMap(map);\n      });\n    }\n  }, [map]);\n\n  const moveMap = e => {\n    if (e) {\n      map.flyTo({\n        center: [e.Longitude, e.Latitude],\n        zoom: 11,\n        essential: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.topleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headwrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    columns: columns,\n    data: urbandata,\n    highlightOnHover: true,\n    dense: true,\n    noHeader: true,\n    theme: \"solarized\",\n    customStyles: customStyles,\n    pagination: true,\n    onRowClicked: e => moveMap(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapContainerRef,\n    className: classes.mapContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 6\n    }\n  })));\n};\n\nexport default Urban;","map":{"version":3,"sources":["C:/networkproj/src/Urban.js"],"names":["React","useState","useEffect","useRef","DataTable","createTheme","mapboxgl","classes","MaterialIcon","urbandata","Urban","accessToken","colors","Dist","setDist","mapnetwork","setmapnetwork","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","highlightOnHover","columns","name","selector","sortable","customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","cells","tooltip","e","payload","time","TimeSlider","width","event","target","value","mapbox","setmapbox","lng","lat","zoom","mapContainerRef","map","setMap","popUp","Popup","closeButton","closeOnClick","Map","container","current","center","attributionControl","on","moveMap","flyTo","Longitude","Latitude","essential","topleft","headwrapper","mapContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport DataTable, { createTheme } from \"react-data-table-component\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport classes from './Site.module.css';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport urbandata from './urbandata.json';\r\n\r\nconst Urban = () =>  {\r\n    \r\n    mapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n    const colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\n    \r\n  const [Dist, setDist] = useState(1000)  \r\n  const [mapnetwork, setmapnetwork] = useState(\"Network\")  \r\n  \r\n  createTheme(\"solarized\", {\r\n    text: {\r\n      primary: \"rgba(255,255,255,.99)\",\r\n      secondary: \"rgba(255,255,255,.99)\",\r\n    },\r\n\r\n    background: {\r\n      default: null,\r\n    },\r\n    context: {\r\n      background: \"#cb4b16\",\r\n      text: \"#fff\",\r\n    },\r\n    divider: {\r\n      default: \"rgba(0,0,0,.10)\",\r\n    },\r\n    action: {\r\n      button: \"rgba(0,0,0,.54)\",\r\n      hover: \"rgba(70,0,0,.99)\",\r\n      disabled: \"rgba(0,0,0,.12)\",\r\n    },\r\n    highlightOnHover: {\r\n      default: \"#e3e3e3\",\r\n      text: \"#000\",\r\n    },\r\n  });\r\n\r\n  const columns = [\r\n    // {\r\n    //   name: <h2>ID</h2>,\r\n    //   selector: \"Agglomeration_ID\",\r\n    //   sortable: true,\r\n    //   cell: (row) => (\r\n    //     <b>\r\n    //       {row.Agglomeration_ID}\r\n    //     </b>\r\n    //   ),\r\n    // },\r\n    {\r\n      name: <h2>Name</h2>,\r\n      selector: \"Agglomeration_Name\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: <h2>Pop</h2>,\r\n      selector: \"Population_2015\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: <h2>D-Index</h2>,\r\n      selector: \"nS\",\r\n      sortable: true,\r\n    },\r\n    // {\r\n    //   name: <h2>Country</h2>,\r\n    //   selector: \"Country\",\r\n    //   sortable: true,\r\n    // }\r\n  ];\r\n\r\n  const customStyles = {\r\n    rows: {\r\n      style: {\r\n        minHeight: \"72px\",\r\n      },\r\n    },\r\n    headCells: {\r\n      style: {\r\n        paddingLeft: \"8px\",\r\n        paddingRight: \"8px\",\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        paddingLeft: \"8px\",\r\n        paddingRight: \"8px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  \r\n  \r\n\r\n\r\n  const tooltip = e => {\r\n    if (e.payload[0]) {\r\n    return ( <div className={classes.tooltip}> {e.payload[0].payload.time} <br/>SCI {e.payload[0].payload.time}x</div> ) }\r\n  }\r\n\r\n  const TimeSlider = ({ Dist, width }) => {\r\n    return (    \r\n      <div style={{ width: `${width}px` }} className={classes[\"input-slider\"]}>\r\n        <input type=\"range\"\r\n          min={0}\r\n          max={1000}\r\n          value={Dist}\r\n          step={1}\r\n          onChange={event =>\r\n             setDist(event.target.value)\r\n            }\r\n        />\r\n        {<span>{Dist} Minutes</span>}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n const [mapbox, setmapbox] = useState( {lng: 10,\r\n    lat: 0,\r\n    zoom: 2.5,\r\n    button: \"Map\"} );\r\n\r\n    const mapContainerRef = useRef(null);\r\n\r\n    const [map, setMap] = useState(null);\r\n\r\n    \r\n\r\n    useEffect(() => { \r\n  \r\n        if (!map) {\r\n        const popUp = new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false\r\n        });\r\n      \r\n        const map = new mapboxgl.Map({\r\n        container: mapContainerRef.current,\r\n        style: 'mapbox://styles/mkmd/ckh29t4mc06t51aoojdc7v1hl', /// Select mapstyle from mapbox studio\r\n        center: [mapbox.lng, mapbox.lat],\r\n        zoom: mapbox.zoom,\r\n        attributionControl: false\r\n      });\r\n                    \r\n      map.on('load', () => {\r\n        setMap(map);\r\n        });\r\n      }},[map]);\r\n      \r\nconst moveMap = e => {\r\n        if(e) {        \r\n        map.flyTo({center: [e.Longitude ,e.Latitude], zoom:11, essential: true });\r\n              }}\r\n  \r\n  \r\n      \r\n\r\n\r\nreturn (\r\n    <div>\r\n    <div className={classes.topleft}> <div className={classes.headwrapper}> \r\n    <DataTable\r\n        columns={columns}\r\n        data={urbandata}\r\n        highlightOnHover={true}\r\n        dense={true}\r\n        noHeader={true}\r\n        theme=\"solarized\"\r\n        customStyles={customStyles}\r\n        pagination={true}\r\n        onRowClicked={e => moveMap(e)}\r\n      />        \r\n          </div></div>\r\n<div><div ref={mapContainerRef} className={classes.mapContainer} /></div>\r\n</div>\r\n\r\n\r\n);\r\n}\r\n\r\nexport default Urban;\r\n"]},"metadata":{},"sourceType":"module"}