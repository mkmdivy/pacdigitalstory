{"ast":null,"code":"var _jsxFileName = \"C:\\\\networkproj\\\\src\\\\network.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport africa from './africa.json';\nimport classes from './Site.module.css';\nimport './index.css';\nimport logo from './OECD_white_EN.png';\nimport MaterialIcon from 'material-icons-react';\nimport { ForceGraph2D } from 'react-force-graph'; // import * as ForceGraph2D from 'react-force-graph-2d';\n// import * as d3 from 'd3';\n// import * as d3Force from 'd3-force';\n\nconst Network = props => {\n  mapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\n  const colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\", \"#333333\"];\n  const [Dist, setDist] = useState(1000);\n  const [mapnetwork, setmapnetwork] = useState(\"Network\");\n\n  const tooltip = e => {\n    if (e.payload[0]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.tooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      }, \" \", e.payload[0].payload.time, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 76\n        }\n      }), \"SCI \", e.payload[0].payload.time, \"x\");\n    }\n  }; // useEffect(() => {},[]); \n\n\n  const TimeSlider = ({\n    Dist,\n    width\n  }) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: `${width}px`\n      },\n      className: classes[\"input-slider\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: 0,\n      max: 1000,\n      value: Dist,\n      step: 1,\n      onChange: event => setDist(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }\n    }, Dist, \" Minutes\"));\n  };\n\n  const [mapbox, setmapbox] = useState({\n    lng: 10,\n    lat: 0,\n    zoom: 2.5,\n    button: \"Map\"\n  });\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (!map) {\n      const popUp = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',\n        /// Select mapstyle from mapbox studio\n        center: [mapbox.lng, mapbox.lat],\n        zoom: mapbox.zoom,\n        attributionControl: false\n      });\n      map.on('load', () => {\n        setMap(map);\n        map.addSource('node-237nu4', {\n          type: 'vector',\n          url: 'mapbox://mkmd.1ya649n5'\n        });\n        map.addSource('edge-dm0qvz', {\n          type: 'vector',\n          url: 'mapbox://mkmd.1rxtvzvy'\n        });\n        map.addLayer({\n          id: 'edge',\n          source: 'edge-dm0qvz',\n          type: \"line\",\n          'source-layer': 'edge-dm0qvz',\n          // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\n          paint: {\n            \"line-color\": [\"match\", [\"get\", \"border\"], [\"0\"], colors[0], \"red\"]\n          }\n        });\n        map.addLayer({\n          id: 'node',\n          source: 'node-237nu4',\n          type: \"circle\",\n          'source-layer': 'node-237nu4',\n          // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\n          paint: {\n            \"circle-radius\": [\"step\", [\"get\", `Between`], 2.5, 10000000, 3, 30000000, 4, 100000000, 6, 300000000, 8, 1000000000, 10, 2000000000, 13, 118476350000, 15],\n            \"circle-color\": [\"step\", [\"get\", `Pop2015`], colors[0], 10000, colors[1], 30000, colors[2], 100000, colors[3], 300000, colors[4], 1000000, colors[5], 2000000, colors[6], 11847635, colors[7]],\n            \"circle-stroke-width\": 1,\n            \"circle-stroke-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 3, 0, 15, 1],\n            \"circle-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 0, 3, 0.4, 10, 1] // [\n            //   \"case\",\n            //   [\"boolean\", [\"feature-state\", \"hover\"], false],\n            //   1,\n            //   0.7,\n            // ],\n\n          }\n        });\n        map.on('mousemove', 'node', e => {\n          let coordinates = [e.lngLat.lng, e.lngLat.lat];\n          popUp.setLngLat(coordinates).setHTML(`<bold>Between:${e.features[0].properties.Between}</bold><br/>\n      ${e.features[0].properties.agglosName}<br/>\n      <strong>${e.features[0].properties.Pop2015}</strong><br/><bold>${e.features[0].properties.ISO3}</bold><br/>\n      <small>Degree: ${e.features[0].properties.degree}</small>`).addTo(map);\n          var popupElem = popUp.getElement();\n          popupElem.style.color = colors[0];\n        });\n        map.on('mouseleave', 'node', e => {\n          map.getCanvas().style.cursor = '';\n          popUp.remove();\n        });\n        map.on('mousemove', 'edge', e => {\n          let coordinates = [e.lngLat.lng, e.lngLat.lat];\n          popUp.setLngLat(coordinates).setHTML(`<bold>Time: ${Math.round(e.features[0].properties.time)}min</bold><br/>\n      <bold>Time Ur :${Math.round(e.features[0].properties.timeU)}min</bold><br/>\n      <bold>Time Ur&CB${Math.round(e.features[0].properties.value)}min</bold><br/>\n      `).addTo(map);\n          var popupElem = popUp.getElement();\n          popupElem.style.color = colors[0];\n        }); // map.on('mouseleave', 'edge', e =>  {\n        //   map.getCanvas().style.cursor = ''\n        //   popUp.remove()\n        // });\n      });\n    }\n  }, [map]); /////////////////////////////////////////// Network part\n  // africa.nodes.map(e => {\n  //   e.x = e.x\n  //   e.y = e.y\n  // })\n\n  africa.nodes.map(e => {\n    e.visibility = \"true\";\n\n    if (e.size === 0.1) {\n      e.visibility = \"false\";\n    }\n  });\n  africa.links.map(e => e.border === 1 ? e.color = \"rgb(255,255,255,.3)\" : e.color = e.source.color); // africa.links.map(e => e.time = Math.round(e.time))\n  // africa.links.map(e => e.border==1? e.value=e.value+1000 : null)\n  // africa.links.map(e => e.value=e.value*Math.random())\n  // console.log(africa)\n\n  const fgRef = useRef();\n  const nodes = africa.nodes;\n  const links = africa.links;\n  const [graphData, setGraphData] = useState({\n    nodes: nodes,\n    links: links\n  });\n  useEffect(() => {\n    if (Dist === 0 | Dist === 60 | Dist === 300 | Dist === 1000 && mapnetwork === \"Network\") {\n      const fg = fgRef.current;\n      fg.d3Force('link').distance(link => link.border === 1 ? link.time + Dist : link.time).iterations(200);\n      fg.zoom(0.025703429015691344);\n      fg.centerAt(496, 2656); // fg.d3Force('box', () => {\n      //   nodes.forEach(node => {    \n      //     node.x=node.reX*500\n      //     node.y=node.reY*500\n      //     node.vx=3\n      //     node.vy=3\n      //     // const x = node.x || 0, y = node.y || 0;\n      //     // // bounce on box walls\n      //     // if (Math.abs(x) > SQUARE_HALF_SIDE) { node.vx *= -1; }\n      //     // if (Math.abs(y) > SQUARE_HALF_SIDE) { node.vy *= -1; }\n      //   });\n      // });\n    }\n  }, [Dist]); /////////////////////////////////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.topleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headwrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 39\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonwrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: mapnetwork === \"Map\" ? classes.buttonActive : classes.button,\n    onClick: () => mapnetwork === \"Network\" ? setmapnetwork(\"Map\") : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, \"Map\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: mapnetwork === \"Network\" ? classes.buttonActive : classes.button,\n    onClick: () => mapnetwork === \"Map\" ? setmapnetwork(\"Network\") : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, \"Network\")), /*#__PURE__*/React.createElement(\"headtitle\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, \"Cities and roads in Africa\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 60\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }, \"Set the border cost\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: Dist === 0 ? classes.buttonActivedist : classes.buttondist,\n    onClick: () => mapnetwork === \"Network\" ? setDist(0) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }\n  }, \"0min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: Dist === 60 ? classes.buttonActivedist : classes.buttondist,\n    onClick: () => mapnetwork === \"Network\" ? setDist(60) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }, \"60min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: Dist === 300 ? classes.buttonActivedist : classes.buttondist,\n    onClick: () => mapnetwork === \"Network\" ? setDist(300) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, \"300min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: Dist === 1000 ? classes.buttonActivedist : classes.buttondist,\n    onClick: () => mapnetwork === \"Network\" ? setDist(1000) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, \"1000min\"), /*#__PURE__*/React.createElement(TimeSlider, {\n    Dist: Dist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"VariableInfoWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialIcon, {\n    icon: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, \"How it is calculated?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 59\n    }\n  }), \"The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 157\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 162\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"Methodology\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 43\n    }\n  }), \"We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 614\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 619\n    }\n  }), \"The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"color\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 23\n    }\n  }, \"Click the right button to check more detail and download the data on the Facebook page\"), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialIcon, {\n    icon: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"Move to the Facebook Data for Good page to check detail and download the data\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapContainerRef,\n    className: classes.mapContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  })), Dist === 0 ? mapnetwork === \"Map\" ? null : /*#__PURE__*/React.createElement(ForceGraph2D, {\n    ref: fgRef,\n    backgroundColor: \"black\",\n    graphData: graphData,\n    nodeId: \"id\",\n    nodeVal: \"size3\",\n    nodeLabel: \"nameG\",\n    nodeAutoColorBy: \"group\",\n    linkSource: \"source\",\n    linkTarget: \"target\",\n    linkColor: \"color\",\n    cooldownTime: 10000,\n    nodeVisibility: e => e.size > 0.2,\n    linkLabel: e => Math.round(e.border === 1 ? e.time + Dist : e.time) + \"min\" // onRenderFramePre={(e) => console.log(e)}\n    // onRenderFramePost={(e) => console.log(e)}\n    // d3AlphaDecay={0}\n    // d3VelocityDecay={0}    \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 44\n    }\n  }) : null, Dist === 60 ? mapnetwork === \"Map\" ? null : /*#__PURE__*/React.createElement(ForceGraph2D, {\n    ref: fgRef,\n    backgroundColor: \"black\",\n    graphData: graphData,\n    nodeId: \"id\",\n    nodeVal: \"size3\",\n    nodeLabel: \"nameG\",\n    nodeAutoColorBy: \"group\",\n    linkSource: \"source\",\n    linkTarget: \"target\",\n    linkColor: \"color\",\n    cooldownTime: 10000,\n    nodeVisibility: e => e.size > 0.2,\n    linkLabel: e => Math.round(e.border === 1 ? e.time + Dist : e.time) + \"min\" // onRenderFramePre={(e) => console.log(e)}\n    // onRenderFramePost={(e) => console.log(e)}\n    // d3AlphaDecay={0}\n    // d3VelocityDecay={0}    \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 45\n    }\n  }) : null, Dist === 300 ? mapnetwork === \"Map\" ? null : /*#__PURE__*/React.createElement(ForceGraph2D, {\n    ref: fgRef,\n    backgroundColor: \"black\",\n    graphData: graphData,\n    nodeId: \"id\",\n    nodeVal: \"size3\",\n    nodeLabel: \"nameG\",\n    nodeAutoColorBy: \"group\",\n    linkSource: \"source\",\n    linkTarget: \"target\",\n    linkColor: \"color\",\n    cooldownTime: 10000,\n    nodeVisibility: e => e.size > 0.2,\n    linkLabel: e => Math.round(e.border === 1 ? e.time + Dist : e.time) + \"min\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 46\n    }\n  }) : null, Dist === 1000 ? mapnetwork === \"Map\" ? null : /*#__PURE__*/React.createElement(ForceGraph2D, {\n    ref: fgRef,\n    backgroundColor: \"black\",\n    graphData: graphData,\n    nodeId: \"id\",\n    nodeVal: \"size3\",\n    nodeLabel: \"nameG\",\n    nodeAutoColorBy: \"group\",\n    linkSource: \"source\",\n    linkTarget: \"target\",\n    linkColor: \"color\",\n    nodeVisibility: e => e.size > 0.2,\n    linkLabel: e => Math.round(e.border === 1 ? e.time + Dist : e.time) + \"min\",\n    cooldownTime: 10000 // linkCurvature={0.1}\n    ,\n    d3AlphaDecay: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 47\n    }\n  }) : null);\n};\n\nexport default Network;","map":{"version":3,"sources":["C:/networkproj/src/network.js"],"names":["React","useState","useEffect","useRef","ReactDOM","mapboxgl","africa","classes","logo","MaterialIcon","ForceGraph2D","Network","props","accessToken","colors","Dist","setDist","mapnetwork","setmapnetwork","tooltip","e","payload","time","TimeSlider","width","event","target","value","mapbox","setmapbox","lng","lat","zoom","button","mapContainerRef","map","setMap","popUp","Popup","closeButton","closeOnClick","Map","container","current","style","center","attributionControl","on","addSource","type","url","addLayer","id","source","paint","coordinates","lngLat","setLngLat","setHTML","features","properties","Between","agglosName","Pop2015","ISO3","degree","addTo","popupElem","getElement","color","getCanvas","cursor","remove","Math","round","timeU","nodes","visibility","size","links","border","fgRef","graphData","setGraphData","fg","d3Force","distance","link","iterations","centerAt","topleft","headwrapper","buttonwrapper","buttonActive","buttonActivedist","buttondist","table","mapContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport africa from './africa.json';\r\nimport classes from './Site.module.css';\r\nimport './index.css';\r\nimport logo from './OECD_white_EN.png';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport { ForceGraph2D } from 'react-force-graph';\r\n// import * as ForceGraph2D from 'react-force-graph-2d';\r\n// import * as d3 from 'd3';\r\n// import * as d3Force from 'd3-force';\r\n\r\n\r\nconst Network = props => {\r\n  mapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n  const colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\n  const [Dist, setDist] = useState(1000)  \r\n  const [mapnetwork, setmapnetwork] = useState(\"Network\")  \r\n  \r\n  const tooltip = e => {\r\n    if (e.payload[0]) {\r\n    return ( <div className={classes.tooltip}> {e.payload[0].payload.time} <br/>SCI {e.payload[0].payload.time}x</div> ) }\r\n  }\r\n  \r\n  // useEffect(() => {},[]); \r\n    \r\n  const TimeSlider = ({ Dist, width }) => {\r\n    return (    \r\n      <div style={{ width: `${width}px` }} className={classes[\"input-slider\"]}>\r\n        <input type=\"range\"\r\n          min={0}\r\n          max={1000}\r\n          value={Dist}\r\n          step={1}\r\n          onChange={event =>\r\n             setDist(event.target.value)\r\n            }\r\n        />\r\n        {<span>{Dist} Minutes</span>}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n const [mapbox, setmapbox] = useState( {lng: 10,\r\n    lat: 0,\r\n    zoom: 2.5,\r\n    button: \"Map\"} );\r\n\r\nconst mapContainerRef = useRef(null);\r\n\r\nconst [map, setMap] = useState(null);\r\n\r\n\r\nuseEffect(() => { \r\n  \r\n  if (!map) {\r\n  const popUp = new mapboxgl.Popup({\r\n      closeButton: false,\r\n      closeOnClick: false\r\n  });\r\n\r\n  const map = new mapboxgl.Map({\r\n  container: mapContainerRef.current,\r\n  style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n  center: [mapbox.lng, mapbox.lat],\r\n  zoom: mapbox.zoom,\r\n  attributionControl: false\r\n});\r\n  \r\n\r\nmap.on('load', () => {\r\n  setMap(map);\r\n  map.addSource('node-237nu4', { type: 'vector', url: 'mapbox://mkmd.1ya649n5'});\r\n  map.addSource('edge-dm0qvz', { type: 'vector', url: 'mapbox://mkmd.1rxtvzvy'});\r\n  map.addLayer({\r\n    id: 'edge',\r\n    source:'edge-dm0qvz',\r\n    type : \"line\",\r\n    'source-layer':'edge-dm0qvz',\r\n    // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\r\n    paint: {\r\n      \"line-color\" : [\"match\", [\"get\",\"border\"],\r\n       [\"0\"],colors[0],\r\n       \"red\"\r\n    ]\r\n    },\r\n  })\r\n  \r\n  map.addLayer({\r\n    id: 'node',\r\n    source:'node-237nu4',\r\n    type : \"circle\",\r\n    'source-layer':'node-237nu4',\r\n    // filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\r\n    paint: {\r\n      \"circle-radius\":  [\r\n        \"step\",\r\n        [\"get\", `Between`],\r\n        2.5,\r\n        10000000,\r\n        3,\r\n        30000000,\r\n        4,\r\n        100000000,\r\n        6,\r\n        300000000,\r\n        8,\r\n        1000000000,\r\n        10,\r\n        2000000000,\r\n        13,\r\n        118476350000,\r\n        15,\r\n      ]\r\n      ,\r\n      \"circle-color\": [\r\n        \"step\",\r\n        [\"get\", `Pop2015`],\r\n        colors[0],\r\n        10000,\r\n        colors[1],\r\n        30000,\r\n        colors[2],\r\n        100000,\r\n        colors[3],\r\n        300000,\r\n        colors[4],\r\n        1000000,\r\n        colors[5],\r\n        2000000,\r\n        colors[6],\r\n        11847635,\r\n        colors[7],\r\n      ],\r\n  \r\n      \"circle-stroke-width\": 1,\r\n      \"circle-stroke-opacity\": [\r\n        \"interpolate\",\r\n        [\"linear\"],\r\n        [\"zoom\"],\r\n        0,\r\n        0,\r\n        3,\r\n        0,\r\n        15,\r\n        1,\r\n      ],\r\n      \"circle-opacity\": [\r\n        \"interpolate\",\r\n        [\"linear\"],\r\n        [\"zoom\"],\r\n        0,\r\n        0,\r\n        3,\r\n        0.4,\r\n        10,\r\n        1\r\n      ]\r\n  \r\n      \r\n      // [\r\n      //   \"case\",\r\n      //   [\"boolean\", [\"feature-state\", \"hover\"], false],\r\n      //   1,\r\n      //   0.7,\r\n      // ],\r\n    },\r\n  });\r\n  map.on('mousemove', 'node', e =>  {\r\n    let coordinates = [e.lngLat.lng, e.lngLat.lat];\r\n    popUp\r\n      .setLngLat(coordinates)\r\n      .setHTML(\r\n      `<bold>Between:${e.features[0].properties.Between}</bold><br/>\r\n      ${e.features[0].properties.agglosName}<br/>\r\n      <strong>${e.features[0].properties.Pop2015}</strong><br/><bold>${e.features[0].properties.ISO3}</bold><br/>\r\n      <small>Degree: ${e.features[0].properties.degree}</small>`\r\n      )\r\n      .addTo(map);\r\n      var popupElem = popUp.getElement();\r\n      popupElem.style.color = colors[0];\r\n  });\r\n\r\n  map.on('mouseleave', 'node', e =>  {\r\n    map.getCanvas().style.cursor = ''\r\n    popUp.remove()\r\n  });\r\n  \r\n  \r\n  map.on('mousemove', 'edge', e =>  {\r\n    let coordinates = [e.lngLat.lng, e.lngLat.lat];\r\n    popUp\r\n      .setLngLat(coordinates)\r\n      .setHTML(        \r\n      `<bold>Time: ${Math.round(e.features[0].properties.time)}min</bold><br/>\r\n      <bold>Time Ur :${Math.round(e.features[0].properties.timeU)}min</bold><br/>\r\n      <bold>Time Ur&CB${Math.round(e.features[0].properties.value)}min</bold><br/>\r\n      `\r\n      )\r\n      .addTo(map);\r\n      var popupElem = popUp.getElement();\r\n      popupElem.style.color = colors[0];\r\n  });\r\n\r\n  // map.on('mouseleave', 'edge', e =>  {\r\n  //   map.getCanvas().style.cursor = ''\r\n  //   popUp.remove()\r\n  // });\r\n\r\n\r\n  });\r\n}},[map]);\r\n\r\n\r\n/////////////////////////////////////////// Network part\r\n\r\n\r\n// africa.nodes.map(e => {\r\n//   e.x = e.x\r\n//   e.y = e.y\r\n// })\r\n\r\nafrica.nodes.map(e => {\r\n  e.visibility=\"true\"  \r\n  if (e.size===0.1)\r\n  {\r\n    e.visibility=\"false\"\r\n  }\r\n  })\r\n  \r\n\r\nafrica.links.map(e => e.border===1? e.color=\"rgb(255,255,255,.3)\" : e.color=e.source.color)\r\n// africa.links.map(e => e.time = Math.round(e.time))\r\n// africa.links.map(e => e.border==1? e.value=e.value+1000 : null)\r\n// africa.links.map(e => e.value=e.value*Math.random())\r\n// console.log(africa)\r\n\r\nconst fgRef = useRef();\r\nconst nodes = africa.nodes\r\nconst links = africa.links\r\n\r\nconst [graphData, setGraphData] = useState({ nodes: nodes, links: links });\r\n\r\nuseEffect(() => {\r\n  \r\nif ((Dist === 0 | Dist === 60 | Dist === 300 | Dist === 1000) && mapnetwork === \"Network\")\r\n{\r\nconst fg = fgRef.current;\r\nfg.d3Force('link').distance(link => link.border===1? link.time+Dist : link.time).iterations(200);\r\nfg.zoom(0.025703429015691344)\r\nfg.centerAt(496,2656)\r\n\r\n// fg.d3Force('box', () => {\r\n//   nodes.forEach(node => {    \r\n//     node.x=node.reX*500\r\n//     node.y=node.reY*500\r\n//     node.vx=3\r\n//     node.vy=3\r\n//     // const x = node.x || 0, y = node.y || 0;\r\n\r\n//     // // bounce on box walls\r\n//     // if (Math.abs(x) > SQUARE_HALF_SIDE) { node.vx *= -1; }\r\n//     // if (Math.abs(y) > SQUARE_HALF_SIDE) { node.vy *= -1; }\r\n//   });\r\n// });\r\n\r\n}}, [Dist]);\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className={classes.topleft}> <div className={classes.headwrapper}> <div className={classes.buttonwrapper}>          \r\n    <button className={mapnetwork===\"Map\"? classes.buttonActive : classes.button} onClick={() => mapnetwork===\"Network\"? setmapnetwork(\"Map\") : null}>{\"Map\"}</button>\r\n    <button className={mapnetwork===\"Network\"? classes.buttonActive : classes.button} onClick={() => mapnetwork===\"Map\"? setmapnetwork(\"Network\") : null}>{\"Network\"}</button></div>\r\n    <headtitle>Cities and roads in Africa</headtitle></div><br/>\r\n    <span>Set the border cost</span><br/>\r\n    <button className={Dist===0? classes.buttonActivedist : classes.buttondist} onClick={() => mapnetwork===\"Network\"? setDist(0) : null}>{\"0min\"}</button>\r\n    <button className={Dist===60? classes.buttonActivedist : classes.buttondist} onClick={() => mapnetwork===\"Network\"? setDist(60) : null}>{\"60min\"}</button>\r\n    <button className={Dist===300? classes.buttonActivedist : classes.buttondist} onClick={() => mapnetwork===\"Network\"? setDist(300) : null}>{\"300min\"}</button>\r\n    <button className={Dist===1000? classes.buttonActivedist : classes.buttondist} onClick={() => mapnetwork===\"Network\"? setDist(1000) : null}>{\"1000min\"}</button>    \r\n    <TimeSlider Dist={Dist}/>\r\n    <table className={classes.table}>\r\n        <thead>\r\n          <tr>\r\n            {/* <th>Country</th><th>Road</th><th>Network</th> */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          \r\n        </tbody>\r\n      </table>\r\n    {/* <br/> <span>Regional average</span> */}\r\n          <div className=\"VariableInfoWrapper\">\r\n              <MaterialIcon icon=\"info\"/>\r\n              <span><strong>How it is calculated?</strong><br/>\r\n              The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.<br/><br/>\r\n              <strong>Methodology</strong><br/>\r\n              We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.<br/><br/>\r\n            The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\r\n            <br/><br/><color>Click the right button to check more detail and download the data on the Facebook page</color> </span>\r\n          </div>\r\n          <div className=\"FB\">\r\n          <a href=\"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\">\r\n              <MaterialIcon icon=\"facebook\"/>\r\n              <span>Move to the Facebook Data for Good page to check detail and download the data</span>\r\n          </a>\r\n          </div>\r\n       </div>\r\n       <div><div ref={mapContainerRef} className={classes.mapContainer} /></div>\r\n    \r\n    {Dist===0? mapnetwork===\"Map\"? null :  < ForceGraph2D    \r\n    ref={fgRef}\r\n    backgroundColor=\"black\"    \r\n    graphData={graphData}\r\n    nodeId=\"id\"\r\n    nodeVal=\"size3\"\r\n    nodeLabel=\"nameG\"\r\n    nodeAutoColorBy=\"group\"\r\n    linkSource=\"source\"\r\n    linkTarget=\"target\"\r\n    linkColor=\"color\"\r\n    cooldownTime={10000}  \r\n    nodeVisibility={e => e.size>0.2}\r\n    linkLabel={e => Math.round(e.border===1? e.time+Dist : e.time)+\"min\"}\r\n    // onRenderFramePre={(e) => console.log(e)}\r\n    // onRenderFramePost={(e) => console.log(e)}\r\n    // d3AlphaDecay={0}\r\n    // d3VelocityDecay={0}    \r\n    /> : null}    \r\n    {Dist===60? mapnetwork===\"Map\"? null :  < ForceGraph2D    \r\n    ref={fgRef}\r\n    backgroundColor=\"black\"    \r\n    graphData={graphData}\r\n    nodeId=\"id\"\r\n    nodeVal=\"size3\"\r\n    nodeLabel=\"nameG\"\r\n    nodeAutoColorBy=\"group\"\r\n    linkSource=\"source\"\r\n    linkTarget=\"target\"\r\n    linkColor=\"color\"\r\n    cooldownTime={10000}  \r\n    nodeVisibility={e => e.size>0.2}\r\n    linkLabel={e => Math.round(e.border===1? e.time+Dist : e.time)+\"min\"}\r\n    // onRenderFramePre={(e) => console.log(e)}\r\n    // onRenderFramePost={(e) => console.log(e)}\r\n    // d3AlphaDecay={0}\r\n    // d3VelocityDecay={0}    \r\n    /> : null}\r\n    {Dist===300? mapnetwork===\"Map\"? null :  < ForceGraph2D    \r\n    ref={fgRef}\r\n    backgroundColor=\"black\"    \r\n    graphData={graphData}\r\n    nodeId=\"id\"\r\n    nodeVal=\"size3\"\r\n    nodeLabel=\"nameG\"\r\n    nodeAutoColorBy=\"group\"\r\n    linkSource=\"source\"\r\n    linkTarget=\"target\"\r\n    linkColor=\"color\"\r\n    cooldownTime={10000}      \r\n    nodeVisibility={e => e.size>0.2}\r\n    linkLabel={e => Math.round(e.border===1? e.time+Dist : e.time)+\"min\"}\r\n    /> : null}          \r\n    {Dist===1000? mapnetwork===\"Map\"? null :  < ForceGraph2D    \r\n    ref={fgRef}\r\n    backgroundColor=\"black\"    \r\n    graphData={graphData}\r\n    nodeId=\"id\"\r\n    nodeVal=\"size3\"\r\n    nodeLabel=\"nameG\"    \r\n    nodeAutoColorBy=\"group\"\r\n    linkSource=\"source\"\r\n    linkTarget=\"target\"\r\n    linkColor=\"color\"\r\n    nodeVisibility={e => e.size>0.2}\r\n    linkLabel={e => Math.round(e.border===1? e.time+Dist : e.time)+\"min\"}\r\n    cooldownTime={10000}      \r\n    // linkCurvature={0.1}\r\n    d3AlphaDecay={0}    \r\n    /> : null}          \r\n  </div>      \r\n);\r\n  \r\n};\r\n\r\nexport default Network;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}