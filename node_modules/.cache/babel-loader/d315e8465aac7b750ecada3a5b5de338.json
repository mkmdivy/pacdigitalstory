{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport papa from 'papaparse';\nimport csv2geojson from 'csv2geojson';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    }); /////// ******Add Africapolis\n\n    map.on('load', function () {\n      // Add a circle layer with a vector source.\n      map.addSource('africapolis_agglos', {\n        type: 'vector',\n        url: 'mapbox://mkmd.ck8sq8x9q29kt2ypjy1vfahkd-9ew4y'\n      });\n      map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis_2020',\n        paint: {\n          'circle-color': [\"interpolate\", [\"linear\"], [\"zoom\"], 0, [\"step\", [\"get\", \"population_2015\"], \"hsla(0, 0%, 8%, 0)\", 10000, \"hsla(55, 30%, 93%, 0.8)\", 30000, \"hsla(60, 100%, 90%, 0.8)\", 100000, \"hsla(98, 55%, 81%, 0.8)\", 300000, \"hsla(166, 44%, 65%, 0.8)\", 1000000, \"hsla(186, 53%, 51%, 0.8)\", 2000000, \"hsla(197, 74%, 43%, 0.8)\", 11847635, \"hsla(197, 74%, 43%, 0.8)\"], 22, [\"step\", [\"get\", \"population_2015\"], \"hsla(0, 0%, 8%, 0)\", 10000, \"hsla(60, 100%, 90%, 0.4)\", 30000, \"hsla(98, 55%, 81%, 0.4)\", 100000, \"hsla(166, 44%, 65%, 0.4)\", 300000, \"hsla(186, 53%, 51%, 0.4)\", 1000000, \"hsla(197, 74%, 43%, 0.4)\", 2000000, \"hsla(213, 66%, 40%, 0.4)\", 11847635, \"hsla(213, 66%, 40%, 0.4)\"]] // Mapbox Style Specification paint properties\n\n        },\n        layout: {// Mapbox Style Specification layout properties\n        }\n      });\n    }); //     //axios.get('chad.json').then(response=>{console.log(response.data.Agglomerations[0].Longlat)})\n    //     //mkmd.ck5qy6ole1xja2npflwvfk78l-2j015\n    //       async function makeGetRequest() {\n    //       let covid = await axios.get('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')\n    //       //console.log(covid.data)\n    //       let covid_name=papa.parse(covid.data,{header:true,skipEmptyLines:true}).data[\"0\"];\n    //       let covid_latest=Object.keys(covid_name)[Object.keys(covid_name).length-1]\n    //       csv2geojson.csv2geojson(covid.data,{\n    //     latfield: 'Lat',\n    //     lonfield: 'Long',\n    //     delimiter: ',',\n    //     numericFields:covid_latest\n    // },\n    // function(err,data){\n    //   //let covid_latest=Object.keys(data.features[0].properties)[Object.keys(data.features[0].properties).length-1]\n    //       let covid_array=data\n    //       console.log(covid_array)\n    //     map.on('load', function() {\n    //       map.addSource('covid', {\n    //         type: 'geojson',\n    //         data: covid_array\n    //       });\n    //       map.addLayer({\n    //       'id': 'covid',\n    //       'type': 'circle',\n    //       'source': 'covid',\n    //       filter: ['in', 'Country/Region',\"Algeria\",\"Angola\",\"Benin\",\"Botswana\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cameroon\",\"Central African Republic\",\"Chad\",\"Cote d'Ivoire\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Djibouti\",\"Egypt\",\"Equatorial Guinea\",\"Ethiopia\",\"Gabon\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Kenya\",\"Liberia\",\"Libya\",\"Madagascar\",\"Malawi\",\"Mali\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Niger\",\"Nigeria\",\"Rwanda\",\"Sao Tome and Principe\",\"Senegal\",\"Sierra Leone\",\"Somalia\",\"South Africa\",\"South Sudan\",\"Sudan\",\"Eswatini\",\"Tanzania\",\"Togo\",\"Tunisia\",\"Uganda\",\"Western Sahara\",\"Zambia\",\"Zimbabwe\"],\n    //       'paint': {\n    //         'circle-color': [\n    //       'step',\n    //       ['get', covid_latest],\n    //       '#51bbd6',\n    //       30,\n    //       '#f1f075',\n    //       100,\n    //       '#f28cb1'\n    //       ],\n    //         'circle-radius': [\n    //       'step',\n    //       ['get', covid_latest],\n    //       20,\n    //       100,\n    //       30,\n    //       750,\n    //       40\n    //       ]\n    //       }\n    //       });\n    //\n    //       map.addLayer({\n    //       id: 'covid-count',\n    //       type: 'symbol',\n    //       source: 'covid',\n    //       filter: ['in', 'Country/Region',\"Algeria\",\"Angola\",\"Benin\",\"Botswana\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cameroon\",\"Central African Republic\",\"Chad\",\"Cote d'Ivoire\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Djibouti\",\"Egypt\",\"Equatorial Guinea\",\"Ethiopia\",\"Gabon\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Kenya\",\"Liberia\",\"Libya\",\"Madagascar\",\"Malawi\",\"Mali\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Niger\",\"Nigeria\",\"Rwanda\",\"Sao Tome and Principe\",\"Senegal\",\"Sierra Leone\",\"Somalia\",\"South Africa\",\"South Sudan\",\"Sudan\",\"Eswatini\",\"Tanzania\",\"Togo\",\"Tunisia\",\"Uganda\",\"Western Sahara\",\"Zambia\",\"Zimbabwe\"],\n    //       layout: {\n    //       'text-field': \"{\"+covid_latest+\"}\",\n    //       'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    //       'text-size': 12\n    //       }\n    //       });\n    //         //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\n    //       });\n    //     });\n    //\n    //       //let covid_array= papa.parse(covid.data,{header:true,skipEmptyLines:true}).data;\n    //       //var x;\n    //       //for (x in [3,5,25,32,33,35,47,48,84,85,87,96,99,101,104,105,118,119,122,125,143,149,153,157,164,165,173,174,189,194,200,201,204,209,211,213,215,230,231,235,241,243,244,254,255,256,258,261,262,263]){new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map)\n    //         //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\n    //       //}\n    //\n    //\n    //       //let res = await axios.get(country+'.json');\n    //       //console.log(res.data.Agglomerations);\n    //       //let data = res.data.Agglomerations[select].Longlat;\n    //\n    //       //new mapboxgl.Marker().setLngLat(data).addTo(map);\n    //       //marker.setLngLat(data)\n    //       //marker.addTo(map);\n    //     }\n    //\n    //   makeGetRequest()\n    //     //let agglos = axios.get('egypt.json');\n    //     //console.log(agglos)\n    //     //let data = agglos.data.Agglomerations[0].Longlat;\n    //     //var marker = new mapboxgl.Marker();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","papa","csv2geojson","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","addSource","type","url","addLayer","id","source","paint","layout","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport papa from 'papaparse';\r\nimport csv2geojson from 'csv2geojson'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n\r\n    map.on('move', () => {\r\n    this.setState({\r\n    lng: map.getCenter().lng.toFixed(4),\r\n    lat: map.getCenter().lat.toFixed(4),\r\n    zoom: map.getZoom().toFixed(2)\r\n    });\r\n    });\r\n\r\n\r\n    /////// ******Add Africapolis\r\n    map.on('load', function() {\r\n      // Add a circle layer with a vector source.\r\n      map.addSource(\r\n        'africapolis_agglos',\r\n      {\r\n        type: 'vector',\r\n        url: 'mapbox://mkmd.ck8sq8x9q29kt2ypjy1vfahkd-9ew4y'\r\n      }\r\n\r\n    );\r\n\r\n      map.addLayer({\r\n        id: 'agglomerations',\r\n        source:'africapolis_agglos',\r\n        type: 'circle',\r\n        'source-layer':'africapolis_2020',\r\n        paint: {\r\n  'circle-color':        [\r\n  \"interpolate\",\r\n  [\"linear\"],\r\n  [\"zoom\"],\r\n  0,\r\n  [\r\n    \"step\",\r\n    [\"get\", \"population_2015\"],\r\n    \"hsla(0, 0%, 8%, 0)\",\r\n    10000,\r\n    \"hsla(55, 30%, 93%, 0.8)\",\r\n    30000,\r\n    \"hsla(60, 100%, 90%, 0.8)\",\r\n    100000,\r\n    \"hsla(98, 55%, 81%, 0.8)\",\r\n    300000,\r\n    \"hsla(166, 44%, 65%, 0.8)\",\r\n    1000000,\r\n    \"hsla(186, 53%, 51%, 0.8)\",\r\n    2000000,\r\n    \"hsla(197, 74%, 43%, 0.8)\",\r\n    11847635,\r\n    \"hsla(197, 74%, 43%, 0.8)\"\r\n  ],\r\n  22,\r\n  [\r\n    \"step\",\r\n    [\"get\", \"population_2015\"],\r\n    \"hsla(0, 0%, 8%, 0)\",\r\n    10000,\r\n    \"hsla(60, 100%, 90%, 0.4)\",\r\n    30000,\r\n    \"hsla(98, 55%, 81%, 0.4)\",\r\n    100000,\r\n    \"hsla(166, 44%, 65%, 0.4)\",\r\n    300000,\r\n    \"hsla(186, 53%, 51%, 0.4)\",\r\n    1000000,\r\n    \"hsla(197, 74%, 43%, 0.4)\",\r\n    2000000,\r\n    \"hsla(213, 66%, 40%, 0.4)\",\r\n    11847635,\r\n    \"hsla(213, 66%, 40%, 0.4)\"\r\n  ]\r\n]\r\n          // Mapbox Style Specification paint properties\r\n        },\r\n        layout: {\r\n          // Mapbox Style Specification layout properties\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n//     //axios.get('chad.json').then(response=>{console.log(response.data.Agglomerations[0].Longlat)})\r\n//     //mkmd.ck5qy6ole1xja2npflwvfk78l-2j015\r\n//       async function makeGetRequest() {\r\n//       let covid = await axios.get('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')\r\n//       //console.log(covid.data)\r\n//       let covid_name=papa.parse(covid.data,{header:true,skipEmptyLines:true}).data[\"0\"];\r\n//       let covid_latest=Object.keys(covid_name)[Object.keys(covid_name).length-1]\r\n//       csv2geojson.csv2geojson(covid.data,{\r\n//     latfield: 'Lat',\r\n//     lonfield: 'Long',\r\n//     delimiter: ',',\r\n//     numericFields:covid_latest\r\n// },\r\n// function(err,data){\r\n//   //let covid_latest=Object.keys(data.features[0].properties)[Object.keys(data.features[0].properties).length-1]\r\n//       let covid_array=data\r\n//       console.log(covid_array)\r\n//     map.on('load', function() {\r\n//       map.addSource('covid', {\r\n//         type: 'geojson',\r\n//         data: covid_array\r\n//       });\r\n//       map.addLayer({\r\n//       'id': 'covid',\r\n//       'type': 'circle',\r\n//       'source': 'covid',\r\n//       filter: ['in', 'Country/Region',\"Algeria\",\"Angola\",\"Benin\",\"Botswana\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cameroon\",\"Central African Republic\",\"Chad\",\"Cote d'Ivoire\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Djibouti\",\"Egypt\",\"Equatorial Guinea\",\"Ethiopia\",\"Gabon\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Kenya\",\"Liberia\",\"Libya\",\"Madagascar\",\"Malawi\",\"Mali\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Niger\",\"Nigeria\",\"Rwanda\",\"Sao Tome and Principe\",\"Senegal\",\"Sierra Leone\",\"Somalia\",\"South Africa\",\"South Sudan\",\"Sudan\",\"Eswatini\",\"Tanzania\",\"Togo\",\"Tunisia\",\"Uganda\",\"Western Sahara\",\"Zambia\",\"Zimbabwe\"],\r\n//       'paint': {\r\n//         'circle-color': [\r\n//       'step',\r\n//       ['get', covid_latest],\r\n//       '#51bbd6',\r\n//       30,\r\n//       '#f1f075',\r\n//       100,\r\n//       '#f28cb1'\r\n//       ],\r\n//         'circle-radius': [\r\n//       'step',\r\n//       ['get', covid_latest],\r\n//       20,\r\n//       100,\r\n//       30,\r\n//       750,\r\n//       40\r\n//       ]\r\n//       }\r\n//       });\r\n//\r\n//       map.addLayer({\r\n//       id: 'covid-count',\r\n//       type: 'symbol',\r\n//       source: 'covid',\r\n//       filter: ['in', 'Country/Region',\"Algeria\",\"Angola\",\"Benin\",\"Botswana\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cameroon\",\"Central African Republic\",\"Chad\",\"Cote d'Ivoire\",\"Congo (Brazzaville)\",\"Congo (Kinshasa)\",\"Djibouti\",\"Egypt\",\"Equatorial Guinea\",\"Ethiopia\",\"Gabon\",\"Gambia\",\"Ghana\",\"Guinea\",\"Guinea-Bissau\",\"Kenya\",\"Liberia\",\"Libya\",\"Madagascar\",\"Malawi\",\"Mali\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Niger\",\"Nigeria\",\"Rwanda\",\"Sao Tome and Principe\",\"Senegal\",\"Sierra Leone\",\"Somalia\",\"South Africa\",\"South Sudan\",\"Sudan\",\"Eswatini\",\"Tanzania\",\"Togo\",\"Tunisia\",\"Uganda\",\"Western Sahara\",\"Zambia\",\"Zimbabwe\"],\r\n//       layout: {\r\n//       'text-field': \"{\"+covid_latest+\"}\",\r\n//       'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n//       'text-size': 12\r\n//       }\r\n//       });\r\n//         //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\r\n//       });\r\n//     });\r\n//\r\n//       //let covid_array= papa.parse(covid.data,{header:true,skipEmptyLines:true}).data;\r\n//       //var x;\r\n//       //for (x in [3,5,25,32,33,35,47,48,84,85,87,96,99,101,104,105,118,119,122,125,143,149,153,157,164,165,173,174,189,194,200,201,204,209,211,213,215,230,231,235,241,243,244,254,255,256,258,261,262,263]){new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map)\r\n//         //new mapboxgl.Marker().setLngLat([covid_array[x].Long,covid_array[x].Lat]).addTo(map);\r\n//       //}\r\n//\r\n//\r\n//       //let res = await axios.get(country+'.json');\r\n//       //console.log(res.data.Agglomerations);\r\n//       //let data = res.data.Agglomerations[select].Longlat;\r\n//\r\n//       //new mapboxgl.Marker().setLngLat(data).addTo(map);\r\n//       //marker.setLngLat(data)\r\n//       //marker.addTo(map);\r\n//     }\r\n//\r\n//   makeGetRequest()\r\n//     //let agglos = axios.get('egypt.json');\r\n//     //console.log(agglos)\r\n//     //let data = agglos.data.Agglomerations[0].Longlat;\r\n//     //var marker = new mapboxgl.Marker();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}