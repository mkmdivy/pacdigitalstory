{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport sci from './sci.json';\nimport classes from './Site.module.css'; //iso_3166_1_alpha_3\n///6808: 520  baseline\n//// divide 20% percentile per country//////\n//// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\"]; //////////////////\n// sort array ascending\n\nlet top5_list = [[], [], [], [], []];\n\nconst asc = arr => arr.sort((a, b) => a - b);\n\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\n\nconst mean = arr => sum(arr) / arr.length;\n\nconst quantile = (arr, q) => {\n  const sorted = asc(arr);\n  const pos = (sorted.length - 1) * q;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  } else {\n    return sorted[base];\n  }\n};\n\nconst legend = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, \"Social Connected Index\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[0]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 6\n  }\n}), \"< 1x (20th percentile selected country)\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[1]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 6\n  }\n}), \"1-2x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[2]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 6\n  }\n}), \"2-3x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[3]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 6\n  }\n}), \"3-5x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[4]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }\n}), \"5-10x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[5]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 6\n  }\n}), \"10-25x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[6]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 6\n  }\n}), \"25-100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[7]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 6\n  }\n}), \">= 100x\"));\nconst agglomeration_fill_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 0.5)\", 10000, \"hsla(55, 30%, 93%, 0.5)\", 30000, \"hsla(60, 100%, 90%, 0.5)\", 100000, \"hsla(98, 55%, 81%, 0.5)\", 300000, \"hsla(166, 44%, 65%, 0.5)\", 1000000, \"hsla(186, 53%, 51%, 0.5)\", 3000000, \"hsla(197, 74%, 43%, 0.5)\", 11847635, \"hsla(197, 74%, 43%, 0.5)\"];\nconst agglomeration_stroke_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 1)\", 10000, \"hsla(55, 30%, 93%, 1)\", 30000, \"hsla(60, 100%, 90%, 1)\", 100000, \"hsla(98, 55%, 81%, 1)\", 300000, \"hsla(166, 44%, 65%, 1)\", 1000000, \"hsla(186, 53%, 51%, 1)\", 3000000, \"hsla(197, 74%, 43%, 1)\", 11847635, \"hsla(197, 74%, 43%, 1)\"]; // const options = [];\n// country_label.map(v=>{return options.push({label:v, value:v})});\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\n\nconst options = [{\n  label: \"Angola\",\n  value: 1\n}, {\n  label: \"Burundi\",\n  value: 2\n}, {\n  label: \"Benin\",\n  value: 3\n}, {\n  label: \"Burkina Faso\",\n  value: 4\n}, {\n  label: \"Botswana\",\n  value: 5\n}, {\n  label: \"Central African Republic\",\n  value: 6\n}, {\n  label: \"Cote d`Ivoire\",\n  value: 7\n}, {\n  label: \"Cameroon\",\n  value: 8\n}, {\n  label: \"Democratic Republic of the Congo\",\n  value: 9\n}, {\n  label: \"Republic of the Congo\",\n  value: 10\n}, {\n  label: \"Cabo Verde\",\n  value: 11\n}, {\n  label: \"Djibouti\",\n  value: 12\n}, {\n  label: \"Algeria\",\n  value: 13\n}, {\n  label: \"Egypt\",\n  value: 14\n}, {\n  label: \"Eritrea\",\n  value: 15\n}, {\n  label: \"Ethiopia\",\n  value: 16\n}, {\n  label: \"Gabon\",\n  value: 17\n}, {\n  label: \"Ghana\",\n  value: 18\n}, {\n  label: \"Guinea\",\n  value: 19\n}, {\n  label: \"The Gambia\",\n  value: 20\n}, {\n  label: \"Guinea-Bissau\",\n  value: 21\n}, {\n  label: \"Equatorial Guinea\",\n  value: 22\n}, {\n  label: \"Kenya\",\n  value: 23\n}, {\n  label: \"Liberia\",\n  value: 24\n}, {\n  label: \"Libya\",\n  value: 25\n}, {\n  label: \"Lesotho\",\n  value: 26\n}, {\n  label: \"Morocco\",\n  value: 27\n}, {\n  label: \"Mali\",\n  value: 28\n}, {\n  label: \"Mozambique\",\n  value: 29\n}, {\n  label: \"Mauritania\",\n  value: 30\n}, {\n  label: \"Malawi\",\n  value: 31\n}, {\n  label: \"Namibia\",\n  value: 32\n}, {\n  label: \"Niger\",\n  value: 33\n}, {\n  label: \"Nigeria\",\n  value: 34\n}, {\n  label: \"Rwanda\",\n  value: 35\n}, {\n  label: \"Sudan\",\n  value: 36\n}, {\n  label: \"Senegal\",\n  value: 37\n}, {\n  label: \"Sierra Leone\",\n  value: 38\n}, {\n  label: \"Somalia\",\n  value: 39\n}, {\n  label: \"South Sudan\",\n  value: 40\n}, {\n  label: \"Sao Tome and Principe\",\n  value: 41\n}, {\n  label: \"Kingdom of Eswatini\",\n  value: 42\n}, {\n  label: \"Chad\",\n  value: 43\n}, {\n  label: \"Togo\",\n  value: 44\n}, {\n  label: \"Tunisia\",\n  value: 45\n}, {\n  label: \"Tanzania\",\n  value: 46\n}, {\n  label: \"Uganda\",\n  value: 47\n}, {\n  label: \"South Africa\",\n  value: 48\n}, {\n  label: \"Zambia\",\n  value: 49\n}, {\n  label: \"Zimbabwe\",\n  value: 50\n}]; //// Basic setting of the map\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = update => {\n      this.setState({\n        update\n      });\n    };\n\n    this.onChange = values => {\n      this.setState({\n        values\n      });\n    };\n\n    this.onFilter = filters => {\n      this.setState({\n        [filters.target.id]: !this.state[filters.target.id]\n      });\n    };\n\n    this.remove = obj => {\n      this.map.removeLayer(obj);\n    };\n\n    this.add_shape = (obj, filter1) => {\n      this.map.addLayer({\n        id: obj,\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'africacontinent_complete-ays128',\n        filter: filter1,\n        paint: {\n          'fill-color': '#fdfdf5',\n          'fill-opacity': [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 1, 5, 0] //8.5\n\n        }\n      } // layer order\n      ); //console.log(this.map.getSource(\"africapolis_country\"))\n    };\n\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 2,\n      selectedOption: {\n        label: 'Africa',\n        value: ''\n      },\n      selectedCountry: \"AE\",\n      name: \"Not selected\",\n      name1: \"\",\n      name2: \"\",\n      name3: \"\",\n      name4: \"\",\n      name5: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    let selected = [];\n    let scidata = [];\n    sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n    console.log(selected);\n    selected.map(e => scidata.push(e.sci));\n    console.log(scidata);\n    console.log(quantile(scidata, .20)); //Object.keys(selected).map(e => console.log(e))\n\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    }); // this.map.on('move', () => {\n    //   this.setState({\n    //   lng: this.map.getCenter().lng.toFixed(4),\n    //   lat: this.map.getCenter().lat.toFixed(4),\n    //   zoom: this.map.getZoom().toFixed(2)\n    //   });\n    // });\n    //// Import Africapolis agglomerations from mapbox\n\n    this.map.on('load', () => {\n      // Add Country shape\n      this.map.addSource('africapolis_country', {\n        type: 'vector',\n        url: 'mapbox://mapbox.country-boundaries-v1'\n      }); // Add Agglomerations\n      //    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\n      // Add Country label\n      //    this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mkmd.6v0ckax4'});\n      // Add Region labelled\n      //    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\n      // Add Country layer\n\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'country_boundaries',\n        //filter:[\"==\",\"Region_ID\",1],\n        paint: {\n          'fill-color': '#fdfdf5',\n          'fill-opacity': ['case', ['boolean', ['feature-state', 'hover'], false], 0.2, 0]\n        }\n      });\n      this.map.on('click', 'country', e => {\n        //console.log(e.features[0].properties.iso_3166_1)\n        this.setState({\n          selectedCountry: e.features[0].properties.iso_3166_1\n        });\n        this.setState({\n          name: e.features[0].properties.name_en\n        });\n      });\n      var hoveredID = null;\n      this.map.on('mouseenter', 'country', e => {\n        if (e.features.length > 0) {\n          if (hoveredID) {\n            this.map.setFeatureState({\n              source: 'africapolis_country',\n              id: hoveredID,\n              sourceLayer: 'country_boundaries'\n            }, {\n              hover: false\n            });\n          }\n\n          hoveredID = e.features[0].id;\n          this.map.setFeatureState({\n            source: 'africapolis_country',\n            id: hoveredID,\n            sourceLayer: 'country_boundaries'\n          }, {\n            hover: true\n          });\n        }\n      });\n      this.map.on('mouseleave', 'country', e => {\n        if (hoveredID) {\n          this.map.setFeatureState({\n            source: 'africapolis_country',\n            id: hoveredID,\n            sourceLayer: 'country_boundaries'\n          }, {\n            hover: false\n          });\n        }\n\n        hoveredID = null;\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\n    if (prevState !== this.state) {\n      let selected = [];\n      let scidata = [];\n      sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n      selected.map(e => scidata.push(e.sci));\n      let percentile20 = quantile(scidata, .20); //selected.map(e => e.sci = e.sci/ percentile20)\n\n      console.log(selected);\n      let top5 = scidata.sort((a, b) => b - a).slice(0, 5);\n      selected.map(e => {\n        if (e.sci === top5[0]) {\n          top5_list[0] = e;\n        } else if (e.sci === top5[1]) {\n          top5_list[1] = e;\n        } else if (e.sci === top5[2]) {\n          top5_list[2] = e;\n        } else if (e.sci === top5[3]) {\n          top5_list[3] = e;\n        } else if (e.sci === top5[4]) {\n          top5_list[4] = e;\n        }\n      });\n      console.log(top5);\n      console.log(top5_list);\n      let matchExpression = ['match', ['get', 'iso_3166_1']]; // Calculate color values for each country based on 'hdi' value\n\n      selected.forEach(e => {\n        // 1 2 3 5 10 25 100 above100\n        //e.sci = e.sci/percentile20\n        if (e.sci / percentile20 < 1) {\n          matchExpression.push(e['end'], \"#F3F2E8\");\n        } else if (e.sci / percentile20 < 2) {\n          matchExpression.push(e['end'], \"#D4EBE2\");\n        } else if (e.sci / percentile20 < 3) {\n          matchExpression.push(e['end'], \"#B6E3DB\");\n        } else if (e.sci / percentile20 < 5) {\n          matchExpression.push(e['end'], \"#97DCD5\");\n        } else if (e.sci / percentile20 < 10) {\n          matchExpression.push(e['end'], \"#79D5CF\");\n        } else if (e.sci / percentile20 < 25) {\n          matchExpression.push(e['end'], \"#5ACEC9\");\n        } else if (e.sci / percentile20 < 100) {\n          matchExpression.push(e['end'], \"#3CC6C2\");\n        } else {\n          matchExpression.push(e['end'], \"#1DBFBC\");\n        }\n      });\n      matchExpression.push(this.state.selectedCountry, 'yellow'); //console.log(matchExpression)\n      // Last value is the default, used where there is no data\n\n      matchExpression.push('rgba(0, 0, 0, 0)'); // //console.log(this.state.selectedOption, prevState.selectedOption);\n\n      this.remove('country');\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'country_boundaries',\n        //filter:[\"==\",\"Region_ID\",1],\n        paint: {\n          'fill-color': matchExpression,\n          'fill-opacity': 0.9\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, \" \", this.state.name, top5_list.map((e, j) => {\n      return /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 43\n        }\n      }, \" 1. \", top5_list[j].end, \" \", top5_list[j].sci, \" \");\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }\n    }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom: \", this.state.zoom), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: classes.mapContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.legend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }, legend));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","sci","classes","accessToken","colors","top5_list","asc","arr","sort","a","b","sum","reduce","mean","length","quantile","q","sorted","pos","base","Math","floor","rest","undefined","legend","backgroundColor","agglomeration_fill_color","agglomeration_stroke_color","options","label","value","Application","Component","constructor","props","onUpdate","update","setState","onChange","values","onFilter","filters","target","id","state","remove","obj","map","removeLayer","add_shape","filter1","addLayer","source","type","filter","paint","lng","lat","zoom","selectedOption","selectedCountry","name","name1","name2","name3","name4","name5","componentDidMount","selected","scidata","e","start","push","console","log","Map","container","mapContainer","style","center","on","addSource","url","features","properties","iso_3166_1","name_en","hoveredID","setFeatureState","sourceLayer","hover","componentDidUpdate","prevProps","prevState","percentile20","top5","slice","matchExpression","forEach","render","topleft","j","end","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport sci from './sci.json';\r\nimport classes from './Site.module.css';\r\n//iso_3166_1_alpha_3\r\n///6808: 520  baseline\r\n//// divide 20% percentile per country//////\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\"]\r\n\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\nlet top5_list=[[],[],[],[],[]];\r\n\r\nconst asc = arr => arr.sort((a, b) => a - b);\r\n\r\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\r\n\r\nconst mean = arr => sum(arr) / arr.length;\r\n\r\nconst quantile = (arr, q) => {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n        return sorted[base];\r\n    }\r\n};\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connected Index</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x (20th percentile selected country)\"}</div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n</div>\r\n);\r\n\r\n\r\nconst agglomeration_fill_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 0.5)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 0.5)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 0.5)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 0.5)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 0.5)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 0.5)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 0.5)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 0.5)\"\r\n ]\r\n const agglomeration_stroke_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 1)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 1)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 1)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 1)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 1)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 1)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 1)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 1)\"\r\n ]\r\n\r\n// const options = [];\r\n// country_label.map(v=>{return options.push({label:v, value:v})});\r\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\r\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\r\n\r\n\r\n  const options = [{ label:\"Angola\",value:1 }, { label:\"Burundi\",value:2 }, { label:\"Benin\",value:3 }, { label:\"Burkina Faso\",value:4 }, { label:\"Botswana\",value:5 }, { label:\"Central African Republic\",value:6 }, { label:\"Cote d`Ivoire\",value:7 }, { label:\"Cameroon\",value:8 }, { label:\"Democratic Republic of the Congo\",value:9 }, { label:\"Republic of the Congo\",value:10 }, { label:\"Cabo Verde\",value:11 }, { label:\"Djibouti\",value:12 }, { label:\"Algeria\",value:13 }, { label:\"Egypt\",value:14 }, { label:\"Eritrea\",value:15 }, { label:\"Ethiopia\",value:16 }, { label:\"Gabon\",value:17 }, { label:\"Ghana\",value:18 }, { label:\"Guinea\",value:19 }, { label:\"The Gambia\",value:20 }, { label:\"Guinea-Bissau\",value:21 }, { label:\"Equatorial Guinea\",value:22 }, { label:\"Kenya\",value:23 }, { label:\"Liberia\",value:24 }, { label:\"Libya\",value:25 }, { label:\"Lesotho\",value:26 }, { label:\"Morocco\",value:27 }, { label:\"Mali\",value:28 }, { label:\"Mozambique\",value:29 }, { label:\"Mauritania\",value:30 }, { label:\"Malawi\",value:31 }, { label:\"Namibia\",value:32 }, { label:\"Niger\",value:33 }, { label:\"Nigeria\",value:34 }, { label:\"Rwanda\",value:35 }, { label:\"Sudan\",value:36 }, { label:\"Senegal\",value:37 }, { label:\"Sierra Leone\",value:38 }, { label:\"Somalia\",value:39 }, { label:\"South Sudan\",value:40 }, { label:\"Sao Tome and Principe\",value:41 }, { label:\"Kingdom of Eswatini\",value:42 }, { label:\"Chad\",value:43 }, { label:\"Togo\",value:44}, { label:\"Tunisia\",value:45 }, { label:\"Tanzania\",value:46 }, { label:\"Uganda\",value:47 }, { label:\"South Africa\",value:48 }, { label:\"Zambia\",value:49 }, { label:\"Zimbabwe\",value:50 }];\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 2,\r\n      selectedOption: {label: 'Africa', value: ''},\r\n      selectedCountry: \"AE\",\r\n      name: \"Not selected\",\r\n      name1: \"\",\r\n      name2: \"\",\r\n      name3: \"\",\r\n      name4: \"\",\r\n      name5: \"\"\r\n\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nlet selected = [];\r\nlet scidata= [];\r\nsci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\nconsole.log(selected)\r\nselected.map(e => scidata.push(e.sci))\r\nconsole.log(scidata)\r\nconsole.log(quantile(scidata, .20))\r\n//Object.keys(selected).map(e => console.log(e))\r\n\r\n\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    // this.map.on('move', () => {\r\n    //   this.setState({\r\n    //   lng: this.map.getCenter().lng.toFixed(4),\r\n    //   lat: this.map.getCenter().lat.toFixed(4),\r\n    //   zoom: this.map.getZoom().toFixed(2)\r\n    //   });\r\n    // });\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mapbox.country-boundaries-v1'});\r\n// Add Agglomerations\r\n  //    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\r\n// Add Country label\r\n  //    this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mkmd.6v0ckax4'});\r\n// Add Region labelled\r\n  //    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'country_boundaries',\r\n            //filter:[\"==\",\"Region_ID\",1],\r\n            paint: {\r\n\r\n              'fill-color': '#fdfdf5',\r\n              'fill-opacity': ['case',['boolean', ['feature-state', 'hover'], false],0.2,0]\r\n            }\r\n        });\r\n\r\n\r\n        this.map.on('click', 'country', e =>  {\r\n              //console.log(e.features[0].properties.iso_3166_1)\r\n              this.setState({selectedCountry:e.features[0].properties.iso_3166_1})\r\n              this.setState({name:e.features[0].properties.name_en})\r\n            });\r\n\r\n\r\n\r\nvar hoveredID=null;\r\n        this.map.on('mouseenter', 'country', e =>  {\r\n          if (e.features.length > 0) {\r\n                if (hoveredID) {\r\n                    this.map.setFeatureState(\r\n                    { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                    { hover: false }\r\n                    );\r\n                    }\r\n                hoveredID = e.features[0].id;\r\n                this.map.setFeatureState(\r\n                { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                { hover: true }\r\n                );\r\n                }\r\n            });\r\n\r\n        this.map.on('mouseleave', 'country', e =>  {\r\n          if (hoveredID) {\r\n                      this.map.setFeatureState(\r\n                      { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                      { hover: false }\r\n                      );\r\n                    }\r\n                    hoveredID = null;\r\n                });\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\r\n\r\n    if( prevState !== this.state) {\r\n      let selected = [];\r\n      let scidata= [];\r\n      sci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\n      selected.map(e => scidata.push(e.sci))\r\n      let percentile20 = quantile(scidata, .20)\r\n      //selected.map(e => e.sci = e.sci/ percentile20)\r\n      console.log(selected)\r\n\r\n      let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n      selected.map(e => {\r\n        if(e.sci===top5[0]) {top5_list[0]=e}\r\n        else if(e.sci===top5[1]) {top5_list[1]=e}\r\n        else if(e.sci===top5[2]) {top5_list[2]=e}\r\n        else if(e.sci===top5[3]) {top5_list[3]=e}\r\n        else if(e.sci===top5[4]) {top5_list[4]=e}\r\n      })\r\n      console.log(top5)\r\n      console.log(top5_list)\r\n\r\n\r\n\r\n      let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n      // Calculate color values for each country based on 'hdi' value\r\n      selected.forEach( e => {\r\n\r\n      // 1 2 3 5 10 25 100 above100\r\n\r\n      //e.sci = e.sci/percentile20\r\n      if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n      else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n      else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n      else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n      else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n      else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n      else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n      else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n      });\r\n\r\n      matchExpression.push(this.state.selectedCountry, 'yellow');\r\n\r\n      //console.log(matchExpression)\r\n\r\n      // Last value is the default, used where there is no data\r\n      matchExpression.push('rgba(0, 0, 0, 0)');\r\n\r\n      // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n      this.remove('country');\r\n      this.map.addLayer({\r\n        id: 'country',\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'country_boundaries',\r\n        //filter:[\"==\",\"Region_ID\",1],\r\n        paint: {\r\n          'fill-color': matchExpression,\r\n          'fill-opacity': 0.9\r\n        }\r\n      });\r\n\r\n  }\r\n}\r\n\r\nonUpdate = update => {\r\n  this.setState({ update })\r\n}\r\n\r\nonChange = values => {\r\n  this.setState({ values })\r\n}\r\n\r\nonFilter = filters => {\r\n  this.setState({[filters.target.id]: !this.state[filters.target.id]});\r\n}\r\n\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\n\r\nadd_shape = (obj,filter1) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'africacontinent_complete-ays128',\r\n        filter:filter1,\r\n        paint: {\r\n          'fill-color': '#fdfdf5',\r\n          'fill-opacity': [\"interpolate\",[\"linear\"],[\"zoom\"], 0,1,5,0] //8.5\r\n        }\r\n    }\r\n   // layer order\r\n  );\r\n    //console.log(this.map.getSource(\"africapolis_country\"))\r\n\r\n}\r\n\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> {this.state.name}\r\n          {top5_list.map((e,j) => {return <br> 1. {top5_list[j].end} {top5_list[j].sci} </br>}\r\n          )}\r\n           </div>\r\n        <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\r\n        <div ref={el => this.mapContainer = el} className={classes.mapContainer} />\r\n        <div className={classes.legend}>{legend}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}