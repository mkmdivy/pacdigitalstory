{"ast":null,"code":"var _jsxFileName = \"C:\\\\worldbank\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\nimport classes from './Site.module.css';\nimport Badge from '@material-ui/core/Badge';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StackGrid from \"react-stack-grid\";\n\nconst App = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    }\n  }));\n  const chipclasses = useStyles();\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      background: \"rgba(45,45,45,0.3)\",\n      // match with the menu\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"rgba(255,255,255,0.5)\" : \"rgba(255,255,255,0.9)\" // Removes weird border around container      \n      // \"&:hover\": {\n      //   // Overwrittes the different states of border\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\n      // }\n\n    }),\n    menu: base => ({ ...base,\n      // override border radius to match the box\n      borderRadius: 0,\n      // kill the gap\n      marginTop: 0\n    }),\n    menuList: base => ({ ...base,\n      // kill the white space on first and last option\n      padding: 0\n    }),\n    singleValue: base => ({ ...base,\n      color: 'white'\n    })\n  };\n  useEffect(() => {}, []);\n\n  const handleClick = e => {\n    console.log(e);\n    setSelectedOption({\n      value: e,\n      label: e\n    });\n  };\n\n  const top5buttons = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: chipclasses.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      value: '',\n      onClick: e => handleClick(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"back to default\"), options.slice(0, 10).map((e, i) => /*#__PURE__*/React.createElement(Badge, {\n      badgeContent: freqSorted[i],\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: e.value,\n      onClick: () => handleClick(e.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 59\n      }\n    }))));\n  };\n\n  const dataPresent = input => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StackGrid, {\n      columnWidth: 230,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, result.slice(0, 150).map(e => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: e.Link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: e.type === 'Website' ? e.type === 'Video' ? e.type === 'Article' ? classes.buttonW : classes.buttonV : classes.buttonA : classes.buttonR,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 61\n        }\n      }, e.Name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 227\n        }\n      }));\n    })));\n  };\n\n  {\n    /* <button className={classes.buttonActive}>{e.Name}</button> */\n  }\n  const [selectedOption, setSelectedOption] = useState({\n    value: '',\n    label: 'Search'\n  });\n  console.log(selectedOption); // +\"  \"+e.freq\n\n  const options = [];\n  const wordcount = [];\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"]; // wordlist.map(e => options.push({value: e.name, label: e.name}))\n\n  greendb.map(e => {\n    e.keyword = e.Name.toUpperCase().split(' '); // e.keyword.map(x => wordcount.push(x))    \n  }); // greendb.map(e => console.log(e.keyword))\n\n  let result = selectedOption.value == '' ? greendb : greendb.filter(e => e.keyword.includes(selectedOption.value));\n  result.map(e => e.keyword.map(x => wordcount.push(x)));\n  const wordresult = wordcount.filter(e => !wordAvoid.includes(e)); // console.log(wordcount)\n\n  const counts = {};\n  wordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1); // console.log(counts)\n  // console.log(selectedOption)\n\n  const keysSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  });\n  console.log(keysSorted); // bar,me,you,foo\n\n  const freqSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  }).map(key => counts[key]);\n  console.log(freqSorted);\n  keysSorted.map((e, idx) => options.push({\n    value: e,\n    label: e + \" \" + freqSorted[idx]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, \"Green Technologies Knowledge Resources Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: customStyles,\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  })), top5buttons()), dataPresent());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/worldbank/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","classes","Badge","Chip","makeStyles","StackGrid","App","props","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","chipclasses","customStyles","control","base","state","background","borderRadius","isFocused","borderColor","menu","marginTop","menuList","padding","singleValue","color","handleClick","e","console","log","setSelectedOption","value","label","top5buttons","target","options","slice","map","i","freqSorted","dataPresent","input","result","Link","type","buttonW","buttonV","buttonA","buttonR","Name","selectedOption","wordcount","wordAvoid","keyword","toUpperCase","split","filter","includes","x","push","wordresult","counts","num","keysSorted","Object","keys","sort","b","a","key","idx","main","header","title","box"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StackGrid from \"react-stack-grid\";\r\n\r\n\r\nconst App = props => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const chipclasses = useStyles();\r\n\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      background: \"rgba(45,45,45,0.3)\",\r\n      // match with the menu\r\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n      // Overwrittes the different states of border\r\n      borderColor: state.isFocused ? \"rgba(255,255,255,0.5)\" : \"rgba(255,255,255,0.9)\",\r\n      // Removes weird border around container      \r\n      // \"&:hover\": {\r\n      //   // Overwrittes the different states of border\r\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\r\n\r\n      // }\r\n    }),\r\n    menu: base => ({\r\n      ...base,\r\n      // override border radius to match the box\r\n      borderRadius: 0,\r\n      // kill the gap\r\n      marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n      ...base,\r\n      // kill the white space on first and last option\r\n      padding: 0\r\n    }),\r\n    singleValue: base => ({\r\n      ...base,\r\n      color:'white'            \r\n    })\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => { \r\n    \r\n  },[])\r\n\r\n\r\n  const handleClick = (e) => {\r\n    console.log(e)\r\n    setSelectedOption({value:e, label:e})\r\n  }\r\n \r\n  const top5buttons = () => {\r\n    return (\r\n      <div class={chipclasses.root}>\r\n      <button value={''} onClick={(e) => handleClick(e.target.value)}>{\"back to default\"}</button>            \r\n      {options.slice(0,10).map((e,i)=> \r\n      <Badge badgeContent={freqSorted[i]} color=\"primary\"><Chip  label={e.value}  onClick={() => handleClick(e.value)} /></Badge>)\r\n      }\r\n\r\n      \r\n      {/* <Badge badgeContent={freqSorted[0]} color=\"primary\"><button class={classes.keybutton} value={options[0].value} onClick={(e) => handleClick(e.target.value)}>{options[0].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[1]} color=\"primary\"><button class={classes.keybutton} value={options[1].value} onClick={(e) => handleClick(e.target.value)}>{options[1].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[2]} color=\"primary\"><button class={classes.keybutton} value={options[2].value} onClick={(e) => handleClick(e.target.value)}>{options[2].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[3]} color=\"primary\"><button class={classes.keybutton} value={options[3].value} onClick={(e) => handleClick(e.target.value)}>{options[3].value}</button></Badge>\r\n      <Badge badgeContent={freqSorted[4]} color=\"primary\"><button class={classes.keybutton} value={options[4].value} onClick={(e) => handleClick(e.target.value)}>{options[4].value}</button></Badge> */}\r\n      </div>\r\n    )\r\n  \r\n  }    \r\n  \r\n  const dataPresent = (input) => {\r\n    return (\r\n      <div>\r\n        <StackGrid\r\n        columnWidth={230}\r\n      >\r\n      {result.slice(0,150).map(e=> {return <a href={e.Link}><button className={e.type==='Website'? e.type==='Video'? e.type==='Article'?  classes.buttonW : classes.buttonV : classes.buttonA : classes.buttonR}>{e.Name}</button><br/></a>})}\r\n      </StackGrid>\r\n      </div>\r\n    )\r\n  \r\n  }    \r\n\r\n{/* <button className={classes.buttonActive}>{e.Name}</button> */}\r\n\r\n  const [selectedOption, setSelectedOption] = useState({value: '', label: 'Search'});\r\n  console.log(selectedOption)\r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n// wordlist.map(e => options.push({value: e.name, label: e.name}))\r\n\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.toUpperCase().split(' ')\r\n  // e.keyword.map(x => wordcount.push(x))    \r\n})\r\n\r\n// greendb.map(e => console.log(e.keyword))\r\nlet result = selectedOption.value==''? greendb: greendb.filter(e => (e.keyword.includes(selectedOption.value)))\r\nresult.map(e => e.keyword.map(x => wordcount.push(x)))\r\n\r\n\r\nconst wordresult = wordcount.filter(e => !wordAvoid.includes(e))\r\n// console.log(wordcount)\r\n\r\n\r\nconst counts = {};\r\n\r\nwordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1)\r\n\r\n\r\n// console.log(counts)\r\n\r\n\r\n// console.log(selectedOption)\r\nconst keysSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]})\r\nconsole.log(keysSorted);     // bar,me,you,foo\r\n\r\nconst freqSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]}).map(key => counts[key]);\r\nconsole.log(freqSorted);\r\n\r\nkeysSorted.map((e,idx) => options.push({value:e,label:e+\" \"+freqSorted[idx]}) )\r\n\r\n\r\n  \r\nreturn (\r\n<div class={classes.main}>\r\n  <div class={classes.header}>\r\n    <div class={classes.title}>{\"Green Technologies Knowledge Resources Explorer\"}</div>    \r\n    <div class={classes.box}>\r\n    <Select \r\n    styles={customStyles}\r\n    options={options} \r\n    // isMulti \r\n    value={selectedOption}\r\n    onChange={setSelectedOption}\r\n    /></div>\r\n    {top5buttons()}\r\n  </div>\r\n{dataPresent()}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}