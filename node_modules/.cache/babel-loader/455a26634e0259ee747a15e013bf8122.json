{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport sciOriginal from './sci.json';\nimport countryData from './country.json';\nimport classes from './Site.module.css';\nimport { BarChart, Cell, Bar, Tooltip, XAxis, ResponsiveContainer } from 'recharts';\nimport ReactGA from 'react-ga';\nimport './index.css';\nimport logo from './OECD_white_EN.png';\nimport MaterialIcon from 'material-icons-react';\nReactGA.initialize('UA-128268752-1');\nReactGA.pageview(window.location.search + window.location.pathname); //iso_3166_1_alpha_3\n//// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\nconst colors = [\"#F3F2E8\", \"#D4EBE2\", \"#B6E3DB\", \"#97DCD5\", \"#79D5CF\", \"#5ACEC9\", \"#3CC6C2\", \"#1DBFBC\", \"#333333\"]; //////////////////\n// sort array ascending\n\nlet top5_list = [[], [], [], [], []];\nlet result = [];\nconst regionTotal = {\n  Africa: 55,\n  Americas: 40,\n  Asia: 46,\n  Europe: 42,\n  Oceania: 12\n};\n\nconst asc = arr => arr.sort((a, b) => a - b);\n\nconst quantile = (arr, q) => {\n  const sorted = asc(arr);\n  const pos = (sorted.length - 1) * q;\n  const base = Math.floor(pos);\n  const rest = pos - base;\n\n  if (sorted[base + 1] !== undefined) {\n    return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n  } else {\n    return sorted[base];\n  }\n};\n\nconst legend = /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}, \"Social Connectedness\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[0]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }\n}), \"< 1x\", \" \", /*#__PURE__*/React.createElement(\"small\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 65\n  }\n}, \"(20th percentile)\")), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[1]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }\n}), \"1-2x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[2]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 6\n  }\n}), \"2-3x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[3]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }\n}), \"3-5x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[4]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }\n}), \"5-10x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[5]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }\n}), \"10-25x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[6]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 6\n  }\n}), \"25-100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[7]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 6\n  }\n}), \">= 100x\"), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    backgroundColor: colors[8]\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 6\n  }\n}), \"Data not available\"));\n\nconst tooltip = e => {\n  if (e.payload[0]) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    }, \" \", e.payload[0].payload.region, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 76\n      }\n    }), \"SCI \", e.payload[0].payload.sciScaled, \"x\");\n  }\n}; //// Basic setting of the map\n\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdate = (ISO2, Name, Region) => {\n      this.setState({\n        selectedCountry: ISO2\n      });\n      let sci = [];\n      sciOriginal.map(e => this.state.button === \"From\" ? sci.push({\n        start: e.start,\n        end: e.end,\n        sci: e.sci\n      }) : sci.push({\n        end: e.start,\n        start: e.end,\n        sci: e.sci\n      }));\n      let selected = [];\n      let scidata = [];\n      let scidataRank = [];\n      let scidataRankRegion = {\n        Africa: [],\n        Americas: [],\n        Asia: [],\n        Europe: [],\n        Oceania: []\n      };\n      let scidataRankRegionCode = {\n        Africa: [],\n        Americas: [],\n        Asia: [],\n        Europe: [],\n        Oceania: []\n      };\n      sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n      selected.map(e => {\n        scidata.push(e.sci);\n        scidataRank.push(e.sci);\n        scidataRankRegion[countryData[e.end][1]].push(e.sci);\n        scidataRankRegionCode[countryData[e.end][1]].push(e.end);\n      });\n      Object.keys(scidataRankRegion).map(k => {\n        let sorted = scidataRankRegion[k].slice().sort((a, b) => b - a);\n        let rank_region = scidataRankRegion[k].map(v => sorted.indexOf(v) + 1);\n        scidataRankRegion[k] = rank_region;\n      });\n      let percentile20 = quantile(scidata, .20); //selected.map(e => e.sci = e.sci/ percentile20)\n\n      let sortedSCI = scidata.sort((a, b) => b - a);\n      let rank_country = scidataRank.map(v => sortedSCI.indexOf(v) + 1);\n      let top5 = scidata.sort((a, b) => b - a).slice(0, 5);\n      selected.map(e => {\n        e.region = countryData[e.end][1];\n        e.sciScaled = Math.round(e.sci / percentile20);\n\n        if (e.sci === top5[0]) {\n          top5_list[0] = e;\n        } else if (e.sci === top5[1]) {\n          top5_list[1] = e;\n        } else if (e.sci === top5[2]) {\n          top5_list[2] = e;\n        } else if (e.sci === top5[3]) {\n          top5_list[3] = e;\n        } else if (e.sci === top5[4]) {\n          top5_list[4] = e;\n        }\n      }); //top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\n      // Calculate the sums and group data (while tracking count)\n\n      const reduced = selected.reduce(function (m, d) {\n        if (!m[d.region]) {\n          m[d.region] = { ...d,\n            count: 1\n          };\n          return m;\n        }\n\n        m[d.region].sciScaled += d.sciScaled;\n        m[d.region].count += 1;\n        return m;\n      }, {}); // Create new array from grouped data and compute the average\n\n      result = Object.keys(reduced).map(function (k) {\n        const item = reduced[k];\n        return {\n          region: item.region,\n          sciScaled: Math.round(item.sciScaled / item.count * 100) / 100,\n          numbers: item.count\n        };\n      }); // console.log(JSON.stringify(result,null,4));\n\n      this.setState({\n        name: Name,\n        region: Region\n      });\n      let matchExpression = ['match', ['get', 'iso_3166_1']]; // Calculate color values for each country based on 'hdi' value\n\n      selected.forEach(e => {\n        if (e.sci / percentile20 < 1) {\n          matchExpression.push(e['end'], \"#F3F2E8\");\n        } else if (e.sci / percentile20 < 2) {\n          matchExpression.push(e['end'], \"#D4EBE2\");\n        } else if (e.sci / percentile20 < 3) {\n          matchExpression.push(e['end'], \"#B6E3DB\");\n        } else if (e.sci / percentile20 < 5) {\n          matchExpression.push(e['end'], \"#97DCD5\");\n        } else if (e.sci / percentile20 < 10) {\n          matchExpression.push(e['end'], \"#79D5CF\");\n        } else if (e.sci / percentile20 < 25) {\n          matchExpression.push(e['end'], \"#5ACEC9\");\n        } else if (e.sci / percentile20 < 100) {\n          matchExpression.push(e['end'], \"#3CC6C2\");\n        } else {\n          matchExpression.push(e['end'], \"#1DBFBC\");\n        }\n      });\n      matchExpression.push(this.state.selectedCountry, '#e8ae40'); // Last value is the default, used where there is no data\n\n      matchExpression.push('rgba(0, 0, 0, 0)'); // //console.log(this.state.selectedOption, prevState.selectedOption);\n\n      this.remove('country');\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        filter: [\"match\", [\"get\", \"iso_3166_1\"], [\"IR\", \"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\", \"TJ\"], false, true],\n        'source-layer': 'country_boundaries',\n        paint: {\n          'fill-color': matchExpression,\n          'fill-opacity': 0.9\n        }\n      });\n      this.map.on('mousemove', 'country', e => {\n        if (this.state.selectedCountry !== e.features[0].properties.iso_3166_1) {\n          this.map.getCanvas().style.cursor = 'pointer';\n          let coordinates = [e.lngLat.lng, e.lngLat.lat];\n          let sciPopup = [];\n          let rankPopup = [];\n          let sciColor = [];\n          let rankPopupRegion = [];\n          let regionNumber = regionTotal[e.features[0].properties.region];\n          selected.forEach((d, i) => {\n            if (d.end === e.features[0].properties.iso_3166_1) {\n              sciPopup = Math.round(d.sci / percentile20);\n              rankPopup = rank_country[i];\n\n              if (d.sci / percentile20 < 1) {\n                sciColor.push(\"#F3F2E8\");\n              } else if (d.sci / percentile20 < 2) {\n                sciColor.push(\"#D4EBE2\");\n              } else if (d.sci / percentile20 < 3) {\n                sciColor.push(\"#B6E3DB\");\n              } else if (d.sci / percentile20 < 5) {\n                sciColor.push(\"#97DCD5\");\n              } else if (d.sci / percentile20 < 10) {\n                sciColor.push(\"#79D5CF\");\n              } else if (d.sci / percentile20 < 25) {\n                sciColor.push(\"#5ACEC9\");\n              } else if (d.sci / percentile20 < 100) {\n                sciColor.push(\"#3CC6C2\");\n              } else {\n                sciColor.push(\"#1DBFBC\");\n              }\n            }\n          });\n\n          if (scidataRankRegionCode[e.features[0].properties.region]) {\n            scidataRankRegionCode[e.features[0].properties.region].map((d, i) => e.features[0].properties.iso_3166_1 === d ? rankPopupRegion.push(scidataRankRegion[e.features[0].properties.region][i]) : null);\n          }\n\n          this.popUp.setLngLat(coordinates).setHTML(`<strong>${e.features[0].properties.name_en}</strong> ${sciPopup}<little>x</little><br/>\n                <span>Rank:</span><bold>${rankPopup}</bold><span>/194</span><br/>\n                  <small>In ${e.features[0].properties.region}:</small><bold>${rankPopupRegion}</bold><span>/${regionNumber}</span>`).addTo(this.map);\n          var popupElem = this.popUp.getElement();\n          popupElem.style.color = sciColor[0];\n        } else {\n          this.popUp.remove();\n        }\n      });\n      this.setState({\n        rendered: \"Yes\"\n      });\n    };\n\n    this.remove = obj => {\n      this.map.removeLayer(obj);\n    };\n\n    this.moveRegion = e => {\n      if (e) {\n        switch (e.activeLabel) {\n          case 'Africa':\n            this.map.flyTo({\n              center: [32.259, 2.036],\n              zoom: 3.14,\n              essential: true\n            });\n            break;\n\n          case 'Americas':\n            this.map.flyTo({\n              center: [-69.390, 22.259],\n              zoom: 1.82,\n              essential: true\n            });\n            break;\n\n          case 'Asia':\n            this.map.flyTo({\n              center: [104.687, 32.592],\n              zoom: 3.14,\n              essential: true\n            });\n            break;\n\n          case 'Europe':\n            this.map.flyTo({\n              center: [27.920, 56.907],\n              zoom: 3.19,\n              essential: true\n            });\n            break;\n\n          case 'Oceania':\n            this.map.flyTo({\n              center: [155.731, -16.435],\n              zoom: 3.11,\n              essential: true\n            });\n            break;\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.state = {\n      lng: 40,\n      lat: 30,\n      zoom: 2,\n      selectedCountry: \"NG\",\n      name: \"\",\n      region: \"Africa\",\n      button: \"From\",\n      rendered: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    let sci = [];\n    sciOriginal.map(e => this.state.button === \"From\" ? sci.push({\n      start: e.start,\n      end: e.end,\n      sci: e.sci\n    }) : sci.push({\n      end: e.start,\n      start: e.end,\n      sci: e.sci\n    }));\n    let selected = [];\n    let scidata = [];\n    let scidataRank = [];\n    let scidataRankRegion = {\n      Africa: [],\n      Americas: [],\n      Asia: [],\n      Europe: [],\n      Oceania: []\n    };\n    let scidataRankRegionCode = {\n      Africa: [],\n      Americas: [],\n      Asia: [],\n      Europe: [],\n      Oceania: []\n    };\n    sci.map(e => e.start === this.state.selectedCountry ? selected.push(e) : null);\n    selected.map(e => {\n      scidata.push(e.sci);\n      scidataRank.push(e.sci);\n      scidataRankRegion[countryData[e.end][1]].push(e.sci);\n      scidataRankRegionCode[countryData[e.end][1]].push(e.end);\n    });\n    Object.keys(scidataRankRegion).map(k => {\n      let sorted = scidataRankRegion[k].slice().sort((a, b) => b - a);\n      let rank_region = scidataRankRegion[k].map(v => sorted.indexOf(v) + 1);\n      scidataRankRegion[k] = rank_region;\n    });\n    this.popUp = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom,\n      attributionControl: false\n    });\n    let top5 = scidata.sort((a, b) => b - a).slice(0, 5);\n    let sortedSCI = scidata.sort((a, b) => b - a);\n    let rank_country = scidataRank.map(v => sortedSCI.indexOf(v) + 1);\n    let percentile20 = quantile(scidata, .20);\n    selected.map(e => {\n      e.region = countryData[e.end][1];\n      e.sciScaled = Math.round(e.sci / percentile20);\n\n      if (e.sci === top5[0]) {\n        top5_list[0] = e;\n      } else if (e.sci === top5[1]) {\n        top5_list[1] = e;\n      } else if (e.sci === top5[2]) {\n        top5_list[2] = e;\n      } else if (e.sci === top5[3]) {\n        top5_list[3] = e;\n      } else if (e.sci === top5[4]) {\n        top5_list[4] = e;\n      }\n    }); // Calculate the sums and group data (while tracking count)\n\n    const reduced = selected.reduce(function (m, d) {\n      if (!m[d.region]) {\n        m[d.region] = { ...d,\n          count: 1\n        };\n        return m;\n      }\n\n      m[d.region].sciScaled += d.sciScaled;\n      m[d.region].count += 1;\n      return m;\n    }, {}); // Create new array from grouped data and compute the average\n\n    result = Object.keys(reduced).map(function (k) {\n      const item = reduced[k];\n      return {\n        region: item.region,\n        sciScaled: Math.round(item.sciScaled / item.count * 100) / 100\n      };\n    });\n    let matchExpression = ['match', ['get', 'iso_3166_1']]; // Calculate color values for each country based on 'hdi' value\n\n    selected.forEach(e => {\n      if (e.sci / percentile20 < 1) {\n        matchExpression.push(e['end'], \"#F3F2E8\");\n      } else if (e.sci / percentile20 < 2) {\n        matchExpression.push(e['end'], \"#D4EBE2\");\n      } else if (e.sci / percentile20 < 3) {\n        matchExpression.push(e['end'], \"#B6E3DB\");\n      } else if (e.sci / percentile20 < 5) {\n        matchExpression.push(e['end'], \"#97DCD5\");\n      } else if (e.sci / percentile20 < 10) {\n        matchExpression.push(e['end'], \"#79D5CF\");\n      } else if (e.sci / percentile20 < 25) {\n        matchExpression.push(e['end'], \"#5ACEC9\");\n      } else if (e.sci / percentile20 < 100) {\n        matchExpression.push(e['end'], \"#3CC6C2\");\n      } else {\n        matchExpression.push(e['end'], \"#1DBFBC\");\n      }\n    });\n    matchExpression.push(this.state.selectedCountry, '#e8ae40'); // Last value is the default, used where there is no data\n\n    matchExpression.push('rgba(0, 0, 0, 0)'); // //console.log(this.state.selectedOption, prevState.selectedOption);\n\n    this.map.on('load', () => {\n      this.map.addControl(new mapboxgl.AttributionControl({\n        customAttribution: \"Africapolis\"\n      })); // Add Country shape\n\n      this.map.addSource('africapolis_country', {\n        type: 'vector',\n        url: 'mapbox://mapbox.country-boundaries-v1'\n      }); // Add Country layer\n\n      this.map.addLayer({\n        id: 'country',\n        source: 'africapolis_country',\n        type: 'fill',\n        'source-layer': 'country_boundaries',\n        filter: [\"match\", [\"get\", \"iso_3166_1\"], [\"TJ\", \"IR\", \"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\"], false, true],\n        paint: {\n          'fill-color': matchExpression,\n          'fill-opacity': 0.9\n        }\n      });\n      this.map.on('click', 'country', e => {\n        this.popUp.remove();\n        this.onUpdate(e.features[0].properties.iso_3166_1, e.features[0].properties.name_en, e.features[0].properties.region);\n      });\n      this.map.on('mousemove', 'country', e => {\n        if (this.state.selectedCountry !== e.features[0].properties.iso_3166_1) {\n          this.map.getCanvas().style.cursor = 'pointer';\n          let coordinates = [e.lngLat.lng, e.lngLat.lat];\n          let sciPopup = [];\n          let rankPopup = [];\n          let sciColor = [];\n          let rankPopupRegion = [];\n          let regionNumber = regionTotal[e.features[0].properties.region];\n          selected.forEach((d, i) => {\n            if (d.end === e.features[0].properties.iso_3166_1) {\n              sciPopup = Math.round(d.sci / percentile20);\n              rankPopup = rank_country[i];\n\n              if (d.sci / percentile20 < 1) {\n                sciColor.push(\"#F3F2E8\");\n              } else if (d.sci / percentile20 < 2) {\n                sciColor.push(\"#D4EBE2\");\n              } else if (d.sci / percentile20 < 3) {\n                sciColor.push(\"#B6E3DB\");\n              } else if (d.sci / percentile20 < 5) {\n                sciColor.push(\"#97DCD5\");\n              } else if (d.sci / percentile20 < 10) {\n                sciColor.push(\"#79D5CF\");\n              } else if (d.sci / percentile20 < 25) {\n                sciColor.push(\"#5ACEC9\");\n              } else if (d.sci / percentile20 < 100) {\n                sciColor.push(\"#3CC6C2\");\n              } else {\n                sciColor.push(\"#1DBFBC\");\n              }\n            }\n          });\n\n          if (scidataRankRegionCode[e.features[0].properties.region]) {\n            scidataRankRegionCode[e.features[0].properties.region].map((d, i) => e.features[0].properties.iso_3166_1 === d ? rankPopupRegion.push(scidataRankRegion[e.features[0].properties.region][i]) : null);\n          }\n\n          this.popUp.setLngLat(coordinates).setHTML(`<strong>${e.features[0].properties.name_en}</strong> ${sciPopup}<little>x</little><br/>\n                              <span>Rank:</span><bold>${rankPopup}</bold><span>/194</span><br/>\n                                <small>In ${e.features[0].properties.region}:</small><bold>${rankPopupRegion}</bold><span>/${regionNumber}</span>`).addTo(this.map);\n          var popupElem = this.popUp.getElement();\n          popupElem.style.color = sciColor[0];\n        } else {\n          this.popUp.remove();\n        }\n      });\n      this.map.on('mouseleave', 'country', e => {\n        this.map.getCanvas().style.cursor = '';\n        this.popUp.remove();\n      });\n    });\n    this.setState({\n      name: \"Nigeria\"\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.button !== this.state.button) {\n      this.onUpdate(this.state.selectedCountry, this.state.name, this.state.region);\n    }\n  }\n\n  //5 Countries with the highest SCI\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.topleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.headwrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 43\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonwrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.button === \"From\" ? classes.buttonActive : classes.button,\n      onClick: () => this.state.button === \"To\" ? this.setState({\n        button: \"From\"\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.state.button === \"To\" ? classes.buttonActive : classes.button,\n      onClick: () => this.state.button === \"From\" ? this.setState({\n        button: \"To\"\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }\n    }, \"To\")), /*#__PURE__*/React.createElement(\"headtitle\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, \" \", this.state.name)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 58\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }\n    }, \"5 Most Connected Countries\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 33\n      }\n    }, \"SCI\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 45\n      }\n    }, \"Region\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }\n    }, top5_list[0].end ? top5_list.map((e, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 20\n      }\n    }, countryData[top5_list[i].end][0]), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 64\n      }\n    }, top5_list[i].sciScaled, \"x\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: countryData[top5_list[i].end][1] === this.state.region ? classes.regionsel : classes.normal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 98\n      }\n    }, countryData[top5_list[i].end][1]))) : null)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }, \"Regional average\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 32.0 / 15.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      data: result.sort((a, b) => a.region.localeCompare(b.region)),\n      style: {\n        marginTop: \"10px\"\n      },\n      onClick: e => this.moveRegion(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"region\",\n      interval: 0,\n      style: {\n        textAnchor: 'middle',\n        fontFamily: 'Arial',\n        fill: 'rgba(255, 255, 255, 1)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      content: tooltip,\n      cursor: {\n        fill: 'rgba(255, 255, 255, 0.3)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"sciScaled\",\n      fill: \"#3CC6C2\",\n      id: \"region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }, result.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      cursor: \"pointer\",\n      key: `cell-${index}`,\n      fill: entry.region === this.state.region ? '#e8ae40' : '#3CC6C2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"VariableInfoWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }\n    }, \"What is the Social Connectedness Index?\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 81\n      }\n    }), \"The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 161\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 166\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 19\n      }\n    }, \"Methodology\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 47\n      }\n    }), \"We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 618\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 623\n      }\n    }), \"The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"color\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 27\n      }\n    }, \"Click the right button to check more detail and download the data on the Facebook page\"), \" \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialIcon, {\n      icon: \"facebook\",\n      className: \"FB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: classes.mapContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.legend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }\n    }, legend), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://africapolis.org\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.logo,\n      src: logo,\n      alt: \"Africapolis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","sciOriginal","countryData","classes","BarChart","Cell","Bar","Tooltip","XAxis","ResponsiveContainer","ReactGA","logo","MaterialIcon","initialize","pageview","window","location","search","pathname","accessToken","colors","top5_list","result","regionTotal","Africa","Americas","Asia","Europe","Oceania","asc","arr","sort","a","b","quantile","q","sorted","pos","length","base","Math","floor","rest","undefined","legend","backgroundColor","tooltip","e","payload","region","sciScaled","Application","Component","constructor","props","onUpdate","ISO2","Name","Region","setState","selectedCountry","sci","map","state","button","push","start","end","selected","scidata","scidataRank","scidataRankRegion","scidataRankRegionCode","Object","keys","k","slice","rank_region","v","indexOf","percentile20","sortedSCI","rank_country","top5","round","reduced","reduce","m","d","count","item","numbers","name","matchExpression","forEach","remove","addLayer","id","source","type","filter","paint","on","features","properties","iso_3166_1","getCanvas","style","cursor","coordinates","lngLat","lng","lat","sciPopup","rankPopup","sciColor","rankPopupRegion","regionNumber","i","popUp","setLngLat","setHTML","name_en","addTo","popupElem","getElement","color","rendered","obj","removeLayer","moveRegion","activeLabel","flyTo","center","zoom","essential","componentDidMount","Popup","closeButton","closeOnClick","Map","container","mapContainer","attributionControl","addControl","AttributionControl","customAttribution","addSource","url","componentDidUpdate","prevProps","prevState","render","topleft","headwrapper","buttonwrapper","buttonActive","table","regionsel","normal","localeCompare","marginTop","textAnchor","fontFamily","fill","entry","index","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport sciOriginal from './sci.json';\r\nimport countryData from './country.json';\r\nimport classes from './Site.module.css';\r\nimport { BarChart, Cell, Bar, Tooltip, XAxis,ResponsiveContainer} from 'recharts';\r\nimport ReactGA from 'react-ga';\r\nimport './index.css';\r\nimport logo from './OECD_white_EN.png';\r\nimport MaterialIcon from 'material-icons-react';\r\n\r\n\r\nReactGA.initialize('UA-128268752-1');\r\nReactGA.pageview(window.location.search+window.location.pathname);\r\n\r\n//iso_3166_1_alpha_3\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\",\"#333333\"]\r\n\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\nlet top5_list=[[],[],[],[],[]];\r\nlet result=[];\r\n\r\n\r\n\r\nconst regionTotal={Africa:55,Americas:40,Asia:46,Europe:42,Oceania:12}\r\n\r\nconst asc = arr => arr.sort((a, b) => a - b);\r\n\r\nconst quantile = (arr, q) => {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n        return sorted[base];\r\n    }\r\n};\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connectedness</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x\"} <small>{\"(20th percentile)\"}</small></div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n<div><span style={{backgroundColor: colors[8]}}></span>{\"Data not available\"}</div>\r\n</div>\r\n);\r\n\r\nconst tooltip = e => {\r\n  if (e.payload[0]) {\r\n  return ( <div className={classes.tooltip}> {e.payload[0].payload.region} <br/>SCI {e.payload[0].payload.sciScaled}x</div> ) }\r\n}\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 40,\r\n      lat: 30,\r\n      zoom: 2,\r\n      selectedCountry: \"NG\",\r\n      name: \"\",\r\n      region: \"Africa\",\r\n      button: \"From\",\r\n      rendered: \"\"\r\n    };\r\n  }\r\n\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nlet sci=[];\r\nsciOriginal.map(e=>this.state.button===\"From\"? sci.push({start:e.start,end:e.end,sci:e.sci}) : sci.push({end:e.start,start:e.end,sci:e.sci}))\r\n\r\nlet selected = [];\r\nlet scidata= [];\r\nlet scidataRank = [];\r\nlet scidataRankRegion = {Africa:[],Americas:[],Asia:[],Europe:[],Oceania:[]}\r\nlet scidataRankRegionCode = {Africa:[],Americas:[],Asia:[],Europe:[],Oceania:[]}\r\nsci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\nselected.map(e => {\r\n  scidata.push(e.sci)\r\n  scidataRank.push(e.sci)\r\n  scidataRankRegion[countryData[e.end][1]].push(e.sci)\r\n  scidataRankRegionCode[countryData[e.end][1]].push(e.end)\r\n})\r\n\r\n\r\nObject.keys(scidataRankRegion).map(\r\n  k => {\r\n    let sorted = scidataRankRegion[k].slice().sort((a,b) => b-a);\r\n    let rank_region=scidataRankRegion[k].map(v => sorted.indexOf(v)+1);\r\n    scidataRankRegion[k]=rank_region\r\n  }\r\n )\r\n\r\n     this.popUp = new mapboxgl.Popup({\r\n              closeButton: false,\r\n              closeOnClick: false\r\n          });\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom,\r\n      attributionControl: false\r\n    });\r\n                  let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n                  let sortedSCI=scidata.sort((a,b) => b-a);\r\n                  let rank_country=scidataRank.map(v => sortedSCI.indexOf(v)+1 );\r\n\r\n                  let percentile20 = quantile(scidata, .20)\r\n                  selected.map(e => {\r\n                    e.region=countryData[e.end][1]\r\n                    e.sciScaled= Math.round(e.sci/percentile20)\r\n                    if(e.sci===top5[0]) {top5_list[0]=e}\r\n                    else if(e.sci===top5[1]) {top5_list[1]=e}\r\n                    else if(e.sci===top5[2]) {top5_list[2]=e}\r\n                    else if(e.sci===top5[3]) {top5_list[3]=e}\r\n                    else if(e.sci===top5[4]) {top5_list[4]=e}\r\n                  })\r\n                                // Calculate the sums and group data (while tracking count)\r\n                  const reduced = selected.reduce(function(m, d){\r\n                      if(!m[d.region]){\r\n                        m[d.region] = {...d, count: 1};\r\n                        return m;\r\n                      }\r\n                      m[d.region].sciScaled += d.sciScaled;\r\n                      m[d.region].count += 1;\r\n                      return m;\r\n                   },{});\r\n\r\n                   // Create new array from grouped data and compute the average\r\n                      result = Object.keys(reduced).map(function(k){\r\n                       const item  = reduced[k];\r\n                       return {\r\n                           region: item.region,\r\n                           sciScaled: Math.round(item.sciScaled/item.count*100)/100,\r\n                       }\r\n                   })\r\n\r\n                   let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n                   // Calculate color values for each country based on 'hdi' value\r\n                   selected.forEach( e => {\r\n                   if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n                   else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n                   else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n                   else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n                   else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n                   else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n                   else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n                   else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n                   });\r\n\r\n                   matchExpression.push(this.state.selectedCountry, '#e8ae40');\r\n                   // Last value is the default, used where there is no data\r\n                   matchExpression.push('rgba(0, 0, 0, 0)');\r\n                   // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n\r\n                       this.map.on('load', () => {\r\n\r\n                         this.map.addControl(new mapboxgl.AttributionControl({customAttribution: \"Africapolis\"}));\r\n                   // Add Country shape\r\n                         this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mapbox.country-boundaries-v1'});\r\n\r\n                   // Add Country layer\r\n                         this.map.addLayer({\r\n                           id: 'country',\r\n                           source:'africapolis_country',\r\n                           type: 'fill',\r\n                           'source-layer':'country_boundaries',\r\n                           filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"TJ\",\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\" ], false, true ],\r\n                           paint: {\r\n                             'fill-color': matchExpression,\r\n                             'fill-opacity': 0.9\r\n                           }\r\n                         });\r\n\r\n                           this.map.on('click', 'country', e =>  {\r\n                              this.popUp.remove()\r\n                              this.onUpdate(e.features[0].properties.iso_3166_1,e.features[0].properties.name_en,e.features[0].properties.region)\r\n                               });\r\n\r\n                           this.map.on('mousemove', 'country', e =>  {\r\n                              if(this.state.selectedCountry!==e.features[0].properties.iso_3166_1) {\r\n                              this.map.getCanvas().style.cursor = 'pointer';\r\n                              let coordinates = [e.lngLat.lng, e.lngLat.lat];\r\n                              let sciPopup=[];\r\n                              let rankPopup=[];\r\n                              let sciColor=[];\r\n                              let rankPopupRegion=[];\r\n                              let regionNumber=regionTotal[e.features[0].properties.region];\r\n\r\n                              selected.forEach( (d,i) => {\r\n                              if(d.end===e.features[0].properties.iso_3166_1) {\r\n                                sciPopup=Math.round(d.sci/percentile20)\r\n                                rankPopup=rank_country[i]\r\n\r\n                                if(d.sci/percentile20 < 1) {sciColor.push(\"#F3F2E8\");}\r\n                                else if (d.sci/percentile20 < 2) {sciColor.push(\"#D4EBE2\");}\r\n                                else if (d.sci/percentile20 < 3) {sciColor.push(\"#B6E3DB\");}\r\n                                else if (d.sci/percentile20 < 5) {sciColor.push(\"#97DCD5\");}\r\n                                else if (d.sci/percentile20 < 10) {sciColor.push(\"#79D5CF\");}\r\n                                else if (d.sci/percentile20 < 25) {sciColor.push(\"#5ACEC9\");}\r\n                                else if (d.sci/percentile20 < 100) {sciColor.push(\"#3CC6C2\");}\r\n                                else {sciColor.push(\"#1DBFBC\");}\r\n                              }\r\n                              });\r\n\r\n                            if(scidataRankRegionCode[e.features[0].properties.region]) {\r\n                              scidataRankRegionCode[e.features[0].properties.region].map(\r\n                                (d,i)=> e.features[0].properties.iso_3166_1===d? rankPopupRegion.push(scidataRankRegion[e.features[0].properties.region][i]) : null\r\n                            )}\r\n\r\n\r\n                          \t\tthis.popUp\r\n                                .setLngLat(coordinates)\r\n                          \t\t\t.setHTML(\r\n                                `<strong>${e.features[0].properties.name_en}</strong> ${sciPopup}<little>x</little><br/>\r\n                              <span>Rank:</span><bold>${rankPopup}</bold><span>/194</span><br/>\r\n                                <small>In ${e.features[0].properties.region}:</small><bold>${rankPopupRegion}</bold><span>/${regionNumber}</span>`\r\n                                )\r\n                          \t\t\t.addTo(this.map);\r\n                                var popupElem = this.popUp.getElement();\r\n                                popupElem.style.color = sciColor[0];\r\n                              } else {this.popUp.remove()}\r\n                            });\r\n\r\n                            this.map.on('mouseleave', 'country', e =>  {\r\n                              this.map.getCanvas().style.cursor = ''\r\n                              this.popUp.remove()\r\n                            });\r\n\r\n                       });\r\n\r\n                       this.setState({name: \"Nigeria\"})\r\n\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState){\r\n  if(prevState.button !== this.state.button)\r\n  {this.onUpdate(this.state.selectedCountry, this.state.name, this.state.region)}\r\n}\r\n\r\nonUpdate = (ISO2, Name, Region) => {\r\n\r\n              this.setState({selectedCountry:ISO2})\r\n\r\n              let sci=[];\r\n              sciOriginal.map(e=>this.state.button===\"From\"? sci.push({start:e.start,end:e.end,sci:e.sci}) : sci.push({end:e.start,start:e.end,sci:e.sci}))\r\n\r\n\r\n              let selected = [];\r\n              let scidata= [];\r\n              let scidataRank = [];\r\n              let scidataRankRegion = {Africa:[],Americas:[],Asia:[],Europe:[],Oceania:[]}\r\n              let scidataRankRegionCode = {Africa:[],Americas:[],Asia:[],Europe:[],Oceania:[]}\r\n              sci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\n              selected.map(e => {\r\n                scidata.push(e.sci)\r\n                scidataRank.push(e.sci)\r\n                scidataRankRegion[countryData[e.end][1]].push(e.sci)\r\n                scidataRankRegionCode[countryData[e.end][1]].push(e.end)\r\n\r\n              })\r\n\r\n\r\n              Object.keys(scidataRankRegion).map(\r\n                k => {\r\n                  let sorted = scidataRankRegion[k].slice().sort((a,b) => b-a);\r\n                  let rank_region=scidataRankRegion[k].map(v => sorted.indexOf(v)+1);\r\n                  scidataRankRegion[k]=rank_region\r\n                }\r\n               )\r\n\r\n\r\n              let percentile20 = quantile(scidata, .20)\r\n              //selected.map(e => e.sci = e.sci/ percentile20)\r\n\r\n              let sortedSCI=scidata.sort((a,b) => b-a);\r\n              let rank_country=scidataRank.map(v => sortedSCI.indexOf(v)+1 );\r\n              let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n              selected.map(e => {\r\n                e.region=countryData[e.end][1]\r\n                e.sciScaled= Math.round(e.sci/percentile20)\r\n                if(e.sci===top5[0]) {top5_list[0]=e}\r\n                else if(e.sci===top5[1]) {top5_list[1]=e}\r\n                else if(e.sci===top5[2]) {top5_list[2]=e}\r\n                else if(e.sci===top5[3]) {top5_list[3]=e}\r\n                else if(e.sci===top5[4]) {top5_list[4]=e}\r\n              })\r\n\r\n              //top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\r\n\r\n                            // Calculate the sums and group data (while tracking count)\r\n              const reduced = selected.reduce(function(m, d){\r\n                  if(!m[d.region]){\r\n                    m[d.region] = {...d, count: 1};\r\n                    return m;\r\n                  }\r\n                  m[d.region].sciScaled += d.sciScaled;\r\n                  m[d.region].count += 1;\r\n                  return m;\r\n               },{});\r\n\r\n               // Create new array from grouped data and compute the average\r\n                  result = Object.keys(reduced).map(function(k){\r\n                   const item  = reduced[k];\r\n                   return {\r\n                       region: item.region,\r\n                       sciScaled: Math.round(item.sciScaled/item.count*100)/100,\r\n                       numbers:item.count\r\n                   }\r\n               })\r\n\r\n            // console.log(JSON.stringify(result,null,4));\r\n\r\n              this.setState({name:Name,region:Region})\r\n\r\n              let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n              // Calculate color values for each country based on 'hdi' value\r\n              selected.forEach( e => {\r\n              if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n              else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n              else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n              else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n              else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n              else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n              else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n              else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n              });\r\n\r\n              matchExpression.push(this.state.selectedCountry, '#e8ae40');\r\n              // Last value is the default, used where there is no data\r\n              matchExpression.push('rgba(0, 0, 0, 0)');\r\n\r\n              // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n\r\n              this.remove('country');\r\n\r\n              this.map.addLayer({\r\n                id: 'country',\r\n                source:'africapolis_country',\r\n                type: 'fill',\r\n                filter: [ \"match\", [\"get\", \"iso_3166_1\"], [\"IR\",\"CN\", \"GL\", \"SJ\", \"TM\", \"EH\", \"KP\",\"TJ\" ], false, true ],\r\n                'source-layer':'country_boundaries',\r\n                paint: {\r\n                  'fill-color': matchExpression,\r\n                  'fill-opacity': 0.9\r\n                }\r\n              });\r\n              this.map.on('mousemove', 'country', e =>  {\r\n                if(this.state.selectedCountry!==e.features[0].properties.iso_3166_1) {\r\n                this.map.getCanvas().style.cursor = 'pointer';\r\n                let coordinates = [e.lngLat.lng, e.lngLat.lat];\r\n                let sciPopup=[];\r\n                let rankPopup=[];\r\n                let sciColor=[];\r\n                let rankPopupRegion=[];\r\n                let regionNumber=regionTotal[e.features[0].properties.region];\r\n\r\n                selected.forEach( (d,i) => {\r\n                if(d.end===e.features[0].properties.iso_3166_1) {\r\n                  sciPopup=Math.round(d.sci/percentile20)\r\n                  rankPopup=rank_country[i]\r\n\r\n                  if(d.sci/percentile20 < 1) {sciColor.push(\"#F3F2E8\");}\r\n                  else if (d.sci/percentile20 < 2) {sciColor.push(\"#D4EBE2\");}\r\n                  else if (d.sci/percentile20 < 3) {sciColor.push(\"#B6E3DB\");}\r\n                  else if (d.sci/percentile20 < 5) {sciColor.push(\"#97DCD5\");}\r\n                  else if (d.sci/percentile20 < 10) {sciColor.push(\"#79D5CF\");}\r\n                  else if (d.sci/percentile20 < 25) {sciColor.push(\"#5ACEC9\");}\r\n                  else if (d.sci/percentile20 < 100) {sciColor.push(\"#3CC6C2\");}\r\n                  else {sciColor.push(\"#1DBFBC\");}\r\n                }\r\n                });\r\n\r\n              if(scidataRankRegionCode[e.features[0].properties.region]) {\r\n                scidataRankRegionCode[e.features[0].properties.region].map(\r\n                  (d,i)=> e.features[0].properties.iso_3166_1===d? rankPopupRegion.push(scidataRankRegion[e.features[0].properties.region][i]) : null\r\n              )}\r\n\r\n\r\n                this.popUp\r\n                  .setLngLat(coordinates)\r\n                  .setHTML(\r\n                  `<strong>${e.features[0].properties.name_en}</strong> ${sciPopup}<little>x</little><br/>\r\n                <span>Rank:</span><bold>${rankPopup}</bold><span>/194</span><br/>\r\n                  <small>In ${e.features[0].properties.region}:</small><bold>${rankPopupRegion}</bold><span>/${regionNumber}</span>`\r\n                  )\r\n                  .addTo(this.map);\r\n                  var popupElem = this.popUp.getElement();\r\n                  popupElem.style.color = sciColor[0];\r\n                } else {this.popUp.remove()}\r\n               });\r\n               this.setState({rendered:\"Yes\"})\r\n}\r\n\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\n\r\nmoveRegion = e => {\r\n      if(e) {\r\n      switch(e.activeLabel){\r\n      case 'Africa':\r\n      this.map.flyTo({center: [32.259 ,2.036], zoom:3.14, essential: true }); break;\r\n      case 'Americas':\r\n      this.map.flyTo({center: [-69.390 ,22.259], zoom:1.82, essential: true }); break;\r\n      case 'Asia':\r\n      this.map.flyTo({center: [104.687 ,32.592], zoom:3.14, essential: true }); break;\r\n      case 'Europe':\r\n      this.map.flyTo({center: [27.920 ,56.907], zoom:3.19, essential: true }); break;\r\n      case 'Oceania':\r\n      this.map.flyTo({center: [155.731 ,-16.435], zoom:3.11, essential: true }); break;\r\n      default:\r\n      return null;\r\n            }}\r\n}\r\n\r\n\r\n\r\n//5 Countries with the highest SCI\r\nrender() {\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> <div className={classes.headwrapper}> <div className={classes.buttonwrapper}>\r\n          <button className={this.state.button===\"From\"? classes.buttonActive : classes.button} onClick={() => this.state.button===\"To\"? this.setState({button:\"From\"}) : null}>{\"From\"}</button>\r\n          <button className={this.state.button===\"To\"? classes.buttonActive : classes.button} onClick={() => this.state.button===\"From\"? this.setState({button:\"To\"}) : null}>{\"To\"}</button></div>\r\n          <headtitle> {this.state.name}</headtitle></div><br/>\r\n        <span>5 Most Connected Countries</span>\r\n        <table className={classes.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Country</th><th>SCI</th><th>Region</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {top5_list[0].end? top5_list.map((e,i)=>\r\n              <tr> <td>{countryData[top5_list[i].end][0]}</td> <td>{top5_list[i].sciScaled}x</td><td className={ countryData[top5_list[i].end][1]===this.state.region? classes.regionsel : classes.normal }>{countryData[top5_list[i].end][1]}</td></tr>\r\n              ) : null}\r\n            </tbody>\r\n          </table>\r\n        <br/> <span>Regional average</span>\r\n          <ResponsiveContainer width='100%' aspect={32.0/15.0}>\r\n            <BarChart data={result.sort((a, b) => a.region.localeCompare(b.region))} style={{marginTop: \"10px\"}}  onClick={e => this.moveRegion(e)} >\r\n              <XAxis dataKey=\"region\" interval={0} style={{ textAnchor: 'middle', fontFamily: 'Arial', fill: 'rgba(255, 255, 255, 1)' }} />\r\n              <Tooltip content={tooltip} cursor={{fill: 'rgba(255, 255, 255, 0.3)'}} />\r\n              <Bar dataKey=\"sciScaled\" fill=\"#3CC6C2\" id=\"region\">\r\n                {result.map((entry,index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Cell cursor=\"pointer\" key={`cell-${index}`} fill={entry.region ===  this.state.region ? '#e8ae40' : '#3CC6C2' } />\r\n\t\t\t\t\t\t\t\t\t))}\r\n  \t\t\t\t\t\t</Bar>\r\n  \t\t\t\t\t</BarChart>\r\n          </ResponsiveContainer>\r\n              <div className=\"VariableInfoWrapper\">\r\n                  <MaterialIcon icon=\"info\"/>\r\n                  <span><strong>What is the Social Connectedness Index?</strong><br/>\r\n                  The Social Connectedness Index measures the strength of connectedness between two geographic areas as represented by Facebook friendship ties.<br/><br/>\r\n                  <strong>Methodology</strong><br/>\r\n                  We use aggregated friendship connections on Facebook to measure social connectedness between geographies. Locations are assigned to users based on information they provide, connection information, and location services they have opted into. We use these friendships to estimate the probability a pair of users in these countries are Facebook friends and map this to an index score called the Social Connectedness Index (SCI). If the SCI is twice as large between two pairs of regions, it means the users in the first region-pair are about twice as likely to be connected than the second region-pair.<br/><br/>\r\n                The figure shows a heat map of the social connectedness. For each country in our data, the colors highlight connections of the focal country, given in orange. The lightest color corresponds to the 20th percentile of the connectedness to the focal country; darker colors correspond to closer connections.\r\n                <br/><br/><color>Click the right button to check more detail and download the data on the Facebook page</color> </span>\r\n                <a href=\"https://dataforgood.fb.com/tools/social-connectedness-index/#:~:text=The%20Social%20Connectedness%20Index%20measures,social%20mobility%2C%20trade%20and%20more.\">\r\n                    <MaterialIcon icon=\"facebook\" className=\"FB\"/>\r\n                </a>\r\n              </div>\r\n           </div>\r\n        <div ref={el => this.mapContainer = el} className={classes.mapContainer} />\r\n        <div className={classes.legend}>{legend}</div>\r\n          <a href=\"https://africapolis.org\">\r\n            <img className={classes.logo} src={logo} alt=\"Africapolis\"/>\r\n          </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}