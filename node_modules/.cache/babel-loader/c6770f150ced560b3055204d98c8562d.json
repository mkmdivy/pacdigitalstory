{"ast":null,"code":"import _defineProperty from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\mapboxAndReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import ReactDOM from'react-dom';import mapboxgl from'mapbox-gl';import axios from'axios';import Select from'react-select';import sci from'./sci.json';import countryData from'./country.json';import classes from'./Site.module.css';//iso_3166_1_alpha_3\n///6808: 520  baseline\n//// divide 20% percentile per country//////\n//// Access token for Africapolis mapbox account\nmapboxgl.accessToken='pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';var colors=[\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\"];//////////////////\n// sort array ascending\nconsole.log(countryData[\"AF\"]);var top5_list=[[],[],[],[],[]];var asc=function asc(arr){return arr.sort(function(a,b){return a-b;});};var sum=function sum(arr){return arr.reduce(function(a,b){return a+b;},0);};var mean=function mean(arr){return sum(arr)/arr.length;};var quantile=function quantile(arr,q){var sorted=asc(arr);var pos=(sorted.length-1)*q;var base=Math.floor(pos);var rest=pos-base;if(sorted[base+1]!==undefined){return sorted[base]+rest*(sorted[base+1]-sorted[base]);}else{return sorted[base];}};var legend=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,\"Social Connected Index\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[0]}}),\"< 1x (20th percentile selected country)\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[1]}}),\"1-2x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[2]}}),\"2-3x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[3]}}),\"3-5x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[4]}}),\"5-10x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[5]}}),\"10-25x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[6]}}),\"25-100x\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{backgroundColor:colors[7]}}),\">= 100x\"));var agglomeration_fill_color=[\"step\",[\"get\",\"Population_2015\"],\"hsla(0, 0%, 8%, 0.5)\",10000,\"hsla(55, 30%, 93%, 0.5)\",30000,\"hsla(60, 100%, 90%, 0.5)\",100000,\"hsla(98, 55%, 81%, 0.5)\",300000,\"hsla(166, 44%, 65%, 0.5)\",1000000,\"hsla(186, 53%, 51%, 0.5)\",3000000,\"hsla(197, 74%, 43%, 0.5)\",11847635,\"hsla(197, 74%, 43%, 0.5)\"];var agglomeration_stroke_color=[\"step\",[\"get\",\"Population_2015\"],\"hsla(0, 0%, 8%, 1)\",10000,\"hsla(55, 30%, 93%, 1)\",30000,\"hsla(60, 100%, 90%, 1)\",100000,\"hsla(98, 55%, 81%, 1)\",300000,\"hsla(166, 44%, 65%, 1)\",1000000,\"hsla(186, 53%, 51%, 1)\",3000000,\"hsla(197, 74%, 43%, 1)\",11847635,\"hsla(197, 74%, 43%, 1)\"];// const options = [];\n// country_label.map(v=>{return options.push({label:v, value:v})});\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\n//// Basic setting of the map\nvar Application=/*#__PURE__*/function(_React$Component){_inherits(Application,_React$Component);var _super=_createSuper(Application);function Application(props){var _this;_classCallCheck(this,Application);_this=_super.call(this,props);_this.onUpdate=function(update){_this.setState({update:update});};_this.onChange=function(values){_this.setState({values:values});};_this.onFilter=function(filters){_this.setState(_defineProperty({},filters.target.id,!_this.state[filters.target.id]));};_this.remove=function(obj){_this.map.removeLayer(obj);};_this.add_shape=function(obj,filter1){_this.map.addLayer({id:obj,source:'africapolis_country',type:'fill','source-layer':'africacontinent_complete-ays128',filter:filter1,paint:{'fill-color':'#fdfdf5','fill-opacity':[\"interpolate\",[\"linear\"],[\"zoom\"],0,1,5,0]//8.5\n}}// layer order\n);//console.log(this.map.getSource(\"africapolis_country\"))\n};_this.state={lng:5,lat:0,zoom:2,selectedOption:{label:'Africa',value:''},selectedCountry:\"AE\",name:\"Click the country to check SCI\"};return _this;}_createClass(Application,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//// Initial map setting\nvar selected=[];var scidata=[];sci.map(function(e){return e.start===_this2.state.selectedCountry?selected.push(e):null;});console.log(selected);selected.map(function(e){return scidata.push(e.sci);});console.log(scidata);console.log(quantile(scidata,.20));//Object.keys(selected).map(e => console.log(e))\nthis.map=new mapboxgl.Map({container:this.mapContainer,style:'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi',/// Select mapstyle from mapbox studio\ncenter:[this.state.lng,this.state.lat],zoom:this.state.zoom});// this.map.on('move', () => {\n//   this.setState({\n//   lng: this.map.getCenter().lng.toFixed(4),\n//   lat: this.map.getCenter().lat.toFixed(4),\n//   zoom: this.map.getZoom().toFixed(2)\n//   });\n// });\n//// Import Africapolis agglomerations from mapbox\nthis.map.on('load',function(){// Add Country shape\n_this2.map.addSource('africapolis_country',{type:'vector',url:'mapbox://mapbox.country-boundaries-v1'});// Add Agglomerations\n//    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\n// Add Country label\n//    this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mkmd.6v0ckax4'});\n// Add Region labelled\n//    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\n// Add Country layer\n_this2.map.addLayer({id:'country',source:'africapolis_country',type:'fill','source-layer':'country_boundaries',//filter:[\"==\",\"Region_ID\",1],\npaint:{'fill-color':'#fdfdf5','fill-opacity':['case',['boolean',['feature-state','hover'],false],0.2,0]}});_this2.map.on('click','country',function(e){//console.log(e.features[0].properties.iso_3166_1)\n_this2.setState({selectedCountry:e.features[0].properties.iso_3166_1});var selected=[];var scidata=[];sci.map(function(e){return e.start===_this2.state.selectedCountry?selected.push(e):null;});selected.map(function(e){return scidata.push(e.sci);});var percentile20=quantile(scidata,.20);//selected.map(e => e.sci = e.sci/ percentile20)\nconsole.log(selected);var top5=scidata.sort(function(a,b){return b-a;}).slice(0,5);selected.map(function(e){if(e.sci===top5[0]){top5_list[0]=e;}else if(e.sci===top5[1]){top5_list[1]=e;}else if(e.sci===top5[2]){top5_list[2]=e;}else if(e.sci===top5[3]){top5_list[3]=e;}else if(e.sci===top5[4]){top5_list[4]=e;}});top5_list.map(function(e){return e.sciScaled=Math.round(e.sci/percentile20);});console.log(top5);console.log(top5_list);_this2.setState({name:e.features[0].properties.name_en});var matchExpression=['match',['get','iso_3166_1']];// Calculate color values for each country based on 'hdi' value\nselected.forEach(function(e){// 1 2 3 5 10 25 100 above100\n//e.sci = e.sci/percentile20\nif(e.sci/percentile20<1){matchExpression.push(e['end'],\"#F3F2E8\");}else if(e.sci/percentile20<2){matchExpression.push(e['end'],\"#D4EBE2\");}else if(e.sci/percentile20<3){matchExpression.push(e['end'],\"#B6E3DB\");}else if(e.sci/percentile20<5){matchExpression.push(e['end'],\"#97DCD5\");}else if(e.sci/percentile20<10){matchExpression.push(e['end'],\"#79D5CF\");}else if(e.sci/percentile20<25){matchExpression.push(e['end'],\"#5ACEC9\");}else if(e.sci/percentile20<100){matchExpression.push(e['end'],\"#3CC6C2\");}else{matchExpression.push(e['end'],\"#1DBFBC\");}});matchExpression.push(_this2.state.selectedCountry,'yellow');//console.log(matchExpression)\n// Last value is the default, used where there is no data\nmatchExpression.push('rgba(0, 0, 0, 0)');// //console.log(this.state.selectedOption, prevState.selectedOption);\n_this2.remove('country');console.log(matchExpression);_this2.map.addLayer({id:'country',source:'africapolis_country',type:'fill','source-layer':'country_boundaries',//filter:[\"==\",\"Region_ID\",1],\npaint:{'fill-color':matchExpression,'fill-opacity':0.9}});});var hoveredID=null;_this2.map.on('mouseenter','country',function(e){if(e.features.length>0){if(hoveredID){_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:false});}hoveredID=e.features[0].id;_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:true});}});_this2.map.on('mouseleave','country',function(e){if(hoveredID){_this2.map.setFeatureState({source:'africapolis_country',id:hoveredID,sourceLayer:'country_boundaries'},{hover:false});}hoveredID=null;});});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){//if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\nif(prevState!==this.state){}}},{key:\"render\",value:function render(){var _this3=this;var selectedOption=this.state.selectedOption;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.topleft},\" \",this.state.name,\" \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[0].end?\"Five countries with the highest SCI\":null,/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[0].end?\"1. \"+countryData[top5_list[0].end][0]:null,top5_list[0].end?\", \"+countryData[top5_list[0].end][1]:null,\" \",top5_list[0].sciScaled,/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[1].end?\"2. \"+countryData[top5_list[1].end][0]:null,top5_list[1].end?\", \"+countryData[top5_list[1].end][1]:null,\"  \",top5_list[1].sciScaled,/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[2].end?\"3. \"+countryData[top5_list[2].end][0]:null,top5_list[2].end?\", \"+countryData[top5_list[2].end][1]:null,\"  \",top5_list[2].sciScaled,/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[3].end?\"4. \"+countryData[top5_list[3].end][0]:null,top5_list[3].end?\", \"+countryData[top5_list[3].end][1]:null,\"  \",top5_list[3].sciScaled,/*#__PURE__*/React.createElement(\"br\",null),\" \",top5_list[4].end?\"5. \"+countryData[top5_list[4].end][0]:null,top5_list[4].end?\", \"+countryData[top5_list[4].end][1]:null,\"  \",top5_list[4].sciScaled),/*#__PURE__*/React.createElement(\"div\",null,\"Longitude: \",this.state.lng,\" | Latitude: \",this.state.lat,\" | Zoom: \",this.state.zoom),/*#__PURE__*/React.createElement(\"div\",{ref:function ref(el){return _this3.mapContainer=el;},className:classes.mapContainer}),/*#__PURE__*/React.createElement(\"div\",{className:classes.legend},legend));}}]);return Application;}(React.Component);ReactDOM.render(/*#__PURE__*/React.createElement(Application,null),document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","sci","countryData","classes","accessToken","colors","console","log","top5_list","asc","arr","sort","a","b","sum","reduce","mean","length","quantile","q","sorted","pos","base","Math","floor","rest","undefined","legend","backgroundColor","agglomeration_fill_color","agglomeration_stroke_color","Application","props","onUpdate","update","setState","onChange","values","onFilter","filters","target","id","state","remove","obj","map","removeLayer","add_shape","filter1","addLayer","source","type","filter","paint","lng","lat","zoom","selectedOption","label","value","selectedCountry","name","selected","scidata","e","start","push","Map","container","mapContainer","style","center","on","addSource","url","features","properties","iso_3166_1","percentile20","top5","slice","sciScaled","round","name_en","matchExpression","forEach","hoveredID","setFeatureState","sourceLayer","hover","prevProps","prevState","topleft","end","el","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport sci from './sci.json';\r\nimport countryData from './country.json';\r\nimport classes from './Site.module.css';\r\n//iso_3166_1_alpha_3\r\n///6808: 520  baseline\r\n//// divide 20% percentile per country//////\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\nconst colors = [\"#F3F2E8\",\"#D4EBE2\",\"#B6E3DB\",\"#97DCD5\",\"#79D5CF\",\"#5ACEC9\",\"#3CC6C2\",\"#1DBFBC\"]\r\n\r\n\r\n\r\n//////////////////\r\n\r\n// sort array ascending\r\nconsole.log(countryData[\"AF\"])\r\nlet top5_list=[[],[],[],[],[]];\r\n\r\nconst asc = arr => arr.sort((a, b) => a - b);\r\n\r\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\r\n\r\nconst mean = arr => sum(arr) / arr.length;\r\n\r\nconst quantile = (arr, q) => {\r\n    const sorted = asc(arr);\r\n    const pos = (sorted.length - 1) * q;\r\n    const base = Math.floor(pos);\r\n    const rest = pos - base;\r\n    if (sorted[base + 1] !== undefined) {\r\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\r\n    } else {\r\n        return sorted[base];\r\n    }\r\n};\r\n\r\nconst legend = (\r\n<div>\r\n  <h4>Social Connected Index</h4>\r\n<div><span style={{backgroundColor: colors[0]}}></span>{\"< 1x (20th percentile selected country)\"}</div>\r\n<div><span style={{backgroundColor: colors[1]}}></span>1-2x</div>\r\n<div><span style={{backgroundColor: colors[2]}}></span>2-3x</div>\r\n<div><span style={{backgroundColor: colors[3]}}></span>3-5x</div>\r\n<div><span style={{backgroundColor: colors[4]}}></span>5-10x</div>\r\n<div><span style={{backgroundColor: colors[5]}}></span>10-25x</div>\r\n<div><span style={{backgroundColor: colors[6]}}></span>25-100x</div>\r\n<div><span style={{backgroundColor: colors[7]}}></span>{\">= 100x\"}</div>\r\n</div>\r\n);\r\n\r\n\r\nconst agglomeration_fill_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 0.5)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 0.5)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 0.5)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 0.5)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 0.5)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 0.5)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 0.5)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 0.5)\"\r\n ]\r\n const agglomeration_stroke_color =[\r\n  \"step\",\r\n  [\"get\", \"Population_2015\"],\r\n  \"hsla(0, 0%, 8%, 1)\",\r\n  10000,\r\n  \"hsla(55, 30%, 93%, 1)\",\r\n  30000,\r\n  \"hsla(60, 100%, 90%, 1)\",\r\n  100000,\r\n  \"hsla(98, 55%, 81%, 1)\",\r\n  300000,\r\n  \"hsla(166, 44%, 65%, 1)\",\r\n  1000000,\r\n  \"hsla(186, 53%, 51%, 1)\",\r\n  3000000,\r\n  \"hsla(197, 74%, 43%, 1)\",\r\n  11847635,\r\n  \"hsla(197, 74%, 43%, 1)\"\r\n ]\r\n\r\n// const options = [];\r\n// country_label.map(v=>{return options.push({label:v, value:v})});\r\n// Values.map(v=>{return options.push({label:agglo_label[v[1]-1]+\", \"+country_label[v[0]-1], value:v})});\r\n// console.log(Values.map(v=>{return {label:agglo_label[v[1]]+\", \"+country_label[v[0]], value:v}}))\r\n\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 2,\r\n      selectedOption: {label: 'Africa', value: ''},\r\n      selectedCountry: \"AE\",\r\n      name: \"Click the country to check SCI\",\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n//// Initial map setting\r\n\r\nlet selected = [];\r\nlet scidata= [];\r\nsci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\nconsole.log(selected)\r\nselected.map(e => scidata.push(e.sci))\r\nconsole.log(scidata)\r\nconsole.log(quantile(scidata, .20))\r\n//Object.keys(selected).map(e => console.log(e))\r\n\r\n\r\n\r\n     this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ckguwdhux0j7719p9rz2hpmpi', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n    // this.map.on('move', () => {\r\n    //   this.setState({\r\n    //   lng: this.map.getCenter().lng.toFixed(4),\r\n    //   lat: this.map.getCenter().lat.toFixed(4),\r\n    //   zoom: this.map.getZoom().toFixed(2)\r\n    //   });\r\n    // });\r\n//// Import Africapolis agglomerations from mapbox\r\n    this.map.on('load', () => {\r\n\r\n// Add Country shape\r\n      this.map.addSource('africapolis_country', { type: 'vector', url: 'mapbox://mapbox.country-boundaries-v1'});\r\n// Add Agglomerations\r\n  //    this.map.addSource('africapolis_agglos', { type: 'vector', url: 'mapbox://mkmd.3e0rk98j'});\r\n// Add Country label\r\n  //    this.map.addSource('africapolis_country_label', { type: 'vector', url: 'mapbox://mkmd.6v0ckax4'});\r\n// Add Region labelled\r\n  //    this.map.addSource('africapolis_region_label', { type: 'vector', url: 'mapbox://mkmd.3yut44ue'});\r\n\r\n// Add Country layer\r\n      this.map.addLayer({\r\n            id: 'country',\r\n            source:'africapolis_country',\r\n            type: 'fill',\r\n            'source-layer':'country_boundaries',\r\n            //filter:[\"==\",\"Region_ID\",1],\r\n            paint: {\r\n\r\n              'fill-color': '#fdfdf5',\r\n              'fill-opacity': ['case',['boolean', ['feature-state', 'hover'], false],0.2,0]\r\n            }\r\n        });\r\n\r\n\r\n        this.map.on('click', 'country', e =>  {\r\n              //console.log(e.features[0].properties.iso_3166_1)\r\n              this.setState({selectedCountry:e.features[0].properties.iso_3166_1})\r\n\r\n              let selected = [];\r\n              let scidata= [];\r\n              sci.map(e => e.start===this.state.selectedCountry? selected.push(e) : null)\r\n              selected.map(e => scidata.push(e.sci))\r\n              let percentile20 = quantile(scidata, .20)\r\n              //selected.map(e => e.sci = e.sci/ percentile20)\r\n              console.log(selected)\r\n\r\n              let top5=scidata.sort((a,b) => b-a).slice(0,5);\r\n              selected.map(e => {\r\n                if(e.sci===top5[0]) {top5_list[0]=e}\r\n                else if(e.sci===top5[1]) {top5_list[1]=e}\r\n                else if(e.sci===top5[2]) {top5_list[2]=e}\r\n                else if(e.sci===top5[3]) {top5_list[3]=e}\r\n                else if(e.sci===top5[4]) {top5_list[4]=e}\r\n              })\r\n              top5_list.map(e => e.sciScaled= Math.round(e.sci/percentile20))\r\n              console.log(top5)\r\n              console.log(top5_list)\r\n\r\n              this.setState({name:e.features[0].properties.name_en})\r\n\r\n              let matchExpression = ['match', ['get', 'iso_3166_1']];\r\n\r\n              // Calculate color values for each country based on 'hdi' value\r\n              selected.forEach( e => {\r\n\r\n              // 1 2 3 5 10 25 100 above100\r\n\r\n              //e.sci = e.sci/percentile20\r\n              if(e.sci/percentile20 < 1) {matchExpression.push(e['end'], \"#F3F2E8\");}\r\n              else if (e.sci/percentile20 < 2) {matchExpression.push(e['end'], \"#D4EBE2\");}\r\n              else if (e.sci/percentile20 < 3) {matchExpression.push(e['end'], \"#B6E3DB\");}\r\n              else if (e.sci/percentile20 < 5) {matchExpression.push(e['end'], \"#97DCD5\");}\r\n              else if (e.sci/percentile20 < 10) {matchExpression.push(e['end'], \"#79D5CF\");}\r\n              else if (e.sci/percentile20 < 25) {matchExpression.push(e['end'], \"#5ACEC9\");}\r\n              else if (e.sci/percentile20 < 100) {matchExpression.push(e['end'], \"#3CC6C2\");}\r\n              else {matchExpression.push(e['end'], \"#1DBFBC\");}\r\n              });\r\n\r\n              matchExpression.push(this.state.selectedCountry, 'yellow');\r\n\r\n              //console.log(matchExpression)\r\n\r\n              // Last value is the default, used where there is no data\r\n              matchExpression.push('rgba(0, 0, 0, 0)');\r\n\r\n              // //console.log(this.state.selectedOption, prevState.selectedOption);\r\n              this.remove('country');\r\n              console.log(matchExpression)\r\n              this.map.addLayer({\r\n                id: 'country',\r\n                source:'africapolis_country',\r\n                type: 'fill',\r\n                'source-layer':'country_boundaries',\r\n                //filter:[\"==\",\"Region_ID\",1],\r\n                paint: {\r\n                  'fill-color': matchExpression,\r\n                  'fill-opacity': 0.9\r\n                }\r\n              });\r\n\r\n\r\n            });\r\n\r\n\r\n\r\nvar hoveredID=null;\r\n        this.map.on('mouseenter', 'country', e =>  {\r\n          if (e.features.length > 0) {\r\n                if (hoveredID) {\r\n                    this.map.setFeatureState(\r\n                    { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                    { hover: false }\r\n                    );\r\n                    }\r\n                hoveredID = e.features[0].id;\r\n                this.map.setFeatureState(\r\n                { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                { hover: true }\r\n                );\r\n                }\r\n            });\r\n\r\n        this.map.on('mouseleave', 'country', e =>  {\r\n          if (hoveredID) {\r\n                      this.map.setFeatureState(\r\n                      { source: 'africapolis_country', id:hoveredID, sourceLayer:'country_boundaries' },\r\n                      { hover: false }\r\n                      );\r\n                    }\r\n                    hoveredID = null;\r\n                });\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n    //if( prevState.selectedOption !== this.state.selectedOption || prevState.update[0] !== this.state.update[0]) {\r\n\r\n    if( prevState !== this.state) {\r\n\r\n\r\n  }\r\n}\r\n\r\nonUpdate = update => {\r\n  this.setState({ update })\r\n}\r\n\r\nonChange = values => {\r\n  this.setState({ values })\r\n}\r\n\r\nonFilter = filters => {\r\n  this.setState({[filters.target.id]: !this.state[filters.target.id]});\r\n}\r\n\r\nremove = obj => {\r\n    this.map.removeLayer(obj)\r\n}\r\n\r\nadd_shape = (obj,filter1) => {\r\n    this.map.addLayer({\r\n        id: obj,\r\n        source:'africapolis_country',\r\n        type: 'fill',\r\n        'source-layer':'africacontinent_complete-ays128',\r\n        filter:filter1,\r\n        paint: {\r\n          'fill-color': '#fdfdf5',\r\n          'fill-opacity': [\"interpolate\",[\"linear\"],[\"zoom\"], 0,1,5,0] //8.5\r\n        }\r\n    }\r\n   // layer order\r\n  );\r\n    //console.log(this.map.getSource(\"africapolis_country\"))\r\n\r\n}\r\n\r\nrender() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <div>\r\n        <div className={classes.topleft}> {this.state.name} <br/>\r\n          <br/> {top5_list[0].end? \"Five countries with the highest SCI\" : null}\r\n          <br/> {top5_list[0].end? \"1. \"+countryData[top5_list[0].end][0] : null}{top5_list[0].end? \", \"+countryData[top5_list[0].end][1] : null} {top5_list[0].sciScaled}\r\n          <br/> {top5_list[1].end? \"2. \"+countryData[top5_list[1].end][0] : null}{top5_list[1].end? \", \"+countryData[top5_list[1].end][1] : null}  {top5_list[1].sciScaled}\r\n          <br/> {top5_list[2].end? \"3. \"+countryData[top5_list[2].end][0] : null}{top5_list[2].end? \", \"+countryData[top5_list[2].end][1] : null}  {top5_list[2].sciScaled}\r\n          <br/> {top5_list[3].end? \"4. \"+countryData[top5_list[3].end][0] : null}{top5_list[3].end? \", \"+countryData[top5_list[3].end][1] : null}  {top5_list[3].sciScaled}\r\n          <br/> {top5_list[4].end? \"5. \"+countryData[top5_list[4].end][0] : null}{top5_list[4].end? \", \"+countryData[top5_list[4].end][1] : null}  {top5_list[4].sciScaled}\r\n\r\n\r\n           </div>\r\n        <div>Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom: {this.state.zoom}</div>\r\n        <div ref={el => this.mapContainer = el} className={classes.mapContainer} />\r\n        <div className={classes.legend}>{legend}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}