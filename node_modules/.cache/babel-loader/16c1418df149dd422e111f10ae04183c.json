{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios'; //// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA'; //// Basic setting of the map\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    }); //// Color setting\n\n    var agglomeration_fill_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 0.5)\", 10000, \"hsla(55, 30%, 93%, 0.5)\", 30000, \"hsla(60, 100%, 90%, 0.5)\", 100000, \"hsla(98, 55%, 81%, 0.5)\", 300000, \"hsla(166, 44%, 65%, 0.5)\", 1000000, \"hsla(186, 53%, 51%, 0.5)\", 2000000, \"hsla(197, 74%, 43%, 0.5)\", 11847635, \"hsla(197, 74%, 43%, 0.5)\"];\n    var agglomeration_stroke_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 1)\", 10000, \"hsla(55, 30%, 93%, 1)\", 30000, \"hsla(60, 100%, 90%, 1)\", 100000, \"hsla(98, 55%, 81%, 1)\", 300000, \"hsla(166, 44%, 65%, 1)\", 1000000, \"hsla(186, 53%, 51%, 1)\", 2000000, \"hsla(197, 74%, 43%, 1)\", 11847635, \"hsla(197, 74%, 43%, 1)\"]; //// Import Africapolis agglomerations from mapbox\n\n    map.on('load', function () {\n      map.addSource('africapolis_agglos', {\n        type: 'vector',\n        url: 'mapbox://mkmd.10cgedso'\n      });\n      map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-1jc3vn',\n        filter: [\">\", \"Population_2015\", 0],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 1,\n          'circle-color': agglomeration_fill_color // Mapbox Style Specification paint properties\n\n        },\n        layout: {// Mapbox Style Specification layout properties\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","accessToken","Application","Component","constructor","props","state","lng","lat","zoom","componentDidMount","map","Map","container","mapContainer","style","center","on","setState","getCenter","toFixed","getZoom","agglomeration_fill_color","agglomeration_stroke_color","addSource","type","url","addLayer","id","source","filter","paint","layout","render","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\n\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3\r\n    };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n\r\n\r\n//// Initial map setting\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n    map.on('move', () => {\r\n    this.setState({\r\n    lng: map.getCenter().lng.toFixed(4),\r\n    lat: map.getCenter().lat.toFixed(4),\r\n    zoom: map.getZoom().toFixed(2)\r\n    });\r\n    });\r\n//// Color setting\r\n\r\n  var agglomeration_fill_color =[\r\n                           \"step\",\r\n                           [\"get\", \"Population_2015\"],\r\n                           \"hsla(0, 0%, 8%, 0.5)\",\r\n                           10000,\r\n                           \"hsla(55, 30%, 93%, 0.5)\",\r\n                           30000,\r\n                           \"hsla(60, 100%, 90%, 0.5)\",\r\n                           100000,\r\n                           \"hsla(98, 55%, 81%, 0.5)\",\r\n                           300000,\r\n                           \"hsla(166, 44%, 65%, 0.5)\",\r\n                           1000000,\r\n                           \"hsla(186, 53%, 51%, 0.5)\",\r\n                           2000000,\r\n                           \"hsla(197, 74%, 43%, 0.5)\",\r\n                           11847635,\r\n                           \"hsla(197, 74%, 43%, 0.5)\"\r\n                          ]\r\n\r\n\r\n  var agglomeration_stroke_color =[\r\n                           \"step\",\r\n                           [\"get\", \"Population_2015\"],\r\n                           \"hsla(0, 0%, 8%, 1)\",\r\n                           10000,\r\n                           \"hsla(55, 30%, 93%, 1)\",\r\n                           30000,\r\n                           \"hsla(60, 100%, 90%, 1)\",\r\n                           100000,\r\n                           \"hsla(98, 55%, 81%, 1)\",\r\n                           300000,\r\n                           \"hsla(166, 44%, 65%, 1)\",\r\n                           1000000,\r\n                           \"hsla(186, 53%, 51%, 1)\",\r\n                           2000000,\r\n                           \"hsla(197, 74%, 43%, 1)\",\r\n                           11847635,\r\n                           \"hsla(197, 74%, 43%, 1)\"\r\n                          ]\r\n\r\n\r\n\r\n//// Import Africapolis agglomerations from mapbox\r\n    map.on('load', function() {\r\n\r\n      map.addSource(\r\n        'africapolis_agglos',\r\n      {\r\n        type: 'vector',\r\n        url: 'mapbox://mkmd.10cgedso'\r\n      }\r\n    );\r\n\r\n      map.addLayer({\r\n        id: 'agglomerations',\r\n        source:'africapolis_agglos',\r\n        type: 'circle',\r\n        'source-layer':'africapolis2020-1jc3vn',\r\n        filter:[\">\",\"Population_2015\",0],\r\n        paint: {\r\n\r\n   'circle-stroke-color': agglomeration_stroke_color,\r\n   'circle-stroke-width': 1,\r\n   'circle-color': agglomeration_fill_color\r\n          // Mapbox Style Specification paint properties\r\n        },\r\n        layout: {\r\n          // Mapbox Style Specification layout properties\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\r\n      </div>\r\n\r\n\r\n\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}