{"ast":null,"code":"var _jsxFileName = \"C:\\\\mapboxAndReact\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport axios from 'axios';\nimport Select from 'react-select'; //// Access token for Africapolis mapbox account\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA'; //// Basic setting of the map\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, () => {\n        map.on('load', function () {\n          remove('agglomerations');\n          add_country('agglomerations', 'NER');\n        });\n        console.log(`Option selected:`, this.state.selectedOption.value);\n      });\n    };\n\n    this.state = {\n      lng: 5,\n      lat: 0,\n      zoom: 3\n    };\n  }\n\n  componentDidMount() {\n    //// Initial map setting\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p',\n      /// Select mapstyle from mapbox studio\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('move', () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    }); //// Color setting\n\n    var agglomeration_fill_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 0.5)\", 10000, \"hsla(55, 30%, 93%, 0.5)\", 30000, \"hsla(60, 100%, 90%, 0.5)\", 100000, \"hsla(98, 55%, 81%, 0.5)\", 300000, \"hsla(166, 44%, 65%, 0.5)\", 1000000, \"hsla(186, 53%, 51%, 0.5)\", 2000000, \"hsla(197, 74%, 43%, 0.5)\", 11847635, \"hsla(197, 74%, 43%, 0.5)\"];\n    var agglomeration_stroke_color = [\"step\", [\"get\", \"Population_2015\"], \"hsla(0, 0%, 8%, 1)\", 10000, \"hsla(55, 30%, 93%, 1)\", 30000, \"hsla(60, 100%, 90%, 1)\", 100000, \"hsla(98, 55%, 81%, 1)\", 300000, \"hsla(166, 44%, 65%, 1)\", 1000000, \"hsla(186, 53%, 51%, 1)\", 2000000, \"hsla(197, 74%, 43%, 1)\", 11847635, \"hsla(197, 74%, 43%, 1)\"]; //// Import Africapolis agglomerations from mapbox\n\n    map.on('load', function () {\n      map.addSource('africapolis_agglos', {\n        type: 'vector',\n        url: 'mapbox://mkmd.3e0rk98j'\n      });\n      map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\">\", \"Population_2015\", 0],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      });\n    }); ////\n\n    function remove(obj) {\n      map.removeLayer(obj);\n    }\n\n    function add_country(obj, country) {\n      map.addLayer({\n        id: 'agglomerations',\n        source: 'africapolis_agglos',\n        type: 'circle',\n        'source-layer': 'africapolis2020-3mv6ux',\n        filter: [\"all\", [\"==\", \"ISO3\", country], [\">\", \"Population_2015\", 0]],\n        paint: {\n          'circle-stroke-color': agglomeration_stroke_color,\n          'circle-stroke-width': 3,\n          'circle-color': agglomeration_fill_color\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    const options = [{\n      label: \"Angola\",\n      value: \"AGO\"\n    }, {\n      label: \"Burundi\",\n      value: \"BDI\"\n    }, {\n      label: \"Benin\",\n      value: \"BEN\"\n    }, {\n      label: \"Burkina Faso\",\n      value: \"BFA\"\n    }, {\n      label: \"Botswana\",\n      value: \"BWA\"\n    }, {\n      label: \"Central African Republic\",\n      value: \"CAF\"\n    }, {\n      label: \"Cote d`Ivoire\",\n      value: \"CIV\"\n    }, {\n      label: \"Cameroon\",\n      value: \"CMR\"\n    }, {\n      label: \"Democratic Republic of the Congo\",\n      value: \"COD\"\n    }, {\n      label: \"Republic of the Congo\",\n      value: \"COG\"\n    }, {\n      label: \"Cabo Verde\",\n      value: \"CPV\"\n    }, {\n      label: \"Djibouti\",\n      value: \"DJI\"\n    }, {\n      label: \"Algeria\",\n      value: \"DZA\"\n    }, {\n      label: \"Egypt\",\n      value: \"EGY\"\n    }, {\n      label: \"Eritrea\",\n      value: \"ERI\"\n    }, {\n      label: \"Ethiopia\",\n      value: \"ETH\"\n    }, {\n      label: \"Gabon\",\n      value: \"GAB\"\n    }, {\n      label: \"Ghana\",\n      value: \"GHA\"\n    }, {\n      label: \"Guinea\",\n      value: \"GIN\"\n    }, {\n      label: \"The Gambia\",\n      value: \"GMB\"\n    }, {\n      label: \"Guinea-Bissau\",\n      value: \"GNB\"\n    }, {\n      label: \"Equatorial Guinea\",\n      value: \"GNQ\"\n    }, {\n      label: \"Kenya\",\n      value: \"KEN\"\n    }, {\n      label: \"Liberia\",\n      value: \"LBR\"\n    }, {\n      label: \"Libya\",\n      value: \"LBY\"\n    }, {\n      label: \"Lesotho\",\n      value: \"LSO\"\n    }, {\n      label: \"Morocco\",\n      value: \"MAR\"\n    }, {\n      label: \"Mali\",\n      value: \"MLI\"\n    }, {\n      label: \"Mozambique\",\n      value: \"MOZ\"\n    }, {\n      label: \"Mauritania\",\n      value: \"MRT\"\n    }, {\n      label: \"Malawi\",\n      value: \"MWI\"\n    }, {\n      label: \"Namibia\",\n      value: \"NAM\"\n    }, {\n      label: \"Niger\",\n      value: \"NER\"\n    }, {\n      label: \"Nigeria\",\n      value: \"NGA\"\n    }, {\n      label: \"Rwanda\",\n      value: \"RWA\"\n    }, {\n      label: \"Sudan\",\n      value: \"SDN\"\n    }, {\n      label: \"Senegal\",\n      value: \"SEN\"\n    }, {\n      label: \"Sierra Leone\",\n      value: \"SLE\"\n    }, {\n      label: \"Somalia\",\n      value: \"SOM\"\n    }, {\n      label: \"South Sudan\",\n      value: \"SSD\"\n    }, {\n      label: \"Sao Tome and Principe\",\n      value: \"STP\"\n    }, {\n      label: \"Kingdom of Eswatini\",\n      value: \"SWZ\"\n    }, {\n      label: \"Chad\",\n      value: \"TCD\"\n    }, {\n      label: \"Togo\",\n      value: \"TGO\"\n    }, {\n      label: \"Tunisia\",\n      value: \"TUN\"\n    }, {\n      label: \"Tanzania\",\n      value: \"TZA\"\n    }, {\n      label: \"Uganda\",\n      value: \"UGA\"\n    }, {\n      label: \"South Africa\",\n      value: \"ZAF\"\n    }, {\n      label: \"Zambia\",\n      value: \"ZMB\"\n    }, {\n      label: \"Zimbabwe\",\n      value: \"ZWE\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Application, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["C:/mapboxAndReact/src/index.js"],"names":["React","ReactDOM","mapboxgl","axios","Select","accessToken","Application","Component","constructor","props","state","selectedOption","handleChange","setState","map","on","remove","add_country","console","log","value","lng","lat","zoom","componentDidMount","Map","container","mapContainer","style","center","getCenter","toFixed","getZoom","agglomeration_fill_color","agglomeration_stroke_color","addSource","type","url","addLayer","id","source","filter","paint","obj","removeLayer","country","render","options","label","el","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\n\r\n//// Access token for Africapolis mapbox account\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWttZCIsImEiOiJjajBqYjJpY2owMDE0Mndsbml0d2V1ZXczIn0.el8wQmA-TSJp2ggX8fJ1rA';\r\n\r\n\r\n//// Basic setting of the map\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: 5,\r\n      lat: 0,\r\n      zoom: 3\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n//// Initial map setting\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mkmd/ck88rk21s2ep51jpjjnyz9o3p', /// Select mapstyle from mapbox studio\r\n      center: [this.state.lng, this.state.lat],\r\n      zoom: this.state.zoom\r\n    });\r\n\r\n    map.on('move', () => {\r\n      this.setState({\r\n      lng: map.getCenter().lng.toFixed(4),\r\n      lat: map.getCenter().lat.toFixed(4),\r\n      zoom: map.getZoom().toFixed(2)\r\n      });\r\n    });\r\n//// Color setting\r\n\r\n  var agglomeration_fill_color =[\r\n   \"step\",\r\n   [\"get\", \"Population_2015\"],\r\n   \"hsla(0, 0%, 8%, 0.5)\",\r\n   10000,\r\n   \"hsla(55, 30%, 93%, 0.5)\",\r\n   30000,\r\n   \"hsla(60, 100%, 90%, 0.5)\",\r\n   100000,\r\n   \"hsla(98, 55%, 81%, 0.5)\",\r\n   300000,\r\n   \"hsla(166, 44%, 65%, 0.5)\",\r\n   1000000,\r\n   \"hsla(186, 53%, 51%, 0.5)\",\r\n   2000000,\r\n   \"hsla(197, 74%, 43%, 0.5)\",\r\n   11847635,\r\n   \"hsla(197, 74%, 43%, 0.5)\"\r\n  ]\r\n\r\n\r\n  var agglomeration_stroke_color =[\r\n   \"step\",\r\n   [\"get\", \"Population_2015\"],\r\n   \"hsla(0, 0%, 8%, 1)\",\r\n   10000,\r\n   \"hsla(55, 30%, 93%, 1)\",\r\n   30000,\r\n   \"hsla(60, 100%, 90%, 1)\",\r\n   100000,\r\n   \"hsla(98, 55%, 81%, 1)\",\r\n   300000,\r\n   \"hsla(166, 44%, 65%, 1)\",\r\n   1000000,\r\n   \"hsla(186, 53%, 51%, 1)\",\r\n   2000000,\r\n   \"hsla(197, 74%, 43%, 1)\",\r\n   11847635,\r\n   \"hsla(197, 74%, 43%, 1)\"\r\n  ]\r\n\r\n\r\n\r\n//// Import Africapolis agglomerations from mapbox\r\n    map.on('load', function() {\r\n      map.addSource(\r\n        'africapolis_agglos',\r\n      {\r\n        type: 'vector',\r\n        url: 'mapbox://mkmd.3e0rk98j'\r\n      }\r\n    );\r\n\r\n    map.addLayer({\r\n        id: 'agglomerations',\r\n        source:'africapolis_agglos',\r\n        type: 'circle',\r\n        'source-layer':'africapolis2020-3mv6ux',\r\n        filter:[\">\",\"Population_2015\",0],\r\n        paint: {\r\n         'circle-stroke-color': agglomeration_stroke_color,\r\n         'circle-stroke-width': 3,\r\n         'circle-color': agglomeration_fill_color\r\n        }\r\n      });\r\n    });\r\n////\r\n\r\nfunction remove(obj) {map.removeLayer(obj)}\r\n\r\nfunction add_country(obj,country) {map.addLayer({\r\n  id: 'agglomerations',\r\n  source:'africapolis_agglos',\r\n  type: 'circle',\r\n  'source-layer':'africapolis2020-3mv6ux',\r\n  filter:[\"all\",[\"==\",\"ISO3\",country],[\">\",\"Population_2015\",0]],\r\n  paint: {\r\n   'circle-stroke-color': agglomeration_stroke_color,\r\n   'circle-stroke-width': 3,\r\n   'circle-color': agglomeration_fill_color\r\n  }\r\n});\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nstate = {\r\n  selectedOption: null,\r\n};\r\nhandleChange = selectedOption => {\r\n  this.setState(\r\n    { selectedOption },\r\n    () => {\r\n      map.on('load', function(){\r\n         remove('agglomerations');\r\n         add_country('agglomerations','NER');\r\n       });\r\n      console.log(`Option selected:`, this.state.selectedOption.value)\r\n    }\r\n  );\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    const options = [{ label:\"Angola\",value:\"AGO\" },\r\n{ label:\"Burundi\",value:\"BDI\" },\r\n{ label:\"Benin\",value:\"BEN\" },\r\n{ label:\"Burkina Faso\",value:\"BFA\" },\r\n{ label:\"Botswana\",value:\"BWA\" },\r\n{ label:\"Central African Republic\",value:\"CAF\" },\r\n{ label:\"Cote d`Ivoire\",value:\"CIV\" },\r\n{ label:\"Cameroon\",value:\"CMR\" },\r\n{ label:\"Democratic Republic of the Congo\",value:\"COD\" },\r\n{ label:\"Republic of the Congo\",value:\"COG\" },\r\n{ label:\"Cabo Verde\",value:\"CPV\" },\r\n{ label:\"Djibouti\",value:\"DJI\" },\r\n{ label:\"Algeria\",value:\"DZA\" },\r\n{ label:\"Egypt\",value:\"EGY\" },\r\n{ label:\"Eritrea\",value:\"ERI\" },\r\n{ label:\"Ethiopia\",value:\"ETH\" },\r\n{ label:\"Gabon\",value:\"GAB\" },\r\n{ label:\"Ghana\",value:\"GHA\" },\r\n{ label:\"Guinea\",value:\"GIN\" },\r\n{ label:\"The Gambia\",value:\"GMB\" },\r\n{ label:\"Guinea-Bissau\",value:\"GNB\" },\r\n{ label:\"Equatorial Guinea\",value:\"GNQ\" },\r\n{ label:\"Kenya\",value:\"KEN\" },\r\n{ label:\"Liberia\",value:\"LBR\" },\r\n{ label:\"Libya\",value:\"LBY\" },\r\n{ label:\"Lesotho\",value:\"LSO\" },\r\n{ label:\"Morocco\",value:\"MAR\" },\r\n{ label:\"Mali\",value:\"MLI\" },\r\n{ label:\"Mozambique\",value:\"MOZ\" },\r\n{ label:\"Mauritania\",value:\"MRT\" },\r\n{ label:\"Malawi\",value:\"MWI\" },\r\n{ label:\"Namibia\",value:\"NAM\" },\r\n{ label:\"Niger\",value:\"NER\" },\r\n{ label:\"Nigeria\",value:\"NGA\" },\r\n{ label:\"Rwanda\",value:\"RWA\" },\r\n{ label:\"Sudan\",value:\"SDN\" },\r\n{ label:\"Senegal\",value:\"SEN\" },\r\n{ label:\"Sierra Leone\",value:\"SLE\" },\r\n{ label:\"Somalia\",value:\"SOM\" },\r\n{ label:\"South Sudan\",value:\"SSD\" },\r\n{ label:\"Sao Tome and Principe\",value:\"STP\" },\r\n{ label:\"Kingdom of Eswatini\",value:\"SWZ\" },\r\n{ label:\"Chad\",value:\"TCD\" },\r\n{ label:\"Togo\",value:\"TGO\" },\r\n{ label:\"Tunisia\",value:\"TUN\" },\r\n{ label:\"Tanzania\",value:\"TZA\" },\r\n{ label:\"Uganda\",value:\"UGA\" },\r\n{ label:\"South Africa\",value:\"ZAF\" },\r\n{ label:\"Zambia\",value:\"ZMB\" },\r\n{ label:\"Zimbabwe\",value:\"ZWE\" }];\r\n    return (\r\n      <div>\r\n        <div ref={el => this.mapContainer = el} className=\"mapContainer\" >\r\n        <Select\r\n                value={selectedOption}\r\n                onChange={this.handleChange}\r\n                options={options}\r\n              />\r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nReactDOM.render(<Application />, document.getElementById('app'));\r\n"]},"metadata":{},"sourceType":"module"}