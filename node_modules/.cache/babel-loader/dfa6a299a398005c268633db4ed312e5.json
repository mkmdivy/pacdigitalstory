{"ast":null,"code":"var _jsxFileName = \"C:\\\\greentech\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\nimport classes from './Site.module.css';\nimport { Badge, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; // import StackGrid from \"react-stack-grid\";\n\nimport { Web, Videocam, Description, PictureAsPdf } from '@material-ui/icons';\nimport { SpringGrid, layout, measureItems, makeResponsive } from 'react-stonecutter';\n\nconst App = props => {\n  const Grid = makeResponsive(measureItems(SpringGrid), {\n    maxWidth: 1920,\n    minPadding: 100\n  });\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(0.5)\n      }\n    }\n  }));\n  const chipclasses = useStyles();\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      background: \"rgba(45,45,45,1)\",\n      // match with the menu\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\n      // Overwrittes the different states of border\n      borderColor: state.isFocused ? \"rgba(255,255,255,1)\" : \"rgba(255,255,255,1)\" // Removes weird border around container      \n      // \"&:hover\": {\n      //   // Overwrittes the different states of border\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\n      // }\n\n    }),\n    menu: base => ({ ...base,\n      // override border radius to match the box\n      borderRadius: 0,\n      // kill the gap\n      marginTop: 0\n    }),\n    menuList: base => ({ ...base,\n      // kill the white space on first and last option\n      padding: 0\n    }),\n    singleValue: base => ({ ...base,\n      color: 'white'\n    })\n  };\n\n  const handleClick = e => {\n    setSelectedOption({\n      value: e,\n      label: e\n    });\n  };\n\n  const top5buttons = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: chipclasses.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      value: '',\n      onClick: e => handleClick(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"Select all\"), options.slice(0, 10).map((e, i) => /*#__PURE__*/React.createElement(Badge, {\n      badgeContent: freqSorted[i],\n      color: freqSorted[i] > 50 ? \"secondary\" : freqSorted[i] > 40 ? \"error\" : \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: e.value,\n      onClick: () => handleClick(e.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 126\n      }\n    }))));\n  };\n\n  const dataPresent = input => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      component: \"ul\",\n      columns: 5,\n      columnWidth: 150,\n      gutterWidth: 5,\n      gutterHeight: 5,\n      itemHeight: 200,\n      springConfig: {\n        stiffness: 170,\n        damping: 26\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, result.slice(0, 150).map((e, idx) => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: e.Link,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        key: idx,\n        className: e.Type === \"Website\" ? classes.buttonW : e.Type === 'Video' ? classes.buttonV : e.Type === 'Article' ? classes.buttonA : classes.buttonR,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 77\n        }\n      }, e.Name, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          right: 5,\n          bottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 245\n        }\n      }, e.Type === \"Website\" ? /*#__PURE__*/React.createElement(Web, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 315\n        }\n      }) : e.Type === 'Video' ? /*#__PURE__*/React.createElement(Videocam, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 342\n        }\n      }) : e.Type === 'Article' ? /*#__PURE__*/React.createElement(Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 378\n        }\n      }) : /*#__PURE__*/React.createElement(PictureAsPdf, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 395\n        }\n      })), \" \"));\n    })) //   <StackGrid\n    //   columnWidth={230}\n    //   gutterWidth={10}        \n    //   gridRef={e=> grid = e}\n    // >\n    // {result.slice(0,150).map((e,idx)=> {return <a href={e.Link} target=\"_blank\"><button key={idx} className={e.Type===\"Website\"? classes.buttonW : e.Type==='Video'?  classes.buttonV : e.Type==='Article'?  classes.buttonA : classes.buttonR}>{e.Name}<div style={{position:\"fixed\",right:5,bottom:5}}>{e.Type===\"Website\"? <Web/> : e.Type==='Video'? <Videocam/>  : e.Type==='Article'?  <Description/> : <PictureAsPdf/>}</div> </button><br/></a>})}\n    // </StackGrid>\n    ;\n  };\n\n  {\n    /* <button className={classes.buttonActive}>{e.Name}</button> */\n  }\n  const [selectedOption, setSelectedOption] = useState({\n    value: '',\n    label: 'Search'\n  });\n  console.log(selectedOption); // +\"  \"+e.freq\n\n  const options = [];\n  const wordcount = [];\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"]; // wordlist.map(e => options.push({value: e.name, label: e.name}))\n\n  greendb.map(e => {\n    e.keyword = e.Name.toUpperCase().split(' '); // e.keyword.map(x => wordcount.push(x))    \n  }); // greendb.map(e => console.log(e.keyword))\n\n  const [web, setweb] = useState(true);\n  const [video, setvideo] = useState(true);\n  const [report, setreport] = useState(true);\n  const [article, setarticle] = useState(true);\n  let typelist = [];\n\n  if (web) {\n    typelist.push(\"Website\");\n  }\n\n  if (video) {\n    typelist.push(\"Video\");\n  }\n\n  if (report) {\n    typelist.push(\"Report\");\n  }\n\n  if (article) {\n    typelist.push(\"Article\");\n  }\n\n  console.log(typelist);\n  let result = selectedOption.value == '' ? greendb.filter(e => typelist.includes(e.Type)) : greendb.filter(e => typelist.includes(e.Type) && e.keyword.includes(selectedOption.value));\n  result.map(e => e.keyword.map(x => wordcount.push(x)));\n  const wordresult = wordcount.filter(e => !wordAvoid.includes(e)); // console.log(wordcount)\n\n  const counts = {};\n  wordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1); // console.log(counts)\n  // console.log(selectedOption)\n\n  const keysSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  });\n  console.log(keysSorted); // bar,me,you,foo\n\n  const freqSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  }).map(key => counts[key]);\n  console.log(freqSorted);\n  keysSorted.map((e, idx) => options.push({\n    value: e,\n    label: e + \" \" + freqSorted[idx]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      right: 350,\n      top: 20,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Web, {\n    color: web ? 'white' : 'disabled',\n    onClick: e => web ? setweb(false) : setweb(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 66\n    }\n  }), /*#__PURE__*/React.createElement(Videocam, {\n    color: video ? 'white' : 'disabled',\n    onClick: e => video ? setvideo(false) : setvideo(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 152\n    }\n  }), /*#__PURE__*/React.createElement(Description, {\n    color: report ? 'white' : 'disabled',\n    onClick: e => report ? setreport(false) : setreport(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 251\n    }\n  }), /*#__PURE__*/React.createElement(PictureAsPdf, {\n    color: article ? 'white' : 'disabled',\n    onClick: e => article ? setarticle(false) : setarticle(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 357\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"Green Technologies Knowledge Resources Explorer\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: customStyles,\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  })), top5buttons()), dataPresent());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/greentech/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","classes","Badge","Chip","makeStyles","Web","Videocam","Description","PictureAsPdf","SpringGrid","layout","measureItems","makeResponsive","App","props","Grid","maxWidth","minPadding","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","chipclasses","customStyles","control","base","state","background","borderRadius","isFocused","borderColor","menu","marginTop","menuList","padding","singleValue","color","handleClick","e","setSelectedOption","value","label","top5buttons","target","options","slice","map","i","freqSorted","dataPresent","input","stiffness","damping","result","idx","Link","Type","buttonW","buttonV","buttonA","buttonR","Name","position","right","bottom","selectedOption","console","log","wordcount","wordAvoid","keyword","toUpperCase","split","web","setweb","video","setvideo","report","setreport","article","setarticle","typelist","push","filter","includes","x","wordresult","counts","num","keysSorted","Object","keys","sort","b","a","key","main","header","top","title","box"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\nimport classes from './Site.module.css';\r\nimport { Badge, Chip } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import StackGrid from \"react-stack-grid\";\r\nimport { Web, Videocam, Description, PictureAsPdf} from '@material-ui/icons';\r\nimport { SpringGrid, layout, measureItems, makeResponsive } from 'react-stonecutter';\r\n\r\n\r\nconst App = props => {\r\n\r\n\r\n  const Grid = makeResponsive(measureItems(SpringGrid), {\r\n    maxWidth: 1920,\r\n    minPadding: 100\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const chipclasses = useStyles();\r\n\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      background: \"rgba(45,45,45,1)\",\r\n      // match with the menu\r\n      borderRadius: state.isFocused ? \"3px 3px 0 0\" : 3,\r\n      // Overwrittes the different states of border\r\n      borderColor: state.isFocused ? \"rgba(255,255,255,1)\" : \"rgba(255,255,255,1)\",\r\n      // Removes weird border around container      \r\n      // \"&:hover\": {\r\n      //   // Overwrittes the different states of border\r\n      //   borderColor: state.isFocused ? \"red\" : \"blue\"\r\n\r\n      // }\r\n    }),\r\n    menu: base => ({\r\n      ...base,\r\n      // override border radius to match the box\r\n      borderRadius: 0,\r\n      // kill the gap\r\n      marginTop: 0\r\n    }),\r\n    menuList: base => ({\r\n      ...base,\r\n      // kill the white space on first and last option\r\n                 \r\n      padding: 0\r\n    }),\r\n    singleValue: base => ({\r\n      ...base,\r\n      color:'white'            \r\n    })\r\n\r\n\r\n  }\r\n\r\n \r\n\r\n  const handleClick = (e) => {        \r\n    setSelectedOption({value:e, label:e})    \r\n  }\r\n \r\n  const top5buttons = () => {\r\n    return (\r\n      <div class={chipclasses.root}>\r\n      <button value={''} onClick={(e) => handleClick(e.target.value)}>{\"Select all\"}</button>            \r\n      {options.slice(0,10).map((e,i)=> \r\n      <Badge badgeContent={freqSorted[i]} color={freqSorted[i] > 50? \"secondary\" : freqSorted[i] > 40? \"error\" : \"primary\" }><Chip  label={e.value} onClick={() => handleClick(e.value)} /></Badge>)\r\n      }      \r\n      </div>\r\n    )\r\n  \r\n  }    \r\n  \r\n  const dataPresent = (input) => {\r\n    return (\r\n      <Grid\r\n      component=\"ul\"\r\n      columns={5}\r\n      columnWidth={150}\r\n      gutterWidth={5}\r\n      gutterHeight={5}\r\n      itemHeight={200}\r\n      springConfig={{ stiffness: 170, damping: 26 }}\r\n>\r\n{/* {result.slice(0,150).map((e,idx)=> {return <li key={idx} >{e.Name} </li>})} */}\r\n{result.slice(0,150).map((e,idx)=> {return <a href={e.Link} target=\"_blank\"><button key={idx} className={e.Type===\"Website\"? classes.buttonW : e.Type==='Video'?  classes.buttonV : e.Type==='Article'?  classes.buttonA : classes.buttonR}>{e.Name}<div style={{position:\"fixed\",right:5,bottom:5}}>{e.Type===\"Website\"? <Web/> : e.Type==='Video'? <Videocam/>  : e.Type==='Article'?  <Description/> : <PictureAsPdf/>}</div> </button></a>})}\r\n</Grid>\r\n      //   <StackGrid\r\n      //   columnWidth={230}\r\n      //   gutterWidth={10}        \r\n      //   gridRef={e=> grid = e}\r\n      // >\r\n      // {result.slice(0,150).map((e,idx)=> {return <a href={e.Link} target=\"_blank\"><button key={idx} className={e.Type===\"Website\"? classes.buttonW : e.Type==='Video'?  classes.buttonV : e.Type==='Article'?  classes.buttonA : classes.buttonR}>{e.Name}<div style={{position:\"fixed\",right:5,bottom:5}}>{e.Type===\"Website\"? <Web/> : e.Type==='Video'? <Videocam/>  : e.Type==='Article'?  <Description/> : <PictureAsPdf/>}</div> </button><br/></a>})}\r\n      // </StackGrid>\r\n      \r\n    )\r\n  \r\n  }    \r\n\r\n{/* <button className={classes.buttonActive}>{e.Name}</button> */}\r\n\r\n  const [selectedOption, setSelectedOption] = useState({value: '', label: 'Search'});\r\n  console.log(selectedOption)\r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n// wordlist.map(e => options.push({value: e.name, label: e.name}))\r\n\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.toUpperCase().split(' ')\r\n  // e.keyword.map(x => wordcount.push(x))    \r\n})\r\n\r\n// greendb.map(e => console.log(e.keyword))\r\n\r\nconst [web, setweb] = useState(true);\r\nconst [video, setvideo] = useState(true);\r\nconst [report, setreport] = useState(true);\r\nconst [article, setarticle] = useState(true);\r\n\r\nlet typelist = []\r\nif(web){typelist.push(\"Website\")}\r\nif(video){typelist.push(\"Video\")}\r\nif(report){typelist.push(\"Report\")}\r\nif(article){typelist.push(\"Article\")}\r\nconsole.log(typelist)\r\n\r\nlet result = selectedOption.value==''? greendb.filter(e => (typelist.includes(e.Type))): greendb.filter(e => (typelist.includes(e.Type) && e.keyword.includes(selectedOption.value)))\r\nresult.map(e => e.keyword.map(x => wordcount.push(x)))\r\nconst wordresult = wordcount.filter(e => !wordAvoid.includes(e))\r\n// console.log(wordcount)\r\n\r\n\r\nconst counts = {};\r\n\r\nwordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1)\r\n\r\n\r\n// console.log(counts)\r\n\r\n\r\n// console.log(selectedOption)\r\nconst keysSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]})\r\nconsole.log(keysSorted);     // bar,me,you,foo\r\n\r\nconst freqSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]}).map(key => counts[key]);\r\nconsole.log(freqSorted);\r\n\r\nkeysSorted.map((e,idx) => options.push({value:e,label:e+\" \"+freqSorted[idx]}) )\r\n\r\n\r\n  \r\nreturn (\r\n<div class={classes.main}>\r\n  <div class={classes.header}>\r\n  <div style={{position:\"fixed\",right:350,top:20,color:\"white\"}}><Web color={web? 'white' :'disabled'} onClick={e=>web? setweb(false) : setweb(true)}/><Videocam color={video? 'white' :'disabled'} onClick={e=>video? setvideo(false) : setvideo(true)}/><Description color={report? 'white' :'disabled'} onClick={e=>report? setreport(false) : setreport(true)}/><PictureAsPdf color={article? 'white' :'disabled'} onClick={e=>article? setarticle(false) : setarticle(true)}/></div>\r\n    <div class={classes.title}>{\"Green Technologies Knowledge Resources Explorer\"}</div>    \r\n    <div class={classes.box}>\r\n    <Select \r\n    styles={customStyles}\r\n    options={options} \r\n    // isMulti \r\n    value={selectedOption}\r\n    onChange={setSelectedOption}\r\n    /></div>\r\n    {top5buttons()}\r\n  </div>\r\n{dataPresent()}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}