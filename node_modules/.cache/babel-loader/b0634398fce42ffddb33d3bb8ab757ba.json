{"ast":null,"code":"var _jsxFileName = \"C:\\\\worldbank\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Select from 'react-select';\nimport './index.css';\nimport greendb from './greendb.json';\nimport wordlist from './wordlist.json';\n\nconst App = props => {\n  useEffect(() => {\n    const top5buttons = input => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: setSelectedOption(options[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, options[0].label), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, options[1].label), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, options[2].label), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, options[3].label), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, options[4].label));\n    };\n  }, []);\n  const [selectedOption, setSelectedOption] = useState(null); // +\"  \"+e.freq\n\n  const options = [];\n  const wordcount = [];\n  const wordAvoid = [\"THE\", \"OF\", \"IN\", \"AND\", \"TO\", \"FOR\", \"A\", \"IS\", \"WITH\", \"ON\", \"FROM\", \"-\", \"USING\", \"HOW\", \"BY\", \"NEW\", \"INTO\", \"AN\", \"&\", \"WHAT\", \"ABOUT\", 2020, \"ARE\", \"AT\", \"IT\", \"CHANGE\", \"FIRST\", 10, \"WORLD?????S\", \"USE\", \"OVER\", \"HAS\", \"|\", \"ONE\", 2019, \"TIME\", 2050, \"OR\", \"?????\", \":\"]; // wordlist.map(e => options.push({value: e.name, label: e.name}))\n\n  greendb.map(e => {\n    e.keyword = e.Name.split(' ');\n    e.keyword.map(x => wordcount.push(x.toUpperCase()));\n  });\n  const wordresult = wordcount.filter(e => !wordAvoid.includes(e)); // console.log(wordcount)\n\n  const counts = {};\n  wordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1); // console.log(counts)\n  // console.log(selectedOption)\n\n  const keysSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  });\n  console.log(keysSorted); // bar,me,you,foo\n\n  const freqSorted = Object.keys(counts).sort(function (b, a) {\n    return counts[a] - counts[b];\n  }).map(key => counts[key]);\n  console.log(freqSorted);\n  keysSorted.map((e, idx) => options.push({\n    value: e,\n    label: e + \" \" + freqSorted[idx]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }, top5buttons('put'), /*#__PURE__*/React.createElement(Select, {\n    options: options // isMulti \n    ,\n    value: selectedOption,\n    onChange: setSelectedOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/worldbank/src/App.js"],"names":["React","useState","useRef","useEffect","Select","greendb","wordlist","App","props","top5buttons","input","setSelectedOption","options","label","selectedOption","wordcount","wordAvoid","map","e","keyword","Name","split","x","push","toUpperCase","wordresult","filter","includes","counts","num","keysSorted","Object","keys","sort","b","a","console","log","freqSorted","key","idx","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Select from 'react-select'\r\nimport './index.css';\r\nimport greendb from './greendb.json';\r\nimport wordlist from './wordlist.json';\r\n\r\n\r\n\r\nconst App = props => {\r\n\r\n  useEffect(() => { \r\n    const top5buttons = (input) => {\r\n      return (\r\n        <div>\r\n        <button onClick={setSelectedOption(options[0])}>{options[0].label}</button>\r\n        <button>{options[1].label}</button>\r\n        <button>{options[2].label}</button>\r\n        <button>{options[3].label}</button>\r\n        <button>{options[4].label}</button>\r\n        </div>\r\n      )\r\n    \r\n    }    \r\n  },[])\r\n\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  \r\n  // +\"  \"+e.freq\r\nconst options = []\r\nconst wordcount = []\r\nconst wordAvoid = [\"THE\",\"OF\",\"IN\",\"AND\",\"TO\",\"FOR\",\"A\",\"IS\",\"WITH\",\"ON\",\"FROM\",\"-\",\"USING\",\"HOW\",\"BY\",\"NEW\",\"INTO\",\"AN\",\"&\",\"WHAT\",\"ABOUT\",2020,\"ARE\",\"AT\",\"IT\",\"CHANGE\",\"FIRST\",10,\"WORLD?????S\",\"USE\",\"OVER\",\"HAS\",\"|\",\"ONE\",2019,\"TIME\",2050,\"OR\",\"?????\",\":\"]\r\n// wordlist.map(e => options.push({value: e.name, label: e.name}))\r\ngreendb.map(e => {\r\n  e.keyword=e.Name.split(' ')\r\n  e.keyword.map(x => wordcount.push(x.toUpperCase()))    \r\n})\r\n\r\nconst wordresult = wordcount.filter(e => !wordAvoid.includes(e))\r\n// console.log(wordcount)\r\n\r\n\r\nconst counts = {};\r\n\r\nwordresult.map(num => counts[num] = counts[num] ? counts[num] + 1 : 1)\r\n\r\n\r\n// console.log(counts)\r\n\r\n\r\n// console.log(selectedOption)\r\nconst keysSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]})\r\nconsole.log(keysSorted);     // bar,me,you,foo\r\n\r\nconst freqSorted = Object.keys(counts).sort(function(b,a){return counts[a]-counts[b]}).map(key => counts[key]);\r\nconsole.log(freqSorted);\r\n\r\nkeysSorted.map((e,idx) => options.push({value:e,label:e+\" \"+freqSorted[idx]}) )\r\n\r\n\r\n  \r\nreturn (\r\n<div>\r\n{top5buttons('put')}\r\n<Select \r\noptions={options} \r\n// isMulti \r\nvalue={selectedOption}\r\nonChange={setSelectedOption}\r\n/>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}